[
  {
    "objectID": "tableau_main.html",
    "href": "tableau_main.html",
    "title": "Tableau training",
    "section": "",
    "text": "Session\nDate\nArea\nLevel"
  },
  {
    "objectID": "tableau_main.html#tableau-training-schedule",
    "href": "tableau_main.html#tableau-training-schedule",
    "title": "Tableau training",
    "section": "",
    "text": "Session\nDate\nArea\nLevel"
  },
  {
    "objectID": "tableau/KIND_TfB_s03.html",
    "href": "tableau/KIND_TfB_s03.html",
    "title": "Tableau for Beginners (session 3)",
    "section": "",
    "text": "Warning\n\n\n\n\n\nThis is currently a draft version of the materials for this training session, and so may contain minor errors and inaccuracies.\nNo feedback found for this session"
  },
  {
    "objectID": "tableau/KIND_TfB_s03.html#session-outline",
    "href": "tableau/KIND_TfB_s03.html#session-outline",
    "title": "Tableau for Beginners (session 3)",
    "section": "Session outline",
    "text": "Session outline\n\ntoday’s session is all about data wrangling\n\nwe’ll take the raw data files used to produce the data we used last week\nwe’ll import them into Tableau and organize them\nthen we’ll tidy them up as needed\nwe’ll aim to re-create the GP practice map from last week as a final objective"
  },
  {
    "objectID": "tableau/KIND_TfB_s03.html#session-files",
    "href": "tableau/KIND_TfB_s03.html#session-files",
    "title": "Tableau for Beginners (session 3)",
    "section": "Session files",
    "text": "Session files\n\nfour .csv files\n\n\n1 - practices.csv from PHS’s opendata portal\n\n\n2 - boards.csv rom PHS’s opendata portal\n\n\n3 - demographics.csv from PHS’s opendata portal\n\n\n4 - postcodes.csv from the Scottish Postcode Directory - although note that the supplied file is a small subset of this larger directory\n\n\nlink to completed dashboard"
  },
  {
    "objectID": "tableau/KIND_TfB_s03.html#getting-started",
    "href": "tableau/KIND_TfB_s03.html#getting-started",
    "title": "Tableau for Beginners (session 3)",
    "section": "Getting started",
    "text": "Getting started\n\n\n\n\n\n\nTask\n\n\n\n\ngo to https://public.tableau.com/app/\nselect Web Authoring from the Create menu  \n\nfrom the Data menu, select New Data Source \n\ndrag and drop (or use the upload button) to add the 1 - practices.csv file\nrepeat to add the other three files"
  },
  {
    "objectID": "tableau/KIND_TfB_s03.html#add-each-files-to-the-data-model",
    "href": "tableau/KIND_TfB_s03.html#add-each-files-to-the-data-model",
    "title": "Tableau for Beginners (session 3)",
    "section": "Add each files to the data model",
    "text": "Add each files to the data model\n\n\n\n\n\n\nTask\n\n\n\n\nnow double-click each of your data files to add them to the data model  \n\nTableau should guess the relationships in your data, and show these relationships by unbroken lines\nbut one of these won’t work properly \n\nlink the two Practice Code fields together to relate these parts of the data\n\nyou should end up with four data sources, all related together"
  },
  {
    "objectID": "tableau/KIND_TfB_s03.html#trying-out-our-data",
    "href": "tableau/KIND_TfB_s03.html#trying-out-our-data",
    "title": "Tableau for Beginners (session 3)",
    "section": "Trying out our data",
    "text": "Trying out our data\n\n\n\n\n\n\nTask\n\n\n\n\ncreate a new worksheet \n\nre-create the map:\n\n\nLatitude to Rows - and ensure you set this as a dimensionc\n\n\nLongitude to Columns - again, dimension\n\nGP Practice Name to Detail\n\n\nHB Name to Colour"
  },
  {
    "objectID": "tableau/KIND_TfB_s03.html#demographics",
    "href": "tableau/KIND_TfB_s03.html#demographics",
    "title": "Tableau for Beginners (session 3)",
    "section": "Demographics",
    "text": "Demographics\n\n\n\n\n\n\nTask\n\n\n\n\ndemographics has lots of cols\nunlike the example in session 2, we don’t have a Measure Values item to play with\ngo back to the data, which is hard to work with\nhide all the QFs\n\nnow pivot the data \n\nit’ll take some time to perform the extract, but once you’ve returned to your worksheet, you should now be able to plot the demographics"
  },
  {
    "objectID": "tableau/KIND_TfB_s03.html#going-an-easier-way",
    "href": "tableau/KIND_TfB_s03.html#going-an-easier-way",
    "title": "Tableau for Beginners (session 3)",
    "section": "Going an easier way",
    "text": "Going an easier way\n\nwe recommend using Excel and PowerQuery (or other tools) to pivot your data if possible\nif you don’t have this available, you can find a pre-pivoted dataset in the training materials (3b - demographics_p.csv)\n\n\n\n\n\n\n\nTask\n\n\n\n\nOpen your dataset (3 - demographics.csv) with Excel\nconvert the data to a table by selecting somewhere within it, and pressing Ctrl+T\n\nthen select Data &gt;&gt; From Table / Range to open PowerQuery \n\nUse the Remove columns tool to remove the id, Date, HSPC, and HB columns"
  },
  {
    "objectID": "tableau/KIND_TfB_s03.html#re-shaping-data",
    "href": "tableau/KIND_TfB_s03.html#re-shaping-data",
    "title": "Tableau for Beginners (session 3)",
    "section": "Re-shaping data",
    "text": "Re-shaping data\n\n\n\n\n\n\nTask\n\n\n\n\nSelect the PracticeCode and Sex columns, then select Unpivot Other Columns\n\n\n\n\n\nThat should give us our data in long form:  \n\nwe can now remove unwanted values by filtering \n\n\n\n\n\n\n\n\nTask\n\n\n\n\nFrom the Attribute column, please remove the QF rows,\nFrom the Attribute column, please remove the AllAges rows\nFrom the Sex column, please remove the All rows"
  },
  {
    "objectID": "tableau/KIND_TfB_s03.html#transforming-values",
    "href": "tableau/KIND_TfB_s03.html#transforming-values",
    "title": "Tableau for Beginners (session 3)",
    "section": "Transforming values",
    "text": "Transforming values\n\nthe last type of reshaping to show off is about transforming values\n\n\n\n\n\n\n\nTask\n\n\n\n\nSplit the Attribute column by Digit to Non-digit\n\nreplace values in the new Attribute.1 column to remove the “Ages”\nthen in Attribute.2, two replacements to remove the “to”s and replace the “plus” with 99\n\nthen rename the columns to age_upper and age_lower\n\nfinally, change the data type to whole number for each of those new columns"
  },
  {
    "objectID": "tableau/KIND_TfB_s03.html#homework-tasks",
    "href": "tableau/KIND_TfB_s03.html#homework-tasks",
    "title": "Tableau for Beginners (session 3)",
    "section": "Homework tasks",
    "text": "Homework tasks"
  },
  {
    "objectID": "tableau/KIND_TfB_s01.html",
    "href": "tableau/KIND_TfB_s01.html",
    "title": "Tableau for Beginners (session 1)",
    "section": "",
    "text": "Warning\n\n\n\n\n\nThis is currently a draft version of the materials for this training session, and so may contain minor errors and inaccuracies.\nNo feedback found for this session"
  },
  {
    "objectID": "tableau/KIND_TfB_s01.html#session-outline",
    "href": "tableau/KIND_TfB_s01.html#session-outline",
    "title": "Tableau for Beginners (session 1)",
    "section": "Session outline",
    "text": "Session outline\n\nintroducing Tableau Public\n\nwhat is it for?\nhow does it work?\n\n\ndoing things with Tableau Public\n\nloading data\nmanipulating data\nvisualising data"
  },
  {
    "objectID": "tableau/KIND_TfB_s01.html#two-words-of-warning",
    "href": "tableau/KIND_TfB_s01.html#two-words-of-warning",
    "title": "Tableau for Beginners (session 1)",
    "section": "Two words of warning…",
    "text": "Two words of warning…\n\nThis course uses Tableau Public. Most of the skills here are transferable to other versions of Tableau, but you’ll need Tableau Public to follow the examples step-by-step\nLicencing and publication can be complicated in Tableau. We don’t discuss that much here, but it’s important to understand the implications if you’re planning to use it in practice. The KIND Network is a good resource for those kinds of questions."
  },
  {
    "objectID": "tableau/KIND_TfB_s01.html#what-is-tableau-for",
    "href": "tableau/KIND_TfB_s01.html#what-is-tableau-for",
    "title": "Tableau for Beginners (session 1)",
    "section": "What is Tableau for?",
    "text": "What is Tableau for?\n\nCOVID19 case rates\nlots of PHS dashboards"
  },
  {
    "objectID": "tableau/KIND_TfB_s01.html#how-does-it-work",
    "href": "tableau/KIND_TfB_s01.html#how-does-it-work",
    "title": "Tableau for Beginners (session 1)",
    "section": "How does it work",
    "text": "How does it work\n\nTableau Public is (as the name suggests) a version of Tableau designed for public use\neverything you do in Tableau Public will be visible to the wider internet\n\n\n\n\n\n\n\nOptional caption (warning)\n\n\n\n\n\n\nTableau Public is totally unsuitable for any real data projects in health and social care\nIf in doubt, seek expert guidance from Information Governance/Caldicott/Information Security colleagues in your organisation"
  },
  {
    "objectID": "tableau/KIND_TfB_s01.html#session-files",
    "href": "tableau/KIND_TfB_s01.html#session-files",
    "title": "Tableau for Beginners (session 1)",
    "section": "Session files",
    "text": "Session files\n\n\ns01_data.xlsx data\nlink to completed dashboard project"
  },
  {
    "objectID": "tableau/KIND_TfB_s01.html#hospital-occupancy-data",
    "href": "tableau/KIND_TfB_s01.html#hospital-occupancy-data",
    "title": "Tableau for Beginners (session 1)",
    "section": "Hospital occupancy data",
    "text": "Hospital occupancy data\n\n\n\n\n\n\nTask\n\n\n\n\nopen data/s01_data.xlsx in Excel\nhave a look at the two sheets\nfind the names of the tables in the sheets (hint: F5)\nclose the Excel file"
  },
  {
    "objectID": "tableau/KIND_TfB_s01.html#open-tableau-public",
    "href": "tableau/KIND_TfB_s01.html#open-tableau-public",
    "title": "Tableau for Beginners (session 1)",
    "section": "Open Tableau Public",
    "text": "Open Tableau Public\n\n\n\n\n\n\nTask\n\n\n\n\ngo to https://public.tableau.com/app/\n\nselect Web Authoring from the Create menu"
  },
  {
    "objectID": "tableau/KIND_TfB_s01.html#loading-data",
    "href": "tableau/KIND_TfB_s01.html#loading-data",
    "title": "Tableau for Beginners (session 1)",
    "section": "Loading data",
    "text": "Loading data\n\n\n\n\n\n\nTask\n\n\n\n\nfrom the Data menu, select New Data Source \n\ndrag and drop (or use the upload button) to add the s01_data.xlsx file"
  },
  {
    "objectID": "tableau/KIND_TfB_s01.html#hospital-occupancy-data-1",
    "href": "tableau/KIND_TfB_s01.html#hospital-occupancy-data-1",
    "title": "Tableau for Beginners (session 1)",
    "section": "Hospital occupancy data",
    "text": "Hospital occupancy data\n\n\n\n\n\n\nTask\n\n\n\n\nyou should now see the two worksheets from the Excel workbook in the left-hand bar  \n\ndrag occupancy_sh into the main pane to extract the data it contains into Tableau   and click Create Extract\n\nfinally, click Publish As  and give your workbook a suitable name"
  },
  {
    "objectID": "tableau/KIND_TfB_s01.html#hello-world",
    "href": "tableau/KIND_TfB_s01.html#hello-world",
    "title": "Tableau for Beginners (session 1)",
    "section": "Hello world!",
    "text": "Hello world!\n\nlet’s make a time-series graph from our data\n\n\n\n\n\n\n\nTask\n\n\n\n\nfrom the left-hand Data menu, drag the Date table into the Columns shelf, and Occupied Beds into the Rows shelf \n\nyou’ll see that Tableau has aggregated our data in a slightly unhelpful way \n\nyou can change the way data is aggregated from the dropdown menu each data item has on its shelf \n\nchange the Date to Exact date to produce a time-series graph"
  },
  {
    "objectID": "tableau/KIND_TfB_s01.html#making-our-chart-more-useful",
    "href": "tableau/KIND_TfB_s01.html#making-our-chart-more-useful",
    "title": "Tableau for Beginners (session 1)",
    "section": "Making our chart more useful",
    "text": "Making our chart more useful\n\n\n\n\n\n\nTask\n\n\n\n\nnow try dragging the WardName table onto the Colour area of the Marks menu \n\nthat should split the data into different series, one per ward"
  },
  {
    "objectID": "tableau/KIND_TfB_s01.html#changing-the-data",
    "href": "tableau/KIND_TfB_s01.html#changing-the-data",
    "title": "Tableau for Beginners (session 1)",
    "section": "Changing the data",
    "text": "Changing the data\n\n\n\n\n\n\nTask\n\n\n\n\nopen data/s01_data.xlsx in Excel (again)\nchange some of the values\nclose the file in Excel (essential) and return to Tableau\nnow Edit Data Source , then Edit Connection...  and re-upload the file\nnavigate back to Sheet 1  and you should see your (ruined) graph \n\nfinally, go back to Excel, fix your data, and re-upload to fix your graph"
  },
  {
    "objectID": "tableau/KIND_TfB_s01.html#some-minor-fixes",
    "href": "tableau/KIND_TfB_s01.html#some-minor-fixes",
    "title": "Tableau for Beginners (session 1)",
    "section": "Some minor fixes",
    "text": "Some minor fixes\n\n\n\n\n\n\nTask\n\n\n\n\nour wards are in an odd order \n\nso navigate to the Ward Name table, and select Default Properties &gt;&gt; Sort from the dropdown menu  where you can then switch them to alphabetical order (or whatever else you like): \n\ngive your worksheet a descriptive title (something like “Bed occupancy”) by double-clicking in the tab at the bottom edge of the window \n\nyou should see that the graph title updates to suit"
  },
  {
    "objectID": "tableau/KIND_TfB_s01.html#calculated-field",
    "href": "tableau/KIND_TfB_s01.html#calculated-field",
    "title": "Tableau for Beginners (session 1)",
    "section": "Calculated Field",
    "text": "Calculated Field\n\nwe can calculate fields, then visualize them\nwe could calculate something simple for each ward - how about the number of non-closed beds available?\n\n\n\n\n\n\n\nTask\n\n\n\n\nadd a new worksheet  \n\nthen, from the Data menu, select Create &gt;&gt; Calculated Field... from one of your tables \n\nthen enter the following formula: [Bed Comp] - ([Occupied Beds] + [Closed Bed])"
  },
  {
    "objectID": "tableau/KIND_TfB_s01.html#showing-off-our-work",
    "href": "tableau/KIND_TfB_s01.html#showing-off-our-work",
    "title": "Tableau for Beginners (session 1)",
    "section": "Showing off our work",
    "text": "Showing off our work\n\n\n\n\n\n\nTask\n\n\n\n\nselect New Dashboard from the tab at the bottom edge of the window \n\ndrag your Bed occupancy worksheet onto the dashboard  {height=“300px”)}\nand click Publish\n\n\n\n\n\nyou should then be able to see a public preview of your dashboard in your profile"
  },
  {
    "objectID": "tableau/KIND_TfB_s01.html#homework-tasks",
    "href": "tableau/KIND_TfB_s01.html#homework-tasks",
    "title": "Tableau for Beginners (session 1)",
    "section": "Homework tasks",
    "text": "Homework tasks\n\nTry using the filters pane to play with your dashboard. How do filters change your visualization?\nCan you plot the Available Beds table as a time series on a new worksheet?\nCould you find a neat way of visualizing how often a ward becomes overcrowded?"
  },
  {
    "objectID": "skills/referencing.html",
    "href": "skills/referencing.html",
    "title": "Referencing",
    "section": "",
    "text": "8 previous attendees have left feedback\n100% would recommend this session to a colleague\n100% said that this session was pitched correctly\n\n\n\n\n\n\n\n\n\n\n\nThree random comments from previous attendees\n\n\n\n\nIt was good, learned a lot. Perhaps would be helpful if the specific keys used were stated more often as its easy to forget with all the cells.\nHelpful introduction explaining purposes of referencing and identifying two key styles for Health. Good real world examples and tips. Reassuring to know that use of italics or brackets is variation on a style and not definitive - OK to choose as long as keep consistent.\nGreat intro / refresher on referencing - been so long since uni (where, along with my degree, I obtained a certificate of proficiency in Word 3.1!) that digital referencing is a whole new world to me. Useful links to additional materials as always too."
  },
  {
    "objectID": "skills/referencing.html#previous-attendees-have-said",
    "href": "skills/referencing.html#previous-attendees-have-said",
    "title": "Referencing",
    "section": "",
    "text": "8 previous attendees have left feedback\n100% would recommend this session to a colleague\n100% said that this session was pitched correctly\n\n\n\n\n\n\n\n\n\n\n\nThree random comments from previous attendees\n\n\n\n\nIt was good, learned a lot. Perhaps would be helpful if the specific keys used were stated more often as its easy to forget with all the cells.\nHelpful introduction explaining purposes of referencing and identifying two key styles for Health. Good real world examples and tips. Reassuring to know that use of italics or brackets is variation on a style and not definitive - OK to choose as long as keep consistent.\nGreat intro / refresher on referencing - been so long since uni (where, along with my degree, I obtained a certificate of proficiency in Word 3.1!) that digital referencing is a whole new world to me. Useful links to additional materials as always too."
  },
  {
    "objectID": "skills/referencing.html#welcome",
    "href": "skills/referencing.html#welcome",
    "title": "Referencing",
    "section": "Welcome",
    "text": "Welcome\n\nthis session is for 🌶🌶 intermediate users with some prior experience of academic writing"
  },
  {
    "objectID": "skills/referencing.html#session-outline",
    "href": "skills/referencing.html#session-outline",
    "title": "Referencing",
    "section": "Session outline",
    "text": "Session outline\n\nhow and why to reference?\nreferencing styles\npractice some referencing\nand talk about sources of referencing data, and strategies for managing your references"
  },
  {
    "objectID": "skills/referencing.html#how-to-reference",
    "href": "skills/referencing.html#how-to-reference",
    "title": "Referencing",
    "section": "How to reference",
    "text": "How to reference\n\nif you use a source in a substantive way when writing, include a short and stereotyped mention of that source (aka a reference)"
  },
  {
    "objectID": "skills/referencing.html#why-reference",
    "href": "skills/referencing.html#why-reference",
    "title": "Referencing",
    "section": "Why reference?",
    "text": "Why reference?\n\nto show where an idea comes from - the scholarly breadcrumb trail\nto fend off controversy when introducing difficult ideas\nto save yourself work\nto avoid allegations of impropriety"
  },
  {
    "objectID": "skills/referencing.html#referencing-styles",
    "href": "skills/referencing.html#referencing-styles",
    "title": "Referencing",
    "section": "Referencing styles",
    "text": "Referencing styles\n\nthere are lots of different styles\nno-one agrees which is best/correct/right\npedants delight in the details, and you will often see minor differences in style in different places. See the narcissism of small differences - by and large, the details are irrelevant and pointless\nclarity and consistency beats, by a long way, specific scheme trivia\nif in doubt, ask two simple questions:"
  },
  {
    "objectID": "skills/referencing.html#the-key-questions",
    "href": "skills/referencing.html#the-key-questions",
    "title": "Referencing",
    "section": "The key questions",
    "text": "The key questions\n\ncan you find your source from your reference?\nare my references consistent across my work\n\nVancouver (AMA)\n\neach work is numbered by order of appearance\nuse that number in the text as your citation: (2)\n\nordered list of end-notes as your bibliography:\n\n\n\nO’Neil C. Weapons of Math Destruction: How Big Data Increases Inequality and Threatens Democracy. London: Allen Lane; 2016.\n\n\nHarvard\n\neach work gets a unique author-year identifier\nthat identifier is used in the text as your citation: (O'Neil, 2016)\n\nbibliography ordered by first-author surname and year:\n\n\nO’Neil, Cathy. 2016. Weapons of Math Destruction: How Big Data Increases Inequality and Threatens Democracy. London: Allen Lane.\n\nWhich to use?\nHarvard\n\nstrengths\n\nAllows pin-point referencing of single pages\nGreat when readers are likely to be familiar with some sources\nEasy to troubleshoot\n\n\nweaknesses\n\nVerbose and distracting, particularly if you have lots of references in a single sentence - (3-11) rather than (see Smith, 1901; Smith, 1902; Smith, 1903)\n\nHarder to create\n\n\nVancouver\n\nstrengths\n\nConcise\nGreat for short papers with comparatively few references\n\n\nweaknesses\n\nBad for per-page pinpoint references\nUngainly for longer documents\nEdits might necessitate renumbering"
  },
  {
    "objectID": "skills/referencing.html#practical",
    "href": "skills/referencing.html#practical",
    "title": "Referencing",
    "section": "Practical",
    "text": "Practical\n\nhere are some resources:\na Knowledge Network link to a book\n\na link to a concise Vancouver style guide from the University of Lancaster\n\na link to a similar Harvard guide from Anglia Ruskin University\n\nplease can you write a reference in both Vancouver and Harvard style?\nthe in-text citation\nthe end-of-document reference\n\nDifferent types of source need different handling\n\nhere’s a link to a (famous) journal article\n\nplease could you repeat your referencing exercise using this different source?"
  },
  {
    "objectID": "skills/referencing.html#referencing-tools",
    "href": "skills/referencing.html#referencing-tools",
    "title": "Referencing",
    "section": "Referencing tools",
    "text": "Referencing tools\nWord referencing\n\nmany people just typing in references manually at the foot of the document\nthis is probably the best way of working if you’re dealing with a very few references (say, less than 10)\nbut there’s an inflection point at about 10 references, where the manual approach gets horrid\nWord referencing how-to\n\nyou’ll need the citation tools menu  \n\nadd a reference by Manage Sources \n\nselect a reference style (APA is approximately Harvard)\nadd in-text citations with Insert Citation\n\nadd a bibliography with Bibliography\n\nPros and cons of Word referencing\n\n✔️ quick and convenient\n✔️ uses a familiar tool\n❌ need to download dubious add-ons to change style\n❌ bibliographic data needs manually-entering, and is hard to re-use"
  },
  {
    "objectID": "skills/referencing.html#refworks",
    "href": "skills/referencing.html#refworks",
    "title": "Referencing",
    "section": "Refworks",
    "text": "Refworks\n\nThe Knowledge Network resources on Refworks\n\nBibtex\n\nFOSS- and code-friendly format for storing bibliographic data\nwidely-interpretable\n\n@article{oneil2016, \n  author = \"Cathy O'Neil\", \n  Title = {Weapons of Math Destruction: How Big Data Increases Inequality and Threatens Democracy}, \n  publisher = \"Allen Lane\",\n  city = \"London\",\n  YEAR = 2016, \n} \n\ne.g. adding [@oneil2016] in Quarto generates a citation: (O’Neil 2016)\n\nand we’ll gain a bibliography at the end of the slides\nPros and cons of bibtext\n\n✔️ powerful and flexible\n✔️ allows you to manage large bibliographies with big serious tools (like JabRef)\n❌ finding clean data is a challenge, and manual tidying is tedious\n❌ for the code-friendly, or code-curious"
  },
  {
    "objectID": "skills/referencing.html#feedback-and-resources",
    "href": "skills/referencing.html#feedback-and-resources",
    "title": "Referencing",
    "section": "Feedback and resources",
    "text": "Feedback and resources\n\nlots of decent, quick guides online\nif you really need chrome-plated precision about referencing:\n\nThe Oxford Style Manual\nThe Chicago Manual of Style"
  },
  {
    "objectID": "skills/neural_nets.html",
    "href": "skills/neural_nets.html",
    "title": "Neural Networks made ridiculously simple",
    "section": "",
    "text": "8 previous attendees have left feedback\n100% would recommend this session to a colleague\n100% said that this session was pitched correctly\n\n\n\n\n\n\n\n\n\n\n\nThree random comments from previous attendees\n\n\n\n\nReally interesting intro into neural networks, good explanation about the history and development. Good level of info for an introduction session which has made me want to look up more about neural networks and AI\nengaging. Good balance of principles and examples\nGreat introductions to the origin and concept of Neural Networks."
  },
  {
    "objectID": "skills/neural_nets.html#previous-attendees-have-said",
    "href": "skills/neural_nets.html#previous-attendees-have-said",
    "title": "Neural Networks made ridiculously simple",
    "section": "",
    "text": "8 previous attendees have left feedback\n100% would recommend this session to a colleague\n100% said that this session was pitched correctly\n\n\n\n\n\n\n\n\n\n\n\nThree random comments from previous attendees\n\n\n\n\nReally interesting intro into neural networks, good explanation about the history and development. Good level of info for an introduction session which has made me want to look up more about neural networks and AI\nengaging. Good balance of principles and examples\nGreat introductions to the origin and concept of Neural Networks."
  },
  {
    "objectID": "skills/neural_nets.html#welcome",
    "href": "skills/neural_nets.html#welcome",
    "title": "Neural Networks made ridiculously simple",
    "section": "Welcome",
    "text": "Welcome\n\nthis session is 🌶: for beginners"
  },
  {
    "objectID": "skills/neural_nets.html#whats-this-session-for",
    "href": "skills/neural_nets.html#whats-this-session-for",
    "title": "Neural Networks made ridiculously simple",
    "section": "What’s this session for?",
    "text": "What’s this session for?\n\nneural nets are a core technology for AI/ML systems\nthey’ve been around for decades (and probably will go on for decades)\nthey’re also particularly helpful for health & care folk as a way of understanding AI/ML tools in general"
  },
  {
    "objectID": "skills/neural_nets.html#what-this-session-wont-do",
    "href": "skills/neural_nets.html#what-this-session-wont-do",
    "title": "Neural Networks made ridiculously simple",
    "section": "What this session won’t do",
    "text": "What this session won’t do\n\ngive a general introduction to AI/ML\nexplain how to build a neural net of your very own\ndiscuss in any detail the (often formidable) maths of neural nets"
  },
  {
    "objectID": "skills/neural_nets.html#biology-the-neurone",
    "href": "skills/neural_nets.html#biology-the-neurone",
    "title": "Neural Networks made ridiculously simple",
    "section": "Biology: the neurone",
    "text": "Biology: the neurone\n\n\nWikiMedia\n\n\n\nbiological neurones:\n\nreceive some input from an upstream neuron(s)\nprocess that input in some way\ngenerate some output(s) in response to that input, and pass it downstream"
  },
  {
    "objectID": "skills/neural_nets.html#biology-activation",
    "href": "skills/neural_nets.html#biology-activation",
    "title": "Neural Networks made ridiculously simple",
    "section": "Biology: activation",
    "text": "Biology: activation\n\n\nhttps://upload.wikimedia.org/wikipedia/commons/thumb/4/4a/Action_potential.svg/778px-Action_potential.svg.png\n\n\nneurones respond to stimulii\n\nthreshold-y\napproximately digital output (on/off)\nsometimes complex behaviour about inputs"
  },
  {
    "objectID": "skills/neural_nets.html#biology-networks-of-neurones",
    "href": "skills/neural_nets.html#biology-networks-of-neurones",
    "title": "Neural Networks made ridiculously simple",
    "section": "Biology: networks of neurones",
    "text": "Biology: networks of neurones\n\n\nwikimedia\n\n\nneurones are usually found in networks\ncan produce complex and sophisticated behaviours in a robust way  \n\nnon-obvious relationships between structure and function"
  },
  {
    "objectID": "skills/neural_nets.html#machines-the-node",
    "href": "skills/neural_nets.html#machines-the-node",
    "title": "Neural Networks made ridiculously simple",
    "section": "Machines: the node",
    "text": "Machines: the node\nHere’s a simple representation of a node, implemented in code, that we might find in a neural network:"
  },
  {
    "objectID": "skills/neural_nets.html#machines-activation-functions",
    "href": "skills/neural_nets.html#machines-activation-functions",
    "title": "Neural Networks made ridiculously simple",
    "section": "Machines: activation functions",
    "text": "Machines: activation functions\nHere are some example input:output pairs for our node:\n\n\nthere are lots of possible activation functions\na simple one: NOT\n\nour node outputs TRUE when we input FALSE, and vice versa\n\n\n\nThis flexibility means that we can build networks of nodes (hence neural networks). Again, a very simple example:"
  },
  {
    "objectID": "skills/neural_nets.html#activation-functions-can-be-extremely-simple",
    "href": "skills/neural_nets.html#activation-functions-can-be-extremely-simple",
    "title": "Neural Networks made ridiculously simple",
    "section": "Activation functions can be extremely simple",
    "text": "Activation functions can be extremely simple\n\nnode &lt;- function(input){\n  !input\n}\n\nnode(TRUE)\n\n[1] FALSE"
  },
  {
    "objectID": "skills/neural_nets.html#machines-networks-of-nodes",
    "href": "skills/neural_nets.html#machines-networks-of-nodes",
    "title": "Neural Networks made ridiculously simple",
    "section": "Machines: networks of nodes",
    "text": "Machines: networks of nodes"
  },
  {
    "objectID": "skills/neural_nets.html#machines-networks-of-nodes-1",
    "href": "skills/neural_nets.html#machines-networks-of-nodes-1",
    "title": "Neural Networks made ridiculously simple",
    "section": "Machines: networks of nodes",
    "text": "Machines: networks of nodes\n\nnodes are usually found in networks\ncan produce complex and sophisticated behaviours in a robust way  \n\nagain, non-obvious relationships between structure and function in artifical neural networks (ANN)\n\n\nA user supplies some input. That input is fed into an input node(s), which processes the input, and produces three different outputs that are then fed into a second layer of nodes. Further processing happens in this hidden layer, leading to three outputs that are integrated together in a final output node that processes the outputs of the hidden layer into a single output."
  },
  {
    "objectID": "skills/neural_nets.html#several-kinds-of-networks",
    "href": "skills/neural_nets.html#several-kinds-of-networks",
    "title": "Neural Networks made ridiculously simple",
    "section": "Several kinds of networks",
    "text": "Several kinds of networks\n\nthere are lots of ways that neural networks can be arranged\nour example above = feed-forward\n\nall the nodes are connected from left-to-right\n\n\nbut more complex architectures - like recurrent neural networks - might have feedback looks and other biological-ish features\ndifferent numbers of layers\nlots of different design tendencies since the first intro of neural nets in the 1950s [@rosenblatt1958]\n\nmost fancy ANNs are currently architecturally simple"
  },
  {
    "objectID": "skills/neural_nets.html#why-anns",
    "href": "skills/neural_nets.html#why-anns",
    "title": "Neural Networks made ridiculously simple",
    "section": "Why ANNs?",
    "text": "Why ANNs?\n\nANNs can can potentially replicate any input-output ransformation\nwe do that by a) increasing complexity and b) allowing them to ‘learn’\n\n. . ."
  },
  {
    "objectID": "skills/neural_nets.html#different-activation-functions",
    "href": "skills/neural_nets.html#different-activation-functions",
    "title": "Neural Networks made ridiculously simple",
    "section": "Different activation functions",
    "text": "Different activation functions\n\nbinary (true/false)\ncontinuous\n\nlinear\nnon-linear (like sigmoid, ReLU)"
  },
  {
    "objectID": "skills/neural_nets.html#training-in-neural-networks",
    "href": "skills/neural_nets.html#training-in-neural-networks",
    "title": "Neural Networks made ridiculously simple",
    "section": "Training in neural networks",
    "text": "Training in neural networks\n\nANNs can be trained\n\ntake a dataset\nsplit it into training and test parts\n\nclassify (by hand) the training data\n\n\nthen train\n\nfeed your ANN the training data and evaluate how well it performs\nmodify the ANN based on that evaluation\nrepeat until done/bored/perfect\n\n\nfinally, test your model with your unlabelled test data and evaluate"
  },
  {
    "objectID": "skills/neural_nets.html#mnist",
    "href": "skills/neural_nets.html#mnist",
    "title": "Neural Networks made ridiculously simple",
    "section": "MNIST",
    "text": "MNIST\n\na classic dataset \n\nrecognizing handwritten numbers = actually-important task\n60000 labelled training images\n10000 test images\neach is a 28*28 pixel matrix grey vales encoded as 0-255"
  },
  {
    "objectID": "skills/neural_nets.html#mnist-data-example",
    "href": "skills/neural_nets.html#mnist-data-example",
    "title": "Neural Networks made ridiculously simple",
    "section": "MNIST data example",
    "text": "MNIST data example\n\n\n\n\nV10\nV11\nV12\nV13\nV14\nV15\nV16\nV17\nV18\nV19\nV20\n\n\n\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n\n\n0\n0\n0\n3\n18\n18\n18\n126\n136\n175\n26\n\n\n36\n94\n154\n170\n253\n253\n253\n253\n253\n225\n172\n\n\n253\n253\n253\n253\n253\n253\n253\n253\n251\n93\n82\n\n\n253\n253\n253\n253\n253\n198\n182\n247\n241\n0\n0\n\n\n156\n107\n253\n253\n205\n11\n0\n43\n154\n0\n0"
  },
  {
    "objectID": "skills/neural_nets.html#train-for-mnist",
    "href": "skills/neural_nets.html#train-for-mnist",
    "title": "Neural Networks made ridiculously simple",
    "section": "Train for MNIST",
    "text": "Train for MNIST\n\ntake your training data\nput together a neural network (number of nodes, layers, feedback, activation functions)\nrun the training data, and evaluate based on labelling\nmodify your neural network, rinse, and repeat\n…\nwhen happy, try the unlabelled test data"
  },
  {
    "objectID": "skills/neural_nets.html#mnist-examples",
    "href": "skills/neural_nets.html#mnist-examples",
    "title": "Neural Networks made ridiculously simple",
    "section": "MNIST examples",
    "text": "MNIST examples\n\nlots of different examples\nwhy do this work in an ANN, rather than in some other tool?\n\ngeneric training strategy - reduces need for domain knowledge\nhopefully robust outcomes - so giving models able to work across contexts\nscalable"
  },
  {
    "objectID": "skills/neural_nets.html#mnist-in-r",
    "href": "skills/neural_nets.html#mnist-in-r",
    "title": "Neural Networks made ridiculously simple",
    "section": "MNIST in R",
    "text": "MNIST in R\nAn aside here for the R enthusiasts - we can plot the handwritten numbers back out of the data using ggplot():\n\nmnist_plot_dat &lt;- function(df) {\n   # matrix to pivoted tibble for plotting\n  df |&gt;\n      as_tibble() |&gt;\n      mutate(rn = row_number()) |&gt;\n      tidyr::pivot_longer(!rn) |&gt;\n      mutate(name = as.numeric(gsub(\"V\", \"\", name)))\n}\n\nmnist_main_plot &lt;- function(df) {\n  df |&gt;\n    ggplot() +\n    geom_tile(aes(\n      x = rn,\n      y = reorder(name,-name),\n      fill = value\n    )) +\n    scale_fill_gradient2(mid = \"white\", high = \"black\")\n}\n\nmnist_plot &lt;- function(n){\n\n  mnist_plot_dat(matrix(mnist$train$images[n, ], 28, 28)) |&gt;\n    mnist_main_plot() +\n      ggtitle(glue(\"Label: { mnist$train$labels[n]}\")) +\n      theme_void() +\n      theme(legend.position = \"none\")\n\n}\n\ngridExtra::grid.arrange(grobs = purrr::map(1:36, mnist_plot), nrow = 6, top=\"Some MNIST examples\")"
  },
  {
    "objectID": "skills/ebm_05.html",
    "href": "skills/ebm_05.html",
    "title": "An introduction to EBM (session 5)",
    "section": "",
    "text": "this session is all about what happens beyond the RCT?\nwe’ll recap some of the issues we discussed last time as motivation\nthen we’ll introduce and discuss a pair of ways of summarising multiple RCTs\nwe’ll relate these two methods back to our earlier discussions about bias\nand we’ll look at a totally different way of solving some of the problems of RCTs"
  },
  {
    "objectID": "skills/ebm_05.html#session-outline",
    "href": "skills/ebm_05.html#session-outline",
    "title": "An introduction to EBM (session 5)",
    "section": "",
    "text": "this session is all about what happens beyond the RCT?\nwe’ll recap some of the issues we discussed last time as motivation\nthen we’ll introduce and discuss a pair of ways of summarising multiple RCTs\nwe’ll relate these two methods back to our earlier discussions about bias\nand we’ll look at a totally different way of solving some of the problems of RCTs"
  },
  {
    "objectID": "skills/ebm_05.html#recap",
    "href": "skills/ebm_05.html#recap",
    "title": "An introduction to EBM (session 5)",
    "section": "Recap",
    "text": "Recap\n\ndetecting treatment effects is hard\n\neffects are subtle\ntrials have practical problems (like recruitment)\n\n\nstudies are often underpowered\n\nso they fail to find a real treatment effect\n\n\nthat causes harm\n\nsome valuable treatments get ignored\nsome harmful treatments remain in use"
  },
  {
    "objectID": "skills/ebm_05.html#e1-the-logo",
    "href": "skills/ebm_05.html#e1-the-logo",
    "title": "An introduction to EBM (session 5)",
    "section": "E1: the logo",
    "text": "E1: the logo\n\n\n\n\n\n\nTask\n\n\n\n\nPlease visit https://www.cochrane.org/\n\nTwo questions for the chat:\n\nWhat does Cochrane do?\nWhat does their logo show?"
  },
  {
    "objectID": "skills/ebm_05.html#cochrane-story",
    "href": "skills/ebm_05.html#cochrane-story",
    "title": "An introduction to EBM (session 5)",
    "section": "Cochrane story",
    "text": "Cochrane story\n\nData from randomised trials before 1980 of corticosteroid therapy in premature labour and its effect on neonatal death.\n\n\n\n\n\n\n\n\nIdentifier\nDeaths (Treatment)\nn (Treatment)\nDeaths (Control)\nn (Control)\n\n\n\nAuckland\n36\n532\n60\n538\n\n\nBlock\n1\n69\n5\n61\n\n\nDoran\n4\n81\n11\n63\n\n\nGamsu\n14\n131\n20\n137\n\n\nMorrison\n3\n67\n7\n59\n\n\nPapageorgiou\n1\n71\n7\n75\n\n\nTauesch\n8\n56\n10\n71"
  },
  {
    "objectID": "skills/ebm_05.html#forest-plots",
    "href": "skills/ebm_05.html#forest-plots",
    "title": "An introduction to EBM (session 5)",
    "section": "Forest plots",
    "text": "Forest plots\n\n\n\n\n\nuseful intro\none row per study\nbox size corresponds with study size (weight)\nbox location corresponds with odds ratio (OR)\nwhiskers (horizonal lines) showing the confidence interval of that OR\npooled effect show by the diamond\n\nsize = total weight\nhorizontal limits = confidence interval\n\n\n\n\n\nhow would you interpret the line representing a study crossing 1?\nhow can individual lines cross 1, but the pooled diamond not cross 1?"
  },
  {
    "objectID": "skills/ebm_05.html#e2-from-1982-to-2020",
    "href": "skills/ebm_05.html#e2-from-1982-to-2020",
    "title": "An introduction to EBM (session 5)",
    "section": "E2: from 1982 to 2020",
    "text": "E2: from 1982 to 2020\n\n\n\n\n\n\nTask\n\n\n\n\nFind the current version of this Cochrane review\n\nWhat are the main current recommendations?"
  },
  {
    "objectID": "skills/ebm_05.html#current-recommendations",
    "href": "skills/ebm_05.html#current-recommendations",
    "title": "An introduction to EBM (session 5)",
    "section": "Current recommendations",
    "text": "Current recommendations\n ## Cochrane reviews are systematic reviews\n\nA systematic review attempts to identify, appraise and synthesize all the empirical evidence that meets pre-specified eligibility criteria to answer a specific research question (Cochrane library)"
  },
  {
    "objectID": "skills/ebm_05.html#explicit-strategies",
    "href": "skills/ebm_05.html#explicit-strategies",
    "title": "An introduction to EBM (session 5)",
    "section": "Explicit strategies",
    "text": "Explicit strategies\n\nlike EBM itself\ne.g. Preferred Reporting Items for Systematic Reviews and Meta-Analyses (PRISMA)"
  },
  {
    "objectID": "skills/ebm_05.html#whats-the-difference",
    "href": "skills/ebm_05.html#whats-the-difference",
    "title": "An introduction to EBM (session 5)",
    "section": "What’s the difference?",
    "text": "What’s the difference?\n\nsystematic reviews attempt to include all the relevant studies\nmeta-analyses include some relevant studies\nthat might give rise to biases…\n\nE3: bias and MA/SR\n\n\n\n\n\n\nTask\n\n\n\n\n\nSome authors argue that systematic reviews should generally be preferred to meta-analyses on the ground of bias. Can you think of biases that might affect MA, but not SR?\nCan you think of different reasons why you might prefer a MA, rather than a SR?"
  },
  {
    "objectID": "skills/ebm_05.html#bad-pharma",
    "href": "skills/ebm_05.html#bad-pharma",
    "title": "An introduction to EBM (session 5)",
    "section": "Bad pharma",
    "text": "Bad pharma\n\n\n\n\n\nundue influence of industry on drug research\nplus\nexcessive emphasis on the methods of trials, rather than their conduct\nplus\npressure to perform larger, cleaner, RCTs\nproduces\na “murderous disaster” (Goldacre 2012)"
  },
  {
    "objectID": "skills/ebm_05.html#internal-and-external-validity",
    "href": "skills/ebm_05.html#internal-and-external-validity",
    "title": "An introduction to EBM (session 5)",
    "section": "Internal and external validity",
    "text": "Internal and external validity\n\nMA/SR can improve internal validity\n\ne.g. aggregating improves power, so more likely to detect true effects\n\n\nbut they might do this at the expense of reducing external validity\n\ne.g. our trial population might be more and more unlike our treatment population\n\n\nand reducing external validity might mean that an intervention might fail in ways that are hard to understand (Cartwright 2012)"
  },
  {
    "objectID": "skills/ebm_05.html#trial-and-treatment-populations",
    "href": "skills/ebm_05.html#trial-and-treatment-populations",
    "title": "An introduction to EBM (session 5)",
    "section": "Trial and treatment populations",
    "text": "Trial and treatment populations\n\n\nwildly dis-similar (Fortin 2006)\n\nco-morbidity example\n\na database of 980 general-practice patients were assessed against inclusion critera from 5 blood pressure RCTs\nof eligible patients “89% to 100% had multiple chronic conditions”\n\nmean numbers ranged from 5.5 ± 3.3 to 11.7 ± 5.3"
  },
  {
    "objectID": "skills/ebm_05.html#pragmatic-trials",
    "href": "skills/ebm_05.html#pragmatic-trials",
    "title": "An introduction to EBM (session 5)",
    "section": "Pragmatic trials",
    "text": "Pragmatic trials\n\n\n(Patsopoulos 2011)"
  },
  {
    "objectID": "skills/ebm_05.html#final-thought",
    "href": "skills/ebm_05.html#final-thought",
    "title": "An introduction to EBM (session 5)",
    "section": "Final thought",
    "text": "Final thought\n\nso there isn’t going to be a simple answer about where on the precise / pragmatic spectrum we should end up\n\nit’s an optimisation problem\n\n\nas EBM started by stressing the importance of explicit/judicious/conscientious use of evidence, we should probably adopt similar standards for our decision making in general\n\nexplicit about the kind of q we’re answering\njudicious about the way we use evidence to answer it\nconscientious in updating, revising, and checking our answers, and our methods"
  },
  {
    "objectID": "skills/ebm_03.html",
    "href": "skills/ebm_03.html",
    "title": "An introduction to EBM (session 3)",
    "section": "",
    "text": "this session gives an outline of a set of EBM methods\nas we’ve seen, the methods of EBM have varied\nthis session gives a single consistent set of methods from one source\nwe’ll dodge most of the statistical content for now"
  },
  {
    "objectID": "skills/ebm_03.html#session-outline",
    "href": "skills/ebm_03.html#session-outline",
    "title": "An introduction to EBM (session 3)",
    "section": "",
    "text": "this session gives an outline of a set of EBM methods\nas we’ve seen, the methods of EBM have varied\nthis session gives a single consistent set of methods from one source\nwe’ll dodge most of the statistical content for now"
  },
  {
    "objectID": "skills/ebm_03.html#e0-pick-a-paper",
    "href": "skills/ebm_03.html#e0-pick-a-paper",
    "title": "An introduction to EBM (session 3)",
    "section": "E0: pick a paper",
    "text": "E0: pick a paper\n\n\n\n\n\n\nTask\n\n\n\n\nPlease make sure you’ve got access to the core reading for this session (Greenhalgh 2019)\nPlease pick an RCT from the list\n\n\n\n\n\n\n\nAbraham et al. (2019)\nAli et al. (2022)\nChen-Hussey et al. (2013)\nChlibek et al. (2013)\nGallien et al. (2014)\n\n\n\n\n\nGarbutt et al. (2021)\nMaddison et al. (2018)\nTadrous et al. (2020)\nTapiainen et al. (2014)\nTonelli et al. (2015)"
  },
  {
    "objectID": "skills/ebm_03.html#exercises",
    "href": "skills/ebm_03.html#exercises",
    "title": "An introduction to EBM (session 3)",
    "section": "Exercises",
    "text": "Exercises\n\nE1: formulate\nE2: beware of browsing\nE3: three preliminary questions\nE4: summing up\nE5: aggregating evidence"
  },
  {
    "objectID": "skills/ebm_03.html#why-do-we-need-this-at-all",
    "href": "skills/ebm_03.html#why-do-we-need-this-at-all",
    "title": "An introduction to EBM (session 3)",
    "section": "Why do we need this at all?",
    "text": "Why do we need this at all?\n\nmost published papers are bilge, nonsense, and drivel:\n\n\nfor many current scientific fields, claimed research findings may often be simply accurate measures of the prevailing bias (Ioannidis 2005)\n\n\nthat means we need effective, quick, and coherent ways of judging published research to answer questions"
  },
  {
    "objectID": "skills/ebm_03.html#spurious-causes",
    "href": "skills/ebm_03.html#spurious-causes",
    "title": "An introduction to EBM (session 3)",
    "section": "Spurious causes",
    "text": "Spurious causes\n\nLeibovici (2001) - see paper abstract\nObjective: To determine whether remote, retroactive intercessory prayer, said for a group of patients with a bloodstream infection, has an effect on outcomes.\nDesign: Double blind, parallel group, randomised controlled trial of a retroactive intervention.\nSetting: University hospital.\nSubjects: All 3393 adult patients whose bloodstream infection was detected at the hospital in 1990-6."
  },
  {
    "objectID": "skills/ebm_03.html#spurious-causes-1",
    "href": "skills/ebm_03.html#spurious-causes-1",
    "title": "An introduction to EBM (session 3)",
    "section": "Spurious causes",
    "text": "Spurious causes\n\nIntervention: In July 2000 patients were randomised to a control group and an intervention group. A remote, retroactive intercessory prayer was said for the well being and full recovery of the intervention group.\nMain outcome measures: Mortality in hospital, length of stay in hospital, and duration of fever.\nResults: Mortality was 28.1% (475/1691) in the intervention group and 30.2% (514/1702) in the control group (P for difference=0.4). Length of stay in hospital and duration of fever were significantly shorter in the intervention group than in the control group (P=0.01 and P=0.04, respectively).\n\n\nThese results, however, need to be interpreted with caution. There was no significant difference between the two groups with regard to the most clinically important outcome (mortality), and the median values varied little between prayer and non-prayer on both length of stay (seven and eight days) and duration of fever (two days each). The religious affiliation of the person saying the prayer is not given. Many religious groups do not accept the power of prayer given by those with different beliefs. If real, the effect of prayer shown in this study may be unrelated to supernatural power and hence to a particular belief system, or may be specific to beliefs, reflecting the power inherent in a particular religion. Further work is needed in this area before conclusions can be made. (Thornett 2002)"
  },
  {
    "objectID": "skills/ebm_03.html#structure-of-the-book",
    "href": "skills/ebm_03.html#structure-of-the-book",
    "title": "An introduction to EBM (session 3)",
    "section": "Structure of the book",
    "text": "Structure of the book\n\nformulate (chapter 1)\nretrieve (chapter 2)\nappraise (chapter 3 - 15)\napply and evaluate (chapter 16, and other work)\nwe’ll mainly discuss appraisal today, with a side-order of formulate and retrieve, and we’ll neglect application and evaluation"
  },
  {
    "objectID": "skills/ebm_03.html#formulate",
    "href": "skills/ebm_03.html#formulate",
    "title": "An introduction to EBM (session 3)",
    "section": "Formulate",
    "text": "Formulate\n\n\n\nFormulate a research question"
  },
  {
    "objectID": "skills/ebm_03.html#e1-formulate",
    "href": "skills/ebm_03.html#e1-formulate",
    "title": "An introduction to EBM (session 3)",
    "section": "E1: formulate",
    "text": "E1: formulate\n\n\n\n\n\n\nTask\n\n\n\n\nFrom the paper that you selected for this session, we’d like you to work backwards, by formulating a question your paper could potentially answer\n\nWhom might this apply to?\nWhich intervention (or group of interventions) would you know about?\nWhich outcomes would you know about?\n\nPlease be ready to share in the chat"
  },
  {
    "objectID": "skills/ebm_03.html#retrieve",
    "href": "skills/ebm_03.html#retrieve",
    "title": "An introduction to EBM (session 3)",
    "section": "Retrieve",
    "text": "Retrieve\n\ncontrast three kinds of searching:\n\nbrowsing\nlooking\nsurveying\n\nwhy might Greenhalgh worry about the effects of a casual internet search for evidence?\nin EBM, we’re generally keen on either systematic looking, or surveying the literature"
  },
  {
    "objectID": "skills/ebm_03.html#e2-beware-of-browsing",
    "href": "skills/ebm_03.html#e2-beware-of-browsing",
    "title": "An introduction to EBM (session 3)",
    "section": "E2: beware of browsing",
    "text": "E2: beware of browsing\n\n\n\n\n\n\nTask\n\n\n\n\nSearch the topic covered in your selected paper\nIn the chat, please let us know:\n\nWhich evidence appears at the top of your search?\nIf that evidence aligns with your selected paper?\n\nCan you link this strategy to our earlier concerns about bias?"
  },
  {
    "objectID": "skills/ebm_03.html#retrieve-1",
    "href": "skills/ebm_03.html#retrieve-1",
    "title": "An introduction to EBM (session 3)",
    "section": "Retrieve",
    "text": "Retrieve\n\nwe need an unbiased method for finding evidence\n\nor, at least, a retrieval method that is biased in a consistent way\n\ncolleagues in The Knowledge Network have good specialist training and support available"
  },
  {
    "objectID": "skills/ebm_03.html#core-sources",
    "href": "skills/ebm_03.html#core-sources",
    "title": "An introduction to EBM (session 3)",
    "section": "Core sources",
    "text": "Core sources\n\nThe Knowledge Network for training, catalogues, access to other material, experts…\nPubMed for full papers\nCochrane library for systematic reviews\nBMJ Best Practice and DynaMed for evidence summaries\nSIGN, NICE, and TRIP for guidelines"
  },
  {
    "objectID": "skills/ebm_03.html#appraise",
    "href": "skills/ebm_03.html#appraise",
    "title": "An introduction to EBM (session 3)",
    "section": "Appraise",
    "text": "Appraise\n\ncore ideas:\n\n“all evidence…is not necessarily equivalent”\nmethods give us insight into the likely quality of evidence\n\nlevels of evidence: we should judge evidence by methods, rather than the results obtained"
  },
  {
    "objectID": "skills/ebm_03.html#traditional-levels-of-evidence",
    "href": "skills/ebm_03.html#traditional-levels-of-evidence",
    "title": "An introduction to EBM (session 3)",
    "section": "Traditional levels of evidence",
    "text": "Traditional levels of evidence\n\n\n\nGreenhalgh (2019)\n\n\n\nrule of thumb\ndisagreements about specific rankings, and methods of ranking"
  },
  {
    "objectID": "skills/ebm_03.html#e3-three-preliminary-questions",
    "href": "skills/ebm_03.html#e3-three-preliminary-questions",
    "title": "An introduction to EBM (session 3)",
    "section": "E3: three preliminary questions",
    "text": "E3: three preliminary questions\n\nWhy was the study needed - and what was the research question?\nWhat was the research design?\nWas the research design appropriate to the question?\n\n\n\n\n\n\n\nTask\n\n\n\n\nPlease answer the three preliminary questions for your paper"
  },
  {
    "objectID": "skills/ebm_03.html#research-design",
    "href": "skills/ebm_03.html#research-design",
    "title": "An introduction to EBM (session 3)",
    "section": "Research design",
    "text": "Research design\n\n\n\n\n\nBroad fields of research\n\n\n\n\ntreatment - RCT\ndiagnosis - cross-sectional\nscreening - cross-sectional\nprognosis - longitudinal\ncausation - cohort / case-control / pluralism"
  },
  {
    "objectID": "skills/ebm_03.html#quality",
    "href": "skills/ebm_03.html#quality",
    "title": "An introduction to EBM (session 3)",
    "section": "Quality",
    "text": "Quality\n\ndoes it add anything to the literature?\nwhat was the trial population like?\nwas the comparison between interventions fair and sensible?\nwhat were the outcomes?\nhow was follow-up?"
  },
  {
    "objectID": "skills/ebm_03.html#intent-to-treat",
    "href": "skills/ebm_03.html#intent-to-treat",
    "title": "An introduction to EBM (session 3)",
    "section": "Intent-to-treat",
    "text": "Intent-to-treat\n\nIntent-to-treat is the principle of including all withdrawals as if they had completed the trial\nWhy is this important?"
  },
  {
    "objectID": "skills/ebm_03.html#an-example",
    "href": "skills/ebm_03.html#an-example",
    "title": "An introduction to EBM (session 3)",
    "section": "An example",
    "text": "An example\n\n“This is a questionnaire survey of 963 general practitioners randomly selected from throughout the UK, in which they were asked their year of graduation from medical school and the level at which they would begin treatment for essential hypertension. Response options on the structured questionnaire were ‘below 89mmHg’, ‘90-99mmHg’ and ‘100mmHg or greater’."
  },
  {
    "objectID": "skills/ebm_03.html#e4-summing-up",
    "href": "skills/ebm_03.html#e4-summing-up",
    "title": "An introduction to EBM (session 3)",
    "section": "E4: summing up",
    "text": "E4: summing up\n\n\n\n\n\n\nTask\n\n\n\n\nGreenhalgh gives some nice summary paragraphs (p. 58-9) showing:\n\nwhat sort of study was performed\nn, and where they came from\nwhat treatment(s) were compared\nthe length and type of follow-up\nthe outcome measure used\n\nCan you write one for your paper?"
  },
  {
    "objectID": "skills/ebm_03.html#aggregating-evidence",
    "href": "skills/ebm_03.html#aggregating-evidence",
    "title": "An introduction to EBM (session 3)",
    "section": "Aggregating evidence",
    "text": "Aggregating evidence\n\nmeta-analysis = join together the results of several RCTs\nsystematic reviews = join together the results of all the RCTs"
  },
  {
    "objectID": "skills/ebm_03.html#e5-aggregating-evidence",
    "href": "skills/ebm_03.html#e5-aggregating-evidence",
    "title": "An introduction to EBM (session 3)",
    "section": "E5: aggregating evidence",
    "text": "E5: aggregating evidence\n\n\n\n\n\n\nTask\n\n\n\n\nCan you find a meta-analysis or systematic review for your topic?\n\n\n\n\nThe Knowledge Network for training, catalogues, access to other material, experts…\nPubMed for full papers\nCochrane library for systematic reviews\nBMJ Best Practice and DynaMed for evidence summaries\nSIGN, NICE, and TRIP for guidelines"
  },
  {
    "objectID": "skills/ebm_01.html",
    "href": "skills/ebm_01.html",
    "title": "An introduction to EBM (session 1)",
    "section": "",
    "text": "This session aims to introduce the theory and practice of evidence-based health and care practice.\n\nwe’ll begin with a simple introduction to evidence-based medicine (EBM)\nwe’ll then work through a series of exercises\n\nto show both the problems that EBM solves, and the methods it uses to solve them\n\nwe’ll introduce a mini-guide to finding, appraising, and reading a paper\n\nthen taking what you’ve learned, and making a decision\n\nthen we’ll set up a core EBM topic: the ranking of evidence\nand we’ll finish by looking at the wider EB* family, of which EBM is just one member"
  },
  {
    "objectID": "skills/ebm_01.html#session-outline",
    "href": "skills/ebm_01.html#session-outline",
    "title": "An introduction to EBM (session 1)",
    "section": "",
    "text": "This session aims to introduce the theory and practice of evidence-based health and care practice.\n\nwe’ll begin with a simple introduction to evidence-based medicine (EBM)\nwe’ll then work through a series of exercises\n\nto show both the problems that EBM solves, and the methods it uses to solve them\n\nwe’ll introduce a mini-guide to finding, appraising, and reading a paper\n\nthen taking what you’ve learned, and making a decision\n\nthen we’ll set up a core EBM topic: the ranking of evidence\nand we’ll finish by looking at the wider EB* family, of which EBM is just one member"
  },
  {
    "objectID": "skills/ebm_01.html#exercises",
    "href": "skills/ebm_01.html#exercises",
    "title": "An introduction to EBM (session 1)",
    "section": "Exercises",
    "text": "Exercises\n\nE1: find a paper\nE2: the EBM way\nE3: bias, confounding, and effect sizes\nE4: a mini-appraisal\nE5: your EB*"
  },
  {
    "objectID": "skills/ebm_01.html#the-sentence",
    "href": "skills/ebm_01.html#the-sentence",
    "title": "An introduction to EBM (session 1)",
    "section": "The sentence",
    "text": "The sentence\nEvidence-based medicine (EBM) is the:\n\n“conscientious, explicit and judicious use of current best evidence in making decisions about the care of individual patients” (David L. Sackett et al. 1996)"
  },
  {
    "objectID": "skills/ebm_01.html#meaning",
    "href": "skills/ebm_01.html#meaning",
    "title": "An introduction to EBM (session 1)",
    "section": "Meaning?",
    "text": "Meaning?\nEBM as a set of standards for making decisions in medicine:\n\nconscientious: using evidence wherever possible\nexplicit: naming the evidence that you’ve relied on to make a decision\njudicious: applying standards to judge that evidence"
  },
  {
    "objectID": "skills/ebm_01.html#ebms-domain",
    "href": "skills/ebm_01.html#ebms-domain",
    "title": "An introduction to EBM (session 1)",
    "section": "EBM’s domain",
    "text": "EBM’s domain\n\nclinical\nindividual care\n“current best”"
  },
  {
    "objectID": "skills/ebm_01.html#the-half-life-of-facts",
    "href": "skills/ebm_01.html#the-half-life-of-facts",
    "title": "An introduction to EBM (session 1)",
    "section": "The half-life of facts",
    "text": "The half-life of facts\n\n\n\nTruth survival in original articles on hepatitis and cirrhosis (Poynard et al. 2002)"
  },
  {
    "objectID": "skills/ebm_01.html#e1-find-a-paper",
    "href": "skills/ebm_01.html#e1-find-a-paper",
    "title": "An introduction to EBM (session 1)",
    "section": "E1: find a paper",
    "text": "E1: find a paper\n\n\n\n\n\n\nTask\n\n\n\n\ngo to the Knowledge Network home page\nfind a paper about your area of work\nspend three minutes having a look at the paper\nplease share one conclusion / takeaway from it in the chat"
  },
  {
    "objectID": "skills/ebm_01.html#the-takeaway-from-e1-papers-are-hard",
    "href": "skills/ebm_01.html#the-takeaway-from-e1-papers-are-hard",
    "title": "An introduction to EBM (session 1)",
    "section": "The takeaway from E1: papers are hard!",
    "text": "The takeaway from E1: papers are hard!\n\nit’s often not very obvious how a paper should change our practice\n\ncomplicated, poorly written, annoying…\nfallible\nexcessively abstract\ndeal with unfamiliar problems\nmake many suggestions"
  },
  {
    "objectID": "skills/ebm_01.html#the-sentence-1",
    "href": "skills/ebm_01.html#the-sentence-1",
    "title": "An introduction to EBM (session 1)",
    "section": "The sentence",
    "text": "The sentence\nEvidence-based medicine (EBM) is the:\n\n“conscientious, explicit and judicious use of current best evidence in making decisions about the care of individual patients” (David L. Sackett et al. 1996)\n\nReacting against non-systematic approaches to using evidence to make decisions"
  },
  {
    "objectID": "skills/ebm_01.html#ebm-methods-give-us-a-system-for-using-evidence-to-make-decisiosn",
    "href": "skills/ebm_01.html#ebm-methods-give-us-a-system-for-using-evidence-to-make-decisiosn",
    "title": "An introduction to EBM (session 1)",
    "section": "EBM methods give us a system for using evidence to make decisiosn",
    "text": "EBM methods give us a system for using evidence to make decisiosn\n\nhaving a system simplifies that journey from evidence to decision\npicking out which research we can trust\nshowing us which conclusions we should incorporate into our practice\nsubtly, suggesting that we go from decision to evidence, rather than absorbing all the evidence then making decisions"
  },
  {
    "objectID": "skills/ebm_01.html#e2-the-ebm-way",
    "href": "skills/ebm_01.html#e2-the-ebm-way",
    "title": "An introduction to EBM (session 1)",
    "section": "E2: the EBM way",
    "text": "E2: the EBM way\n\n\n\n\n\n\nTask\n\n\n\n\nplease reflect on the reasons that you might trust or distrust the paper that you found in E1\nplease put a reason to trust the paper, and a reason to distrust it, into the chat"
  },
  {
    "objectID": "skills/ebm_01.html#narrowing-the-scope-of-inquiry",
    "href": "skills/ebm_01.html#narrowing-the-scope-of-inquiry",
    "title": "An introduction to EBM (session 1)",
    "section": "Narrowing the scope of inquiry",
    "text": "Narrowing the scope of inquiry\n\nmethods\n\nwas the trial randomised?\nwere the pre-trial groups similar?\napart from treatment, were the groups treated similarly?\nwas anyone lost to follow-up?\nwas there appropriate masking?\n\neffect\n\nhow large was the effect?\nhow precisely was the effect measured?\n\nrelevance\n\nare the results relevant to my practice?"
  },
  {
    "objectID": "skills/ebm_01.html#three-central-concerns-in-ebm",
    "href": "skills/ebm_01.html#three-central-concerns-in-ebm",
    "title": "An introduction to EBM (session 1)",
    "section": "Three central concerns in EBM",
    "text": "Three central concerns in EBM\n\nbias\nconfounding\neffect sizes"
  },
  {
    "objectID": "skills/ebm_01.html#bias-in-general-is-boring",
    "href": "skills/ebm_01.html#bias-in-general-is-boring",
    "title": "An introduction to EBM (session 1)",
    "section": "Bias in general is boring",
    "text": "Bias in general is boring\n\nAKA “systematic error”\n\n\n“We define bias as…deviation from the truth” (Boutron et al. 2023)"
  },
  {
    "objectID": "skills/ebm_01.html#specific-biases-are-fascinating",
    "href": "skills/ebm_01.html#specific-biases-are-fascinating",
    "title": "An introduction to EBM (session 1)",
    "section": "Specific biases are fascinating",
    "text": "Specific biases are fascinating\n\n\n\n(David L. Sackett 1979)"
  },
  {
    "objectID": "skills/ebm_01.html#specific-biases-are-fascinating-1",
    "href": "skills/ebm_01.html#specific-biases-are-fascinating-1",
    "title": "An introduction to EBM (session 1)",
    "section": "Specific biases are fascinating",
    "text": "Specific biases are fascinating\n\nCEBM’s catalogue of biases\nEBM in very broad terms tries to minimise important biases"
  },
  {
    "objectID": "skills/ebm_01.html#confounding-is-probably-the-most-important-bias",
    "href": "skills/ebm_01.html#confounding-is-probably-the-most-important-bias",
    "title": "An introduction to EBM (session 1)",
    "section": "Confounding is probably the most important bias",
    "text": "Confounding is probably the most important bias\n\n\nWhat we think is happening\n\n\n\nExposure causes outcome\n\n\n\nWhat’s actually happening"
  },
  {
    "objectID": "skills/ebm_01.html#e3-bias-confounding-and-effect-sizes",
    "href": "skills/ebm_01.html#e3-bias-confounding-and-effect-sizes",
    "title": "An introduction to EBM (session 1)",
    "section": "E3: bias, confounding, and effect sizes",
    "text": "E3: bias, confounding, and effect sizes\n\n\n\n\n\n\nTask\n\n\n\n\ntake a look at this plot of coronary artery disease rates: \nwhat type of plot is this?\nhow would you explain the main finding here in simple terms?\nwhat might explain the difference between the two groups?"
  },
  {
    "objectID": "skills/ebm_01.html#confounding-and-coffee",
    "href": "skills/ebm_01.html#confounding-and-coffee",
    "title": "An introduction to EBM (session 1)",
    "section": "Confounding and coffee",
    "text": "Confounding and coffee\n\n\n\n\n\nCoffee correlation\n\n\n\n\nwhen the potential confounding effect from smoking is controlled for, coffee drinking does not appear to be a lung cancer risk factor (Galarraga and Boffetta 2016)\n\nThanks to Noora Salem (NHS GGC) for this example"
  },
  {
    "objectID": "skills/ebm_01.html#blobbograms-or-forest-plot",
    "href": "skills/ebm_01.html#blobbograms-or-forest-plot",
    "title": "An introduction to EBM (session 1)",
    "section": "Blobbograms (or forest plot)",
    "text": "Blobbograms (or forest plot)\n\n\n\nBlobbogram polling"
  },
  {
    "objectID": "skills/ebm_01.html#guarding-against-bias-through-judgement",
    "href": "skills/ebm_01.html#guarding-against-bias-through-judgement",
    "title": "An introduction to EBM (session 1)",
    "section": "Guarding against bias through judgement",
    "text": "Guarding against bias through judgement\n\nthe core EBM methods are specifically designed to guard against bias and confounding\n\nrandomisation ensures that different groups are comparable\nmasking ensures fair measurement of effects\nreporting how individuals were followed-up prevents distorting results\n\nalso provide a standard set of tools for expressing effect sizes\n\nfor instance, the use of confidence intervals\n\nwe’ll do this conscientiously by appraising each piece of evidence in the same way"
  },
  {
    "objectID": "skills/ebm_01.html#e4-a-mini-appraisal",
    "href": "skills/ebm_01.html#e4-a-mini-appraisal",
    "title": "An introduction to EBM (session 1)",
    "section": "E4: a mini-appraisal",
    "text": "E4: a mini-appraisal\n\n\n\n\n\n\nTask\n\n\n\n\nopen the Oxford Centre for Evidence-Based Medicine RCT Critical Appraisal Sheet\nspend three minutes reading through\nplease re-report a finding from the paper from E1 using the critical appraisal sheet - put your finding in the chat"
  },
  {
    "objectID": "skills/ebm_01.html#from-appraisal-to-ranking",
    "href": "skills/ebm_01.html#from-appraisal-to-ranking",
    "title": "An introduction to EBM (session 1)",
    "section": "From appraisal to ranking",
    "text": "From appraisal to ranking\n\nbecause EBM introduced methods for appraising evidence, this gave rise to a ranking of kinds of evidence\nthat ranking of evidence will be a core topic for us in session 3"
  },
  {
    "objectID": "skills/ebm_01.html#beyond-the-care-of-the-individual-patient",
    "href": "skills/ebm_01.html#beyond-the-care-of-the-individual-patient",
    "title": "An introduction to EBM (session 1)",
    "section": "Beyond the care of the individual patient",
    "text": "Beyond the care of the individual patient\n\nEBM originally was about making individual clinical decisions about treatment from published research evidence\nthat scope has widened enormously over the past 30 years:\n\nto non-clinical domains of practice\nto guide the management of groups rather than individuals\nto support decisions about non-treatment questions\nto encompass other types of evidence"
  },
  {
    "objectID": "skills/ebm_01.html#e5-your-eb",
    "href": "skills/ebm_01.html#e5-your-eb",
    "title": "An introduction to EBM (session 1)",
    "section": "E5: your EB*",
    "text": "E5: your EB*\n\n\n\n\n\n\nTask\n\n\n\n\nin the chat, please give us a few words on these two questions:\n\n\nwhere can you see the conscientious, judicious, and explicit use of current best evidence in your practice?\nare there any areas of your practice that are not evidence-based in this way?"
  },
  {
    "objectID": "skills/ebm_01.html#beyond-the-individual-paper",
    "href": "skills/ebm_01.html#beyond-the-individual-paper",
    "title": "An introduction to EBM (session 1)",
    "section": "Beyond the individual paper",
    "text": "Beyond the individual paper\n\njust as the scope of EBM has changed over time, we’ll also see how the methods of EBM have changed too\n\npart of that reflects the widening of scope\npart of that is down to changes in publication practices\npart of that is down to changes in methodological emphasis\n\n\n. . .\n\n\n\n\n\n\nWarning\n\n\n\nThis means that very different practices have flown under the EBM banner at different times and in different places. To avoid contradictions, we’ll endorse a single coherent set of recommendations in this course, drawn from Greenhalgh (2019)."
  },
  {
    "objectID": "skills/ebm_01.html#and-beyond-the-sentence",
    "href": "skills/ebm_01.html#and-beyond-the-sentence",
    "title": "An introduction to EBM (session 1)",
    "section": "…and beyond the sentence",
    "text": "…and beyond the sentence\n\nEvidence-Based Medicine is the integration of best research evidence with clinical expertise and patient values.\n\n(Sackett DL, Straus SE, Richardson WS, et al. Evidence-based medicine: how to practice and teach EBM. 2nd ed. Edinburgh: Churchill Livingstone, 2000.)"
  },
  {
    "objectID": "skills/ebm_01.html#next-time",
    "href": "skills/ebm_01.html#next-time",
    "title": "An introduction to EBM (session 1)",
    "section": "Next time!",
    "text": "Next time!\n\nin the next session, we’ll look specifically at the most important trial methodology: the randomised control trial\nthat will set us up to think more carefully about bias and confounding, particularly as they relate to published evidence\nthat will set us up nicely for the next-next session, which is about the core EBM approach in"
  },
  {
    "objectID": "skills/an_introduction_to_ai_and_why_you_might_avoid_that_term.html",
    "href": "skills/an_introduction_to_ai_and_why_you_might_avoid_that_term.html",
    "title": "An introduction to AI (…and why you might avoid that term)",
    "section": "",
    "text": "18 previous attendees have left feedback\n100% would recommend this session to a colleague\n100% said that this session was pitched correctly\n\n\n\n\n\n\n\n\n\n\n\nThree random comments from previous attendees\n\n\n\n\nThe side discussions are always an exciting and valuable part of the informal training sessions - even the ones which are only tenuously linked. The content could have been offered as a slide deck … but it is the side discussions which add substantial value (and interest) beyond anything which could simply be trawled from the internet\nGood introduction to AI, the development of it, current uses and shortcomings, and possibilities for the future\nA good broad introduction to the different systems at play and understanding the terminology"
  },
  {
    "objectID": "skills/an_introduction_to_ai_and_why_you_might_avoid_that_term.html#previous-attendees-have-said",
    "href": "skills/an_introduction_to_ai_and_why_you_might_avoid_that_term.html#previous-attendees-have-said",
    "title": "An introduction to AI (…and why you might avoid that term)",
    "section": "",
    "text": "18 previous attendees have left feedback\n100% would recommend this session to a colleague\n100% said that this session was pitched correctly\n\n\n\n\n\n\n\n\n\n\n\nThree random comments from previous attendees\n\n\n\n\nThe side discussions are always an exciting and valuable part of the informal training sessions - even the ones which are only tenuously linked. The content could have been offered as a slide deck … but it is the side discussions which add substantial value (and interest) beyond anything which could simply be trawled from the internet\nGood introduction to AI, the development of it, current uses and shortcomings, and possibilities for the future\nA good broad introduction to the different systems at play and understanding the terminology"
  },
  {
    "objectID": "skills/an_introduction_to_ai_and_why_you_might_avoid_that_term.html#welcome",
    "href": "skills/an_introduction_to_ai_and_why_you_might_avoid_that_term.html#welcome",
    "title": "An introduction to AI (…and why you might avoid that term)",
    "section": "Welcome",
    "text": "Welcome\n\nthis session is 🌶: for beginners\nit aims to do two things:\n\n\nto suggest that the term AI is troublesome\nto introduce some of the different technologies that get lumped together as AI"
  },
  {
    "objectID": "skills/an_introduction_to_ai_and_why_you_might_avoid_that_term.html#a-philosophical-question",
    "href": "skills/an_introduction_to_ai_and_why_you_might_avoid_that_term.html#a-philosophical-question",
    "title": "An introduction to AI (…and why you might avoid that term)",
    "section": "A philosophical question",
    "text": "A philosophical question\n\ndo submarines swim?"
  },
  {
    "objectID": "skills/an_introduction_to_ai_and_why_you_might_avoid_that_term.html#hype",
    "href": "skills/an_introduction_to_ai_and_why_you_might_avoid_that_term.html#hype",
    "title": "An introduction to AI (…and why you might avoid that term)",
    "section": "Hype",
    "text": "Hype\n\nThere’s a lot of hype about AI at the moment (see this graph)\nUnderneath the hype, there’s a lot of genuinely exciting stuff going on too\nThat exciting stuff is likely to have some impact on health and care work"
  },
  {
    "objectID": "skills/an_introduction_to_ai_and_why_you_might_avoid_that_term.html#motive",
    "href": "skills/an_introduction_to_ai_and_why_you_might_avoid_that_term.html#motive",
    "title": "An introduction to AI (…and why you might avoid that term)",
    "section": "Motive",
    "text": "Motive\n\nThe intelligence part of AI is as misleading as a swimming submarine\nThere are lots of different technologies that currently fall under the AI umbrella\nPoints 1. and 2. matter in a practical way because of the hype"
  },
  {
    "objectID": "skills/an_introduction_to_ai_and_why_you_might_avoid_that_term.html#what-does-ai-mean-to-you",
    "href": "skills/an_introduction_to_ai_and_why_you_might_avoid_that_term.html#what-does-ai-mean-to-you",
    "title": "An introduction to AI (…and why you might avoid that term)",
    "section": "What does AI mean to you?",
    "text": "What does AI mean to you?\n\n\n\n\n\nHAL 9000\n\n\n\n\n\nThe Terminator\n\n\n\n\n\nGenerative AI image of the Pope’s coat\n\n\n\n\n\nSiri and other personal assistants"
  },
  {
    "objectID": "skills/an_introduction_to_ai_and_why_you_might_avoid_that_term.html#is-ai",
    "href": "skills/an_introduction_to_ai_and_why_you_might_avoid_that_term.html#is-ai",
    "title": "An introduction to AI (…and why you might avoid that term)",
    "section": "Is AI…",
    "text": "Is AI…\n\nOver-hyped?\nSomewhere in between?\nNeglected?\nOther / don’t know"
  },
  {
    "objectID": "skills/an_introduction_to_ai_and_why_you_might_avoid_that_term.html#about-this-talk",
    "href": "skills/an_introduction_to_ai_and_why_you_might_avoid_that_term.html#about-this-talk",
    "title": "An introduction to AI (…and why you might avoid that term)",
    "section": "About this talk",
    "text": "About this talk\nTwo linked problems:\n\na worry about intelligence: based on the swimming submarine\na worry about diversity: AI is several things, not just one thing"
  },
  {
    "objectID": "skills/an_introduction_to_ai_and_why_you_might_avoid_that_term.html#the-chinese-room",
    "href": "skills/an_introduction_to_ai_and_why_you_might_avoid_that_term.html#the-chinese-room",
    "title": "An introduction to AI (…and why you might avoid that term)",
    "section": "The Chinese room",
    "text": "The Chinese room\nSearle (1980)\n\n“Suppose that I’m locked in a room and given a large batch of Chinese writing. Suppose furthermore (as is indeed the case) that I know no Chinese, either written or spoken, and that I’m not even confident that I could recognize Chinese writing”\n\nHowever, he is supplied with a set of intelligible rules for manipulating these Chinese symbols\n“火” is the opposite of “水”\n“六” is more than “四”"
  },
  {
    "objectID": "skills/an_introduction_to_ai_and_why_you_might_avoid_that_term.html#question",
    "href": "skills/an_introduction_to_ai_and_why_you_might_avoid_that_term.html#question",
    "title": "An introduction to AI (…and why you might avoid that term)",
    "section": "Question",
    "text": "Question\nDoes this poor bloke locked in a room understand the Chinese symbols?\nNow suppose that we start asking him questions (in English):\nIs “六” more than “四”?\nIf so, respond with “是”. Otherwise respond “不”"
  },
  {
    "objectID": "skills/an_introduction_to_ai_and_why_you_might_avoid_that_term.html#question-1",
    "href": "skills/an_introduction_to_ai_and_why_you_might_avoid_that_term.html#question-1",
    "title": "An introduction to AI (…and why you might avoid that term)",
    "section": "Question",
    "text": "Question\n\nIs understanding the same thing as being able to produce output in response to input?\n\nSearle (1980) - this is the difference between strong and weak AI"
  },
  {
    "objectID": "skills/an_introduction_to_ai_and_why_you_might_avoid_that_term.html#back-to-nice-safe-words",
    "href": "skills/an_introduction_to_ai_and_why_you_might_avoid_that_term.html#back-to-nice-safe-words",
    "title": "An introduction to AI (…and why you might avoid that term)",
    "section": "Back to nice safe words",
    "text": "Back to nice safe words\n\nwe usually don’t worry too much about what words like intelligence, understanding, etc really mean\nfor most purposes, understanding something, and doing that thing, pretty well overlap\nAI, unfortunately, is an exception\nbig difference between producing output and understanding here"
  },
  {
    "objectID": "skills/an_introduction_to_ai_and_why_you_might_avoid_that_term.html#why-does-this-matter",
    "href": "skills/an_introduction_to_ai_and_why_you_might_avoid_that_term.html#why-does-this-matter",
    "title": "An introduction to AI (…and why you might avoid that term)",
    "section": "Why does this matter?",
    "text": "Why does this matter?\n\nBecause the current conversation around AI does violence to our usual understanding of basic terms (like intelligence)\n\nWe need to do a bit of re-interpreting…\n…particularly because AI can do the input-output part really well\n\n\n(side effect) The Chinese Room is an excellent way of understanding what’s going on inside some of the current tech"
  },
  {
    "objectID": "skills/an_introduction_to_ai_and_why_you_might_avoid_that_term.html#the-tech",
    "href": "skills/an_introduction_to_ai_and_why_you_might_avoid_that_term.html#the-tech",
    "title": "An introduction to AI (…and why you might avoid that term)",
    "section": "The tech",
    "text": "The tech\n\nAI = big umbrella term\nMore specific terms:\n\n\nAlgorithms = rule-based ways of producing sensible output\n\nExpert systems = more sophisticated expertise-based production of output\n\nMachine learning = umbrella term for non-expertise-based production of output\n\nLarge Language Models = a massively-succesful sub-species of machine learning"
  },
  {
    "objectID": "skills/an_introduction_to_ai_and_why_you_might_avoid_that_term.html#so-whats-an-algorithm",
    "href": "skills/an_introduction_to_ai_and_why_you_might_avoid_that_term.html#so-whats-an-algorithm",
    "title": "An introduction to AI (…and why you might avoid that term)",
    "section": "So what’s an algorithm?",
    "text": "So what’s an algorithm?\n\n\n(Packard 1979)\n\n\nAlgorithm = rule (roughly)\n\nif something happens, do something\n\n\nmade from expert input and evidence"
  },
  {
    "objectID": "skills/an_introduction_to_ai_and_why_you_might_avoid_that_term.html#an-example-algorithm",
    "href": "skills/an_introduction_to_ai_and_why_you_might_avoid_that_term.html#an-example-algorithm",
    "title": "An introduction to AI (…and why you might avoid that term)",
    "section": "An example algorithm",
    "text": "An example algorithm"
  },
  {
    "objectID": "skills/an_introduction_to_ai_and_why_you_might_avoid_that_term.html#related-expertise-based-tools",
    "href": "skills/an_introduction_to_ai_and_why_you_might_avoid_that_term.html#related-expertise-based-tools",
    "title": "An introduction to AI (…and why you might avoid that term)",
    "section": "Related expertise-based tools",
    "text": "Related expertise-based tools\n“See also…” references in indexes, library catalogues, wikipedia\n . . .\n\n\nBrilliant 1996 Master’s dissertation looking at the state of “see also…” referencing in Ohio’s public libraries"
  },
  {
    "objectID": "skills/an_introduction_to_ai_and_why_you_might_avoid_that_term.html#how-about-something-more-complicated",
    "href": "skills/an_introduction_to_ai_and_why_you_might_avoid_that_term.html#how-about-something-more-complicated",
    "title": "An introduction to AI (…and why you might avoid that term)",
    "section": "How about something more complicated?",
    "text": "How about something more complicated?\n\n\n\n\nPart of the MYCIN inference system\n\n\n\none problem with algorithms: how to handle conflicting information?\nAn expert system - MYCIN (Shortliffe and Buchanan 1975)\n\ndesigned to identify bacterial infections and suitable Rx\n600 rules, supplied by experts\nasks users a series of clinical questions\ncombines the answers using a (fairly simple) inference system\nable to manage some conflicting information - unlike simpler algorithms"
  },
  {
    "objectID": "skills/an_introduction_to_ai_and_why_you_might_avoid_that_term.html#machine-learning",
    "href": "skills/an_introduction_to_ai_and_why_you_might_avoid_that_term.html#machine-learning",
    "title": "An introduction to AI (…and why you might avoid that term)",
    "section": "Machine learning",
    "text": "Machine learning\n\nA next step: can we provide learning rules to a system, and let it figure out the details for itself?\n\n\n\nhttps://commons.wikimedia.org/wiki/File:Supervised_machine_learning_in_a_nutshell.svg"
  },
  {
    "objectID": "skills/an_introduction_to_ai_and_why_you_might_avoid_that_term.html#this-is-supervised-learning",
    "href": "skills/an_introduction_to_ai_and_why_you_might_avoid_that_term.html#this-is-supervised-learning",
    "title": "An introduction to AI (…and why you might avoid that term)",
    "section": "This is supervised learning",
    "text": "This is supervised learning\n\nsupervision = labelled observations used for training and testing\nLots of health examples with promising results:\n\ndiabetic retinopathy (Mookiah et al. 2013)\n\nECG (Aziz, Ahmed, and Alouini 2021)\n\nfractures, melanoma, …"
  },
  {
    "objectID": "skills/an_introduction_to_ai_and_why_you_might_avoid_that_term.html#a-dataset-downside",
    "href": "skills/an_introduction_to_ai_and_why_you_might_avoid_that_term.html#a-dataset-downside",
    "title": "An introduction to AI (…and why you might avoid that term)",
    "section": "A dataset downside",
    "text": "A dataset downside\n\n\n\n\nFashion-MNIST dataset\n\n\nProducing labelled datasets is hard:\n\ngenerally must be very large\ngenerally requires expert classification\nmust be done with great accuracy\n\nscale bar problem (Winkler et al. 2021)\n\n\n\nso dataset labelling is wildly expensive and thankless\n\nIs there a way of doing something similar without spending trillions classifying everything in the world by hand?"
  },
  {
    "objectID": "skills/an_introduction_to_ai_and_why_you_might_avoid_that_term.html#unsupervised-learning",
    "href": "skills/an_introduction_to_ai_and_why_you_might_avoid_that_term.html#unsupervised-learning",
    "title": "An introduction to AI (…and why you might avoid that term)",
    "section": "Unsupervised learning",
    "text": "Unsupervised learning\n\n\nEnglish-languge autocomplete suggestions"
  },
  {
    "objectID": "skills/an_introduction_to_ai_and_why_you_might_avoid_that_term.html#unsupervised-learning-1",
    "href": "skills/an_introduction_to_ai_and_why_you_might_avoid_that_term.html#unsupervised-learning-1",
    "title": "An introduction to AI (…and why you might avoid that term)",
    "section": "Unsupervised learning",
    "text": "Unsupervised learning\n\n\nAutocomplete sources"
  },
  {
    "objectID": "skills/an_introduction_to_ai_and_why_you_might_avoid_that_term.html#unsupervised-learning-2",
    "href": "skills/an_introduction_to_ai_and_why_you_might_avoid_that_term.html#unsupervised-learning-2",
    "title": "An introduction to AI (…and why you might avoid that term)",
    "section": "Unsupervised learning",
    "text": "Unsupervised learning\n\n\nGerman-languge autocomplete suggestions"
  },
  {
    "objectID": "skills/an_introduction_to_ai_and_why_you_might_avoid_that_term.html#unsupervised-learning-3",
    "href": "skills/an_introduction_to_ai_and_why_you_might_avoid_that_term.html#unsupervised-learning-3",
    "title": "An introduction to AI (…and why you might avoid that term)",
    "section": "Unsupervised learning",
    "text": "Unsupervised learning\n\nNo-one is writing a list of possible searches starting with “Large…”\nNor are they classifying searches into likely/unlikely, then training a model\nInstead, the model is looking at data (searches, language, location, trends) and calculating probabilities\n\n2011 blog post\n2020 PR piece\n2020 build your own in JS\n\n\nThe terminology gets confusing again at this point:\n\nsome describe this as deep learning\n\nbetter to call this a language model"
  },
  {
    "objectID": "skills/an_introduction_to_ai_and_why_you_might_avoid_that_term.html#large-language-models",
    "href": "skills/an_introduction_to_ai_and_why_you_might_avoid_that_term.html#large-language-models",
    "title": "An introduction to AI (…and why you might avoid that term)",
    "section": "Large language models",
    "text": "Large language models\nWhat if we were more ambitious with the scope of our language model?\n\n\n\n\nTransformer model architecture\n\n\n\nFind masses of language data\n\nchatGPT uses basically the whole web before September 2021\n\n\nBuild a model capable of finding patterns in that data\n\nAttention model used in chatGPT (Vaswani et al. 2017)\n\n\n\nAllow the model to calculate probabilities based on those patterns\n\nlots of work going on at present allowing models to improve in response to feedback etc"
  },
  {
    "objectID": "skills/an_introduction_to_ai_and_why_you_might_avoid_that_term.html#large-language-models-1",
    "href": "skills/an_introduction_to_ai_and_why_you_might_avoid_that_term.html#large-language-models-1",
    "title": "An introduction to AI (…and why you might avoid that term)",
    "section": "Large language models",
    "text": "Large language models\n\nsuperb at generating appropriate text, code, images, music…\nbut production vs understanding\n\ne.g. hallucinations, phantom functions…\n\n\ntraining is extremely computationally expensive\n\nquestions about inequality and regulatory moating\n\nno-one but FAANG-sized companies can afford to do this\n\n\ntraining is also surprisingly manual"
  },
  {
    "objectID": "skills/an_introduction_to_ai_and_why_you_might_avoid_that_term.html#ethics",
    "href": "skills/an_introduction_to_ai_and_why_you_might_avoid_that_term.html#ethics",
    "title": "An introduction to AI (…and why you might avoid that term)",
    "section": "Ethics",
    "text": "Ethics\n\nyour web content, my model, my paycheque\nwhere’s the consent here?\nbig serious worries about bias in some kinds of output\nrights violations via AI\nno settled questions around responsibility\nUK GDPR etc assume data is identifiable. That’s not true in LLMs."
  },
  {
    "objectID": "skills/an_introduction_to_ai_and_why_you_might_avoid_that_term.html#punchline",
    "href": "skills/an_introduction_to_ai_and_why_you_might_avoid_that_term.html#punchline",
    "title": "An introduction to AI (…and why you might avoid that term)",
    "section": "Punchline",
    "text": "Punchline\n\nOn balance, while there’s hype here, there’s also lots of substance and interest\nLLMs have become much better at producing plausible output, across a greatly expanded area\nA strength: fantastic ways for those with expertise to work faster\nA danger: LLMs are great at producing truth-like output. Good enough so that some will be tempted to use them to extend their apparent expertise…\nBut big serious legal and ethical trouble ahead - we’re not good at dealing with distributed responsibility"
  },
  {
    "objectID": "skills/an_introduction_to_ai_and_why_you_might_avoid_that_term.html#thumbs-up-for-specificity",
    "href": "skills/an_introduction_to_ai_and_why_you_might_avoid_that_term.html#thumbs-up-for-specificity",
    "title": "An introduction to AI (…and why you might avoid that term)",
    "section": "Thumbs-up for specificity",
    "text": "Thumbs-up for specificity\n\nmany of the touted benefits are technology-specific\n\ne.g. if we want to understand why decisions are getting made in a particular way, an expert system is better than a LLM\n\n\nwe should probably start asking “what do you mean by AI” whenever we’re trying to make decisions about it"
  },
  {
    "objectID": "skills/an_introduction_to_ai_and_why_you_might_avoid_that_term.html#conclusion",
    "href": "skills/an_introduction_to_ai_and_why_you_might_avoid_that_term.html#conclusion",
    "title": "An introduction to AI (…and why you might avoid that term)",
    "section": "Conclusion",
    "text": "Conclusion\n\nThe intelligence part of AI is as misleading as a swimming submarine\nThere are lots of different technologies that currently fall under the AI umbrella\npoints 1. and 2. really matter because of the hype"
  },
  {
    "objectID": "skills/an_introduction_to_ai_and_why_you_might_avoid_that_term.html#why-the-hype-matters",
    "href": "skills/an_introduction_to_ai_and_why_you_might_avoid_that_term.html#why-the-hype-matters",
    "title": "An introduction to AI (…and why you might avoid that term)",
    "section": "Why the hype matters",
    "text": "Why the hype matters\n\nhype leads to perverse incentives and malfescience: call any rubbish AI, and get paid for it\nthat means that both what we mean by AI, and what tech gets included, is extra-important at present - there’s an industry out there that’s profiting from blurring the boundaries"
  },
  {
    "objectID": "skills/HTML_non-web-devs.html",
    "href": "skills/HTML_non-web-devs.html",
    "title": "HTML for non-web developers",
    "section": "",
    "text": "No feedback found for this session"
  },
  {
    "objectID": "skills/HTML_non-web-devs.html#html",
    "href": "skills/HTML_non-web-devs.html#html",
    "title": "HTML for non-web developers",
    "section": "HTML?",
    "text": "HTML?\n\n= HyperText Markup Language\ndeveloped around 1990\nsince c. 1993, the standard language for writing web pages"
  },
  {
    "objectID": "skills/HTML_non-web-devs.html#html-structure",
    "href": "skills/HTML_non-web-devs.html#html-structure",
    "title": "HTML for non-web developers",
    "section": "HTML structure",
    "text": "HTML structure\n\nHTML is based on tags\n\ntags add information to text\nto make a heading in HTML, we’d take our heading text, and surround it with h2 tags:\n\n&lt;h2&gt;This is my heading&lt;/h2&gt;\n\n\nhundreds of tags in use"
  },
  {
    "objectID": "skills/HTML_non-web-devs.html#but",
    "href": "skills/HTML_non-web-devs.html#but",
    "title": "HTML for non-web developers",
    "section": "But!",
    "text": "But!\n\nthis session isn’t going to teach you loads of tags\nfor web developers, yes, do learn them! (also all the css and java that are used to display and style the information in the html)\nbut for everyone else - it’s being able to pick out the tag-based structure that’s useful\nfamily of similar languages (XML, JSON) that operate in a similar way"
  },
  {
    "objectID": "skills/HTML_non-web-devs.html#why-do-this",
    "href": "skills/HTML_non-web-devs.html#why-do-this",
    "title": "HTML for non-web developers",
    "section": "Why do this?",
    "text": "Why do this?\n\nHTML is mainly used to write websites\nSo why bother with HTML if you don’t?\n\n\n\n\n\n\nimage: publicdomainvectors.org"
  },
  {
    "objectID": "skills/HTML_non-web-devs.html#what-makes-html-generically-useful",
    "href": "skills/HTML_non-web-devs.html#what-makes-html-generically-useful",
    "title": "HTML for non-web developers",
    "section": "What makes HTML generically useful?",
    "text": "What makes HTML generically useful?\n\ntags lend themselves to semantic markup\n\nSay what an element is, rather than how it should look \n\n\n…and not\n\n\nBut random formatting in Word isn’t semantic"
  },
  {
    "objectID": "skills/HTML_non-web-devs.html#where-might-you-find-html",
    "href": "skills/HTML_non-web-devs.html#where-might-you-find-html",
    "title": "HTML for non-web developers",
    "section": "Where might you find HTML?",
    "text": "Where might you find HTML?\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n(not surprising)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n(possibly surprising)"
  },
  {
    "objectID": "skills/HTML_non-web-devs.html#make-some-html",
    "href": "skills/HTML_non-web-devs.html#make-some-html",
    "title": "HTML for non-web developers",
    "section": "Make some HTML",
    "text": "Make some HTML\n\n\n\n\n\n\nTask\n\n\n\n\nCreate a text file in Windows Notepad (or other text editor)\nadd some text\nsave that file with the .html file extension\nopen in your web browser"
  },
  {
    "objectID": "skills/HTML_non-web-devs.html#what-does-it-look-like",
    "href": "skills/HTML_non-web-devs.html#what-does-it-look-like",
    "title": "HTML for non-web developers",
    "section": "What does it look like?",
    "text": "What does it look like?\n\n\nHTML doesn’t respect whitespace, formatting, etc"
  },
  {
    "objectID": "skills/HTML_non-web-devs.html#add-some-tags",
    "href": "skills/HTML_non-web-devs.html#add-some-tags",
    "title": "HTML for non-web developers",
    "section": "Add some tags",
    "text": "Add some tags\n\nreminder: tags are how we add information to the text\n\n\n\n\n\n\n\nTask\n\n\n\n\nadd some line-breaks with &lt;/br&gt;\n\nadd a horizontal line with &lt;hr&gt;"
  },
  {
    "objectID": "skills/HTML_non-web-devs.html#paired-tags",
    "href": "skills/HTML_non-web-devs.html#paired-tags",
    "title": "HTML for non-web developers",
    "section": "Paired tags",
    "text": "Paired tags\n\nmost HTML tags are paired, with a &lt;start&gt; and &lt;/stop&gt; component\n\n\n\n\n\n\n\nTask\n\n\n\n\nadd a heading with &lt;h1&gt;Heading&lt;/h1&gt;\n\nadd a link with &lt;a href=\"URL\"&gt;Link&lt;/a&gt;"
  },
  {
    "objectID": "skills/HTML_non-web-devs.html#images",
    "href": "skills/HTML_non-web-devs.html#images",
    "title": "HTML for non-web developers",
    "section": "Images",
    "text": "Images\n\nwe can also put extra information inside the tag itself to control how our HTML works. Images are a nice example. You start with a simple &lt;img&gt; tag, and then add components. For example, you’ll nearly always supply the web address of your image:\n\n&lt;img src=\"https://i.imgur.com/OpmMr44.jpg\"&gt; \nYou can also resize the image using HTML, by adding height/width info to the tag:\n&lt;img src=\"https://i.imgur.com/OpmMr44.jpg\" height=\"300\"&gt; \nAnd you can play with the alignment, padding, etc etc:\n&lt;img src=\"https://i.imgur.com/OpmMr44.jpg\" height=\"300\" ALIGN=\"left\" HSPACE=\"15\" VSPACE=\"25\"/&gt;\n\n(this goes a bit wonky in the quarto we use to build the training pages - definitely worth trying out yourself in your HTML file)  ## Tables\nTables are built by using several tags in concert. Say you want to re-build this bit of KIND network archaeology from a couple of years ago:\n\n\nWebinar\nDate\n\n\n\nNov 2022 (R)\n2022-11-16, 2-3pm\n\n\nDec 2022 (KIND conference)\n2022-12-07, 1-5pm\n\n\n\nYou’ll need a few different tags:\n\n\n&lt;table&gt; to start the whole thing off\n\n&lt;thead&gt; to write the (different looking) header row\n\n&lt;tbody&gt; to contain the body of the table\n\n&lt;tr&gt; to describe what should go in a row\n\n&lt;th&gt; to describe individual values\n\nThe trick is that they are nested together, so for a one-cell table with a header you might go like this:\n&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;th&gt;Bit of content&lt;/th&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;\n\n\nBit of content\n\n\nBack to our proper example, following the same idea about nesting:\n&lt;table&gt;\n  &lt;thead&gt;\n    &lt;tr class=\"header\"&gt;\n      &lt;th align=\"left\"&gt;Webinar&lt;/th&gt;\n      &lt;th align=\"left\"&gt;Date&lt;/th&gt;\n    &lt;/tr&gt;\n  &lt;/thead&gt;\n  &lt;tbody&gt;\n    &lt;tr&gt;\n      &lt;td align=\"left\"&gt;Nov 2022 (R)&lt;/td&gt;\n      &lt;td align=\"left\"&gt;2022-11-16, 2-3pm&lt;/td&gt;\n    &lt;/tr&gt;\n      &lt;td align=\"left\"&gt;Dec 2022 (KIND conference)&lt;/td&gt;\n      &lt;td align=\"left\"&gt;2022-12-07, 1-5pm&lt;/td&gt;\n    &lt;/tr&gt;\n  &lt;/tbody&gt;\n&lt;/table&gt;\n\n\n\nWebinar\n\n\nDate\n\n\n\n\n\nNov 2022 (R)\n\n\n2022-11-16, 2-3pm\n\n\n\nDec 2022 (KIND conference)\n\n\n2022-12-07, 1-5pm"
  },
  {
    "objectID": "skills/HTML_non-web-devs.html#practical-example-data-munging",
    "href": "skills/HTML_non-web-devs.html#practical-example-data-munging",
    "title": "HTML for non-web developers",
    "section": "Practical example: Data munging",
    "text": "Practical example: Data munging\n\n(the hard bit) make/find an HTML version of your document\n\nTake a lot of links in a document\nSave the Word doc as html and tidy it up\n\n\nOpen that webpage source using Notepad\nPaste html code into Excel\nDelete the columns you don’t need. (try F5, selecting ‘Special’, then ‘Blanks’, then Ctrl+-)\nUse Text to Columns tool to remove html bits (split on \")"
  },
  {
    "objectID": "skills/HTML_non-web-devs.html#practical-example-parsing-html-to-extract-data",
    "href": "skills/HTML_non-web-devs.html#practical-example-parsing-html-to-extract-data",
    "title": "HTML for non-web developers",
    "section": "Practical example: parsing HTML to extract data",
    "text": "Practical example: parsing HTML to extract data\n\nyou often want to pull data out of HTML-based sources, like webpages. We’d call that parsing HTML. Here’s a mini-example in R:\n\n\nlibrary(xml2)\n\n\"&lt;p&gt;This is some text. This is &lt;b&gt;bold!&lt;/b&gt;&lt;/p&gt;\" |&gt;\n  read_html() |&gt;\n  xml_text(trim = TRUE) \n\n[1] \"This is some text. This is bold!\"\n\n\n\nthe advice here is to use a proper tool, rather than trying to dig all the content out of the tags yourself by e.g. finding and replacing\ndefinitely worth reading this in-depth and entertaining thread about the issue: “You can’t parse [X]HTML with regex”\n\n\n\nhere::here(\"skills/data/doc_links.htm\") |&gt;\n  xml2::read_html() |&gt;\n  xml2::xml_find_all(\"//@href\") |&gt;\n  xml2::as_list() |&gt;\n  purrr::flatten() |&gt;\n  unlist() |&gt;\n  sample(5) # just a random sample of five to avoid overload\n\n[1] \"https://993.example.com\" \"https://474.example.com\"\n[3] \"https://488.example.com\" \"https://855.example.com\"\n[5] \"https://437.example.com\""
  },
  {
    "objectID": "r_training/writing_functions_in_r.html",
    "href": "r_training/writing_functions_in_r.html",
    "title": "Writing functions in R",
    "section": "",
    "text": "Session materials\n\n\n\n\n\n\nall materials \nslides  html /  pdf"
  },
  {
    "objectID": "r_training/writing_functions_in_r.html#previous-attendees-have-said",
    "href": "r_training/writing_functions_in_r.html#previous-attendees-have-said",
    "title": "Writing functions in R",
    "section": "Previous attendees have said…",
    "text": "Previous attendees have said…\n\n17 previous attendees have left feedback\n100% would recommend this session to a colleague\n88% said that this session was pitched correctly\n\n\n\n\n\n\n\n\n\n\n\nThree random comments from previous attendees\n\n\n\n\nTrust Brendan to put the FUN in FUNctions!\nGood session, as a R beginner learned some interesting things about how to write functions\nI found the session very practical, which is amazing!"
  },
  {
    "objectID": "r_training/writing_functions_in_r.html#welcome",
    "href": "r_training/writing_functions_in_r.html#welcome",
    "title": "Writing functions in R",
    "section": "Welcome!",
    "text": "Welcome!\n\nthis session is an 🌶🌶 intermediate practical designed for those with some R experience"
  },
  {
    "objectID": "r_training/writing_functions_in_r.html#session-outline",
    "href": "r_training/writing_functions_in_r.html#session-outline",
    "title": "Writing functions in R",
    "section": "Session outline",
    "text": "Session outline\n\nwhy functions?\nbasic syntax\nadding arguments\nvectorised functions\nthe mystery of the paired brackets\nanonymous functions"
  },
  {
    "objectID": "r_training/writing_functions_in_r.html#why-functions",
    "href": "r_training/writing_functions_in_r.html#why-functions",
    "title": "Writing functions in R",
    "section": "Why functions?",
    "text": "Why functions?\n\nmost beginners write repetitious code\nrepetitious code is hard to maintain\nfunctions give you an easy way of repeating chunks of code"
  },
  {
    "objectID": "r_training/writing_functions_in_r.html#basic-syntax",
    "href": "r_training/writing_functions_in_r.html#basic-syntax",
    "title": "Writing functions in R",
    "section": "Basic syntax",
    "text": "Basic syntax\n\nthink of this as a way of repeating yourself\nin time-honoured fashion…\n\n\nhi_wrld &lt;- function(){\n  \"hello world\"\n}\n\nhi_wrld()\n\n[1] \"hello world\""
  },
  {
    "objectID": "r_training/writing_functions_in_r.html#adding-arguments",
    "href": "r_training/writing_functions_in_r.html#adding-arguments",
    "title": "Writing functions in R",
    "section": "Adding arguments",
    "text": "Adding arguments\n\nmost of the time, you’ll want to add arguments to your function\n\nadd a variable name inside the round bracket of function\n\nuse that variable name in your function body\n\n\n\n\nhi_wrld_n &lt;- function(n){\n  paste(rep(\"hello world\", n))\n}\n\nhi_wrld_n(4)\n\n[1] \"hello world\" \"hello world\" \"hello world\" \"hello world\""
  },
  {
    "objectID": "r_training/writing_functions_in_r.html#another-argument",
    "href": "r_training/writing_functions_in_r.html#another-argument",
    "title": "Writing functions in R",
    "section": "Another argument",
    "text": "Another argument\n\nyou can add another argument\neither position or name can be used in the function call\n\n\nhi_name_n &lt;- function(name, n){\n  rep(paste(\"hello\", name) , n)\n}\n\nhi_name_n(\"sue\", 4)\n\n[1] \"hello sue\" \"hello sue\" \"hello sue\" \"hello sue\"\n\nhi_name_n(n = 3, name = \"tango\") # evil but legal\n\n[1] \"hello tango\" \"hello tango\" \"hello tango\""
  },
  {
    "objectID": "r_training/writing_functions_in_r.html#defaults",
    "href": "r_training/writing_functions_in_r.html#defaults",
    "title": "Writing functions in R",
    "section": "Defaults",
    "text": "Defaults\n\nhi_name_n_def &lt;- function(n, name = \"janelle\"){\n  rep(paste(\"hello\", name) , n)\n}\n\nhi_name_n_def(n = 4)\n\n[1] \"hello janelle\" \"hello janelle\" \"hello janelle\" \"hello janelle\"\n\nhi_name_n_def(n = 2, name = \"bruce\")\n\n[1] \"hello bruce\" \"hello bruce\""
  },
  {
    "objectID": "r_training/writing_functions_in_r.html#vectorised-functions",
    "href": "r_training/writing_functions_in_r.html#vectorised-functions",
    "title": "Writing functions in R",
    "section": "Vectorised functions",
    "text": "Vectorised functions\n\nmost functions in R are vectorised\n\n\n\nround(c(1.2, 3.2, 5.4, 2.7), 0)\n\n[1] 1 3 5 3\n\n\n\nthat means that mostly, our functions will end up vectorised without us doing any work at all\n\n\ndiv_seven_n_round &lt;- function(nums){\n  round(nums / 7, 0)\n}\n\nnumbers &lt;- rnorm(4, 5, 50)\n\nnumbers\n\n[1]  48.41172 -10.34888  35.94294  66.47370\n\ndiv_seven_n_round(numbers)\n\n[1]  7 -1  5  9\n\n\n\n\nbut there are a few cases where that can fail: most famously, using if/else\n\n\n\nis_even &lt;- function(n){\n  \n  if(n %% 2){\n  paste(n, \"is odd\")\n} else {\n  paste(n, \"is even\")\n}\n  \n}\nis_even(9)\n\n[1] \"9 is odd\"\n\nis_even(10)\n\n[1] \"10 is even\"\n\ntry(is_even(9:10))\n\nError in if (n%%2) { : the condition has length &gt; 1"
  },
  {
    "objectID": "r_training/writing_functions_in_r.html#three-solutions",
    "href": "r_training/writing_functions_in_r.html#three-solutions",
    "title": "Writing functions in R",
    "section": "Three solutions",
    "text": "Three solutions\nvectorize with Vectorize\n\n\nis_even_v &lt;- Vectorize(is_even)\nis_even_v(9:10)\n\n[1] \"9 is odd\"   \"10 is even\"\n\n\napply\n\napply with lapply / purrr::map with Vectorize\n\n\n\nlapply(9:10, is_even)\n\n[[1]]\n[1] \"9 is odd\"\n\n[[2]]\n[1] \"10 is even\"\n\npurrr::map(9:10, is_even)\n\n[[1]]\n[1] \"9 is odd\"\n\n[[2]]\n[1] \"10 is even\"\n\n\nrefactor\n\nrefactor to avoid scalar functions\n\n\nis_even_rf &lt;- function(n){\n  ifelse(n %% 2, paste(n, \"is odd\"), paste(n, \"is even\"))\n}\nis_even_rf(9:10)\n\n[1] \"9 is odd\"   \"10 is even\""
  },
  {
    "objectID": "r_training/writing_functions_in_r.html#section",
    "href": "r_training/writing_functions_in_r.html#section",
    "title": "Writing functions in R",
    "section": "{{}}",
    "text": "{{}}\nWhat’s the problem?\n\nmtcars |&gt;\n  dplyr::summarise(average = round(mean(hp)))\n\n  average\n1     147\n\n\nso\n\ncarmo &lt;- function(column){\n  mtcars |&gt;\n    dplyr::summarise(average = round(mean(column)))\n  }\n\n\nbut…\n\n\ntry(carmo(hp))\n\nError in dplyr::summarise(mtcars, average = round(mean(column))) : \n  ℹ In argument: `average = round(mean(column))`.\nCaused by error:\n! object 'hp' not found\n\n\n\nobject ‘hp’ not found\n\n\nwe get used to R (and particularly tidyverse) helping us with some sugar when selecting column by their names\n\n\nmtcars$hp / mtcars |&gt; select(hp)\n\neffectively, we’re just able to specify hp like an object, and R figures out the scope etc for us\n\n\nthat misfires inside functions. R isn’t sure where to look for an object called hp\n\nEnter {{}}\n\n\ncarmo_woo &lt;- function(column){\n  mtcars |&gt;\n    dplyr::summarise(average = round(mean({{column}})))\n}\n\ncarmo_woo(hp)\n\n  average\n1     147\n\n\n\nfor 95% of purposes, take {{}} as a purely empirical fix\nbut, if you’re very enthusiastic:\n\n\n{{}} defuses and injects the column name\nequivalent to !!enquo(var)"
  },
  {
    "objectID": "r_training/writing_functions_in_r.html#section-1",
    "href": "r_training/writing_functions_in_r.html#section-1",
    "title": "Writing functions in R",
    "section": "…",
    "text": "…\n\npass arbitrary arguments into/through a function with …\n\n\ndotty &lt;- function(n, ...){\n  rep(paste(..., collapse = \"\"), n)\n}\n\ndotty(4, letters[1:5])\n\n[1] \"abcde\" \"abcde\" \"abcde\" \"abcde\""
  },
  {
    "objectID": "r_training/writing_functions_in_r.html#anonymous-functions",
    "href": "r_training/writing_functions_in_r.html#anonymous-functions",
    "title": "Writing functions in R",
    "section": "Anonymous functions",
    "text": "Anonymous functions\nIn some cases, you might find yourself creating a function that’s only going to be used in a single location. In that case, it’s possible to define a nameless (anonymous) function, which is concise-but-nasty. For example:\n\n(\\(x) x * 2)(5)\n\n[1] 10\n\n\nHere:\n\n\n\\(x) defines an anonymous function that takes one argument x.\n\nx * 2 is the body of the function which determines how the function works\n\n(5) is the value that we’re supplying to the function\n\nMost usually, that anonymous function won’t be used with a single value, but within a pipe. Here, the supplied value is dropped, and substituted by the values passing along the pipe:\n\nmtcars |&gt;\n  select(wt) |&gt;\n  (\\(x) x * 2)() |&gt; # Double the weight of all the values\n  slice_max(wt, n = 3)\n\n                        wt\nLincoln Continental 10.848\nChrysler Imperial   10.690\nCadillac Fleetwood  10.500\n\n\nAnonymous functions and the magrittr pipe\nThe magrittr pipe (%&gt;%) has an older, and simple, method of writing anonymous formulas using the . placeholder:\n\nmtcars %&gt;%\n  select(wt) %&gt;%\n  { . * 2 } %&gt;% # Double the weight of all the values\n  slice_max(wt, n = 3)\n\n                        wt\nLincoln Continental 10.848\nChrysler Imperial   10.690\nCadillac Fleetwood  10.500"
  },
  {
    "objectID": "r_training/writing_functions_in_r.html#resources",
    "href": "r_training/writing_functions_in_r.html#resources",
    "title": "Writing functions in R",
    "section": "Resources",
    "text": "Resources\n\n\nbest = home made! Refactor something simple in your code today.\nhard to beat the treatment of functions in R4DS\n\nthe Rlang page on data masking is surprisingly sane for such a complicated area"
  },
  {
    "objectID": "r_training/we_heart_janitor.html",
    "href": "r_training/we_heart_janitor.html",
    "title": "We ❤️ janitor",
    "section": "",
    "text": "No feedback found for this session"
  },
  {
    "objectID": "r_training/we_heart_janitor.html#headline",
    "href": "r_training/we_heart_janitor.html#headline",
    "title": "We ❤️ janitor",
    "section": "Headline",
    "text": "Headline\n\nJanitor is a toolkit for tidying data\nboth input-focused and output-focused\nexcellent balance between diligence and laziness"
  },
  {
    "objectID": "r_training/we_heart_janitor.html#setup",
    "href": "r_training/we_heart_janitor.html#setup",
    "title": "We ❤️ janitor",
    "section": "Setup",
    "text": "Setup\n\nlibrary(janitor)\nlibrary(readxl)\nlibrary(dplyr)\n\ntest_df &lt;- as.data.frame(matrix(ncol = 6))\nnames(test_df) &lt;- c(\"firstName\", \"ábc@!*\", \"% successful (2009)\",\n                    \"REPEAT VALUE\", \"REPEAT VALUE\", \"\")\n\ntest_df |&gt;\n  clean_names(case = \"upper_lower\") |&gt;\n  select(FIRSTname)\n\n  FIRSTname\n1        NA"
  },
  {
    "objectID": "r_training/we_heart_janitor.html#clean_names",
    "href": "r_training/we_heart_janitor.html#clean_names",
    "title": "We ❤️ janitor",
    "section": "clean_names",
    "text": "clean_names\nclean_names allows you to convert ugly column names into standardised, syntactic names. You can also specfiy the case, or bulk-tweak the names.\n\nclean_names(test_df)\n\n  first_name abc percent_successful_2009 repeat_value repeat_value_2  x\n1         NA  NA                      NA           NA             NA NA\n\nclean_names(test_df, case = \"screaming_snake\")\n\n  FIRST_NAME ABC PERCENT_SUCCESSFUL_2009 REPEAT_VALUE REPEAT_VALUE_2  X\n1         NA  NA                      NA           NA             NA NA\n\nclean_names(test_df, case = \"big_camel\")\n\n  FirstName Abc PercentSuccessful2009 RepeatValue RepeatValue_2  X\n1        NA  NA                    NA          NA            NA NA\n\ntest_df %&gt;%\n  clean_names(prefix = \"a_prefix\")\n\n  a_prefixfirst_name a_prefixabc a_prefixpercent_successful_2009\n1                 NA          NA                              NA\n  a_prefixrepeat_value a_prefixrepeat_value_2 a_prefixx\n1                   NA                     NA        NA"
  },
  {
    "objectID": "r_training/we_heart_janitor.html#compare_df_cols",
    "href": "r_training/we_heart_janitor.html#compare_df_cols",
    "title": "We ❤️ janitor",
    "section": "compare_df_cols",
    "text": "compare_df_cols\n\nlibrary(palmerpenguins)\n\ncompare_df_cols(penguins,penguins_raw)\n\n           column_name penguins penguins_raw\n1        bill_depth_mm  numeric         &lt;NA&gt;\n2       bill_length_mm  numeric         &lt;NA&gt;\n3        Body Mass (g)     &lt;NA&gt;      numeric\n4          body_mass_g  integer         &lt;NA&gt;\n5    Clutch Completion     &lt;NA&gt;    character\n6             Comments     &lt;NA&gt;    character\n7    Culmen Depth (mm)     &lt;NA&gt;      numeric\n8   Culmen Length (mm)     &lt;NA&gt;      numeric\n9             Date Egg     &lt;NA&gt;         Date\n10   Delta 13 C (o/oo)     &lt;NA&gt;      numeric\n11   Delta 15 N (o/oo)     &lt;NA&gt;      numeric\n12 Flipper Length (mm)     &lt;NA&gt;      numeric\n13   flipper_length_mm  integer         &lt;NA&gt;\n14       Individual ID     &lt;NA&gt;    character\n15              island   factor         &lt;NA&gt;\n16              Island     &lt;NA&gt;    character\n17              Region     &lt;NA&gt;    character\n18       Sample Number     &lt;NA&gt;      numeric\n19                 sex   factor         &lt;NA&gt;\n20                 Sex     &lt;NA&gt;    character\n21             species   factor         &lt;NA&gt;\n22             Species     &lt;NA&gt;    character\n23               Stage     &lt;NA&gt;    character\n24           studyName     &lt;NA&gt;    character\n25                year  integer         &lt;NA&gt;"
  },
  {
    "objectID": "r_training/we_heart_janitor.html#warnings",
    "href": "r_training/we_heart_janitor.html#warnings",
    "title": "We ❤️ janitor",
    "section": "warnings",
    "text": "warnings\n\nData1 &lt;- readxl::read_excel(\"data/JanitorDataExample.xlsx\", .name_repair = make_clean_names)\n\n# warnings switched off, otherwise we'd have literally hundreds of warnings here!\n\nmake_clean_names(c(\"1thing\", \"some opther thign\"))\n\n[1] \"x1thing\"           \"some_opther_thign\"\n\nglimpse(Data1)\n\nRows: 503\nColumns: 7\n$ id               &lt;dbl&gt; 100507, 104088, 105279, 105459, 108894, 109204, 10962…\n$ gender           &lt;chr&gt; \"Male\", \"Male\", \"Female\", \"Male\", \"Male\", \"Male\", \"Ma…\n$ date_of_event_1  &lt;dbl&gt; 44572, 44216, 44172, 44496, 44973, 45099, 44350, 4466…\n$ date_of_event_2  &lt;dbl&gt; 44535, 44089, 45239, 43872, 45239, 44236, 44981, 4386…\n$ location         &lt;chr&gt; \"Hospital\", \"Hospital\", \"Hospital\", \"Home\", \"Home\", \"…\n$ diagnosis_code_1 &lt;chr&gt; \"T848\", \"G992\", \"J81X\", \"R55X\", \"J459\", \"K851\", \"J441…\n$ attendances      &lt;dbl&gt; 3, 2, 4, 2, 2, 4, 2, 3, 1, 3, 3, 2, 3, 4, 3, 4, 4, 4,…"
  },
  {
    "objectID": "r_training/we_heart_janitor.html#clean_names-again",
    "href": "r_training/we_heart_janitor.html#clean_names-again",
    "title": "We ❤️ janitor",
    "section": "\nclean_names again",
    "text": "clean_names again\n\nData1_clean &lt;- Data1 |&gt;\n  clean_names() |&gt;\n  mutate(across(contains(\"date\"),\n         excel_numeric_to_date)) |&gt;\n  mutate(Year = lubridate::year(date_of_event_1))\n\nData1_clean\n\n# A tibble: 503 × 8\n       id gender date_of_event_1 date_of_event_2 location diagnosis_code_1\n    &lt;dbl&gt; &lt;chr&gt;  &lt;date&gt;          &lt;date&gt;          &lt;chr&gt;    &lt;chr&gt;           \n 1 100507 Male   2022-01-11      2021-12-05      Hospital T848            \n 2 104088 Male   2021-01-20      2020-09-15      Hospital G992            \n 3 105279 Female 2020-12-07      2023-11-09      Hospital J81X            \n 4 105459 Male   2021-10-27      2020-02-11      Home     R55X            \n 5 108894 Male   2023-02-16      2023-11-09      Home     J459            \n 6 109204 Male   2023-06-22      2021-02-09      Home     K851            \n 7 109624 Male   2021-06-03      2023-02-24      Home     J441            \n 8 111454 Male   2022-04-11      2020-02-07      Home     E162            \n 9 113892 Male   2020-04-26      2023-03-06      Home     I279            \n10 114110 Male   2021-04-04      2021-05-06      Hospital M798            \n# ℹ 493 more rows\n# ℹ 2 more variables: attendances &lt;dbl&gt;, Year &lt;dbl&gt;"
  },
  {
    "objectID": "r_training/we_heart_janitor.html#get_dupes",
    "href": "r_training/we_heart_janitor.html#get_dupes",
    "title": "We ❤️ janitor",
    "section": "get_dupes",
    "text": "get_dupes\n\nData1_clean |&gt;\n  get_dupes(contains(\"date\"))\n\n# A tibble: 6 × 9\n  date_of_event_1 date_of_event_2 dupe_count     id gender location\n  &lt;date&gt;          &lt;date&gt;               &lt;int&gt;  &lt;dbl&gt; &lt;chr&gt;  &lt;chr&gt;   \n1 2021-10-09      2021-08-20               2 400760 Female Hospital\n2 2021-10-09      2021-08-20               2 400760 Female Hospital\n3 2022-04-04      2021-11-08               2 450284 Female Hospital\n4 2022-04-04      2021-11-08               2 450284 Female Hospital\n5 2023-06-29      2020-03-23               2 823894 Male   Home    \n6 2023-06-29      2020-03-23               2 823894 Male   Home    \n# ℹ 3 more variables: diagnosis_code_1 &lt;chr&gt;, attendances &lt;dbl&gt;, Year &lt;dbl&gt;"
  },
  {
    "objectID": "r_training/we_heart_janitor.html#distinct",
    "href": "r_training/we_heart_janitor.html#distinct",
    "title": "We ❤️ janitor",
    "section": "distinct",
    "text": "distinct\n\nData1_clean_distinct &lt;- distinct(Data1_clean)\n\nData1_clean_distinct\n\n# A tibble: 500 × 8\n       id gender date_of_event_1 date_of_event_2 location diagnosis_code_1\n    &lt;dbl&gt; &lt;chr&gt;  &lt;date&gt;          &lt;date&gt;          &lt;chr&gt;    &lt;chr&gt;           \n 1 100507 Male   2022-01-11      2021-12-05      Hospital T848            \n 2 104088 Male   2021-01-20      2020-09-15      Hospital G992            \n 3 105279 Female 2020-12-07      2023-11-09      Hospital J81X            \n 4 105459 Male   2021-10-27      2020-02-11      Home     R55X            \n 5 108894 Male   2023-02-16      2023-11-09      Home     J459            \n 6 109204 Male   2023-06-22      2021-02-09      Home     K851            \n 7 109624 Male   2021-06-03      2023-02-24      Home     J441            \n 8 111454 Male   2022-04-11      2020-02-07      Home     E162            \n 9 113892 Male   2020-04-26      2023-03-06      Home     I279            \n10 114110 Male   2021-04-04      2021-05-06      Hospital M798            \n# ℹ 490 more rows\n# ℹ 2 more variables: attendances &lt;dbl&gt;, Year &lt;dbl&gt;"
  },
  {
    "objectID": "r_training/we_heart_janitor.html#tabyl-adorn",
    "href": "r_training/we_heart_janitor.html#tabyl-adorn",
    "title": "We ❤️ janitor",
    "section": "\ntabyl / adorn\n",
    "text": "tabyl / adorn\n\n\nData1_clean_distinct |&gt;\n  tabyl(gender)\n\n gender   n percent valid_percent\n Female 285   0.570     0.5711423\n   Male 214   0.428     0.4288577\n   &lt;NA&gt;   1   0.002            NA\n\nData1_clean_distinct |&gt;\n  tabyl(gender, show_na = F)\n\n gender   n   percent\n Female 285 0.5711423\n   Male 214 0.4288577\n\nData1_clean_distinct |&gt;\n  tabyl(gender, location, Year, show_na = F) # excel pivot\n\n$`2020`\n gender Home Hospital\n Female   34       33\n   Male   24       25\n\n$`2021`\n gender Home Hospital\n Female   24       48\n   Male   28       22\n\n$`2022`\n gender Home Hospital\n Female   35       35\n   Male   22       30\n\n$`2023`\n gender Home Hospital\n Female   37       39\n   Male   25       38\n\nData1_clean_distinct |&gt;\n  tabyl(gender) |&gt;\n  class()\n\n[1] \"tabyl\"      \"data.frame\"\n\nData1_clean_distinct |&gt;\n  tabyl(Year,gender, show_na = F) |&gt;\n  adorn_totals(\"row\") |&gt;\n  adorn_percentages(\"row\") |&gt;\n  adorn_pct_formatting() |&gt;\n  adorn_ns() |&gt;\n  adorn_title(\"combined\")\n\n Year/gender      Female        Male\n        2020 57.8%  (67) 42.2%  (49)\n        2021 59.0%  (72) 41.0%  (50)\n        2022 57.4%  (70) 42.6%  (52)\n        2023 54.7%  (76) 45.3%  (63)\n       Total 57.1% (285) 42.9% (214)\n\nData1_clean_distinct |&gt;\n  tabyl(Year,gender,show_na = F) |&gt;\n  adorn_totals(\"row\") |&gt;\n  adorn_percentages(\"row\") |&gt;\n  adorn_pct_formatting() |&gt;\n  adorn_ns() |&gt;\n  # adorn_title(\"combined\") |&gt;\n  mutate(Year = paste(\"The year was\", Year))\n\n               Year      Female        Male\n  The year was 2020 57.8%  (67) 42.2%  (49)\n  The year was 2021 59.0%  (72) 41.0%  (50)\n  The year was 2022 57.4%  (70) 42.6%  (52)\n  The year was 2023 54.7%  (76) 45.3%  (63)\n The year was Total 57.1% (285) 42.9% (214)\n\nData1_clean_distinct |&gt;\n  tabyl(Year,gender,show_na = F) |&gt;\n  adorn_totals(\"row\") |&gt;\n  adorn_percentages(\"row\") |&gt;\n  adorn_pct_formatting() |&gt;\n  adorn_ns(position = \"front\") |&gt;\n  adorn_title(\"combined\")\n\n Year/gender      Female        Male\n        2020  67 (57.8%)  49 (42.2%)\n        2021  72 (59.0%)  50 (41.0%)\n        2022  70 (57.4%)  52 (42.6%)\n        2023  76 (54.7%)  63 (45.3%)\n       Total 285 (57.1%) 214 (42.9%)"
  },
  {
    "objectID": "r_training/we_heart_janitor.html#group_by-with-tabyl",
    "href": "r_training/we_heart_janitor.html#group_by-with-tabyl",
    "title": "We ❤️ janitor",
    "section": "group_by with tabyl\n",
    "text": "group_by with tabyl\n\n\nData1_clean_distinct |&gt;\n  group_by(Year,gender) |&gt;\n  summarise(Attendances = n()) |&gt;\n  filter(!is.na(Year)) |&gt;\n  tidyr::pivot_wider(names_from = gender, values_from = Attendances) |&gt;\n  adorn_totals(c(\"row\",\"col\"))\n\n  Year Female Male Total\n  2020     67   49   116\n  2021     72   50   122\n  2022     70   52   122\n  2023     76   63   139\n Total    285  214   499"
  },
  {
    "objectID": "r_training/we_heart_janitor.html#chisq.test",
    "href": "r_training/we_heart_janitor.html#chisq.test",
    "title": "We ❤️ janitor",
    "section": "chisq.test",
    "text": "chisq.test\n\nData1_clean_distinct |&gt;\n  tabyl(attendances,location,show_na = F) |&gt;\n  chisq.test()\n\n\n    Pearson's Chi-squared test\n\ndata:  tabyl(Data1_clean_distinct, attendances, location, show_na = F)\nX-squared = 1.9866, df = 3, p-value = 0.5752"
  },
  {
    "objectID": "r_training/we_heart_janitor.html#chisq.test-1",
    "href": "r_training/we_heart_janitor.html#chisq.test-1",
    "title": "We ❤️ janitor",
    "section": "chisq.test",
    "text": "chisq.test\n\ntitanic &lt;- data.frame(Died  = c(122,167,528,673),\n                  Survived  = c(203,118,178,212),\n                  row.names = c(\"1st class\", \"2nd class\", \"3rd class\", \"crew\"))\n\nchisq.test(titanic)\n\n\n    Pearson's Chi-squared test\n\ndata:  titanic\nX-squared = 190.4, df = 3, p-value &lt; 2.2e-16"
  },
  {
    "objectID": "r_training/testing.html",
    "href": "r_training/testing.html",
    "title": "Testing R code",
    "section": "",
    "text": "Session materials\n\n\n\n\n\n\nall materials \nslides  html /  pdf"
  },
  {
    "objectID": "r_training/testing.html#previous-attendees-have-said",
    "href": "r_training/testing.html#previous-attendees-have-said",
    "title": "Testing R code",
    "section": "Previous attendees have said…",
    "text": "Previous attendees have said…\n\n4 previous attendees have left feedback\n100% would recommend this session to a colleague\n100% said that this session was pitched correctly\n\n\n\n\n\n\n\n\n\n\n\nThree random comments from previous attendees\n\n\n\n\nvery well pitched and comprehensive session\nuseful for ideas for implementing better testing in my code. As always, I susally pick up other things unrelated to the session that end up being more useful than the intended content. e.g. package installation/loading - I seem to be doing this all wrong!\nI think it was difficult for me to understand how to apply this to my code."
  },
  {
    "objectID": "r_training/testing.html#welcome",
    "href": "r_training/testing.html#welcome",
    "title": "Testing R code",
    "section": "Welcome",
    "text": "Welcome\n\nthis session is for 🌶🌶 intermediate users\nyou’ll need R + Rstudio / Posit Workbench / posit.cloud to follow along"
  },
  {
    "objectID": "r_training/testing.html#session-outline",
    "href": "r_training/testing.html#session-outline",
    "title": "Testing R code",
    "section": "Session outline",
    "text": "Session outline\n\nintroduction: why test?\ninformal testing\nunit testing\n\nintroduction - why automate your tests?\n\ntestthat walkthrough"
  },
  {
    "objectID": "r_training/testing.html#introduction-why-test",
    "href": "r_training/testing.html#introduction-why-test",
    "title": "Testing R code",
    "section": "Introduction: why test?",
    "text": "Introduction: why test?\n\ncode goes wrong\n\nfunctions change\ndata sources change\nusage changes\n\n\ntesting guards against the commonest problems\nthat makes for more reliable code\n\nmore reliable code opens the way to nicer development patterns"
  },
  {
    "objectID": "r_training/testing.html#a-note",
    "href": "r_training/testing.html#a-note",
    "title": "Testing R code",
    "section": "A note",
    "text": "A note\n\nmost discussions about testing come about as part of package development\n\nwe’ll avoid that area here, but please see the three excellent chapters in the R packages book for guidance\nwe’ll also steer clear of Shiny/Rmarkdown/Quarto, as things can be a bit more tricky to test there\n\n\nwe also won’t talk about debugging here (although do look out for the future training session on that)"
  },
  {
    "objectID": "r_training/testing.html#informal-testing",
    "href": "r_training/testing.html#informal-testing",
    "title": "Testing R code",
    "section": "Informal testing",
    "text": "Informal testing\n\na real-world example: Teams transcripts\nTeams transcripts can be very useful data-sources\nbut they’re absolutely horrible to work with:\n\nWEBVTT\nQ1::&gt;\n00:00:00.000 --&gt; 00:00:14.080\n&lt;v Brendan Clarke&gt; this was the first question in the transcript\n\n00:00:14.080 --&gt; 00:00:32.180\n&lt;v Someone Else&gt; then someone replied with this answer\n\nQ2::&gt;\n00:00:32.180 --&gt; 00:00:48.010\n&lt;v Brendan Clarke&gt; then there was another question\n\n00:00:48.010 --&gt; 00:00:58.010\n&lt;v Someone Else&gt; and another tedious response\n\nimagine that you’ve written a (horrible) Teams transcript parser:\nhow would you test this code to make sure it behaves itself?\n\n\nfile &lt;- \"data/input.txt\"\n\nreadLines(file) |&gt;\n    tibble::as_tibble() |&gt;\n    dplyr::filter(!value == \"\") |&gt;\n    dplyr::filter(!value == \"WEBVTT\") |&gt;\n    dplyr::mutate(question = stringr::str_extract(value, \"^(Q.*?)::&gt;$\")) |&gt;\n    tidyr::fill(question, .direction = 'down') |&gt;\n    dplyr::filter(!stringr::str_detect(value,  \"^(Q.*?)::&gt;$\")) |&gt;\n    dplyr::mutate(ind = rep(c(1, 2),length.out = dplyr::n())) |&gt;\n    dplyr::group_by(ind) |&gt;\n    dplyr::mutate(id = dplyr::row_number()) |&gt;\n    tidyr::spread(ind, value) |&gt;\n    dplyr::select(-id) |&gt;\n    tidyr::separate(\"1\", c(\"start_time\", \"end_time\"), \" --&gt; \") |&gt;\n    tidyr::separate(\"2\", c(\"name\", \"comment\"), \"&gt;\") |&gt;\n    dplyr::mutate(source = stringr::str_remove_all(file, \"\\\\.txt\"),\n           name = stringr::str_remove_all(name, \"\\\\&lt;v \"), \n           comment = stringr::str_trim(comment), \n           question = stringr::str_remove_all(question, \"::&gt;\")) |&gt;\n    knitr::kable()\n\n\n\n\n\n\n\n\n\n\n\nquestion\nstart_time\nend_time\nname\ncomment\nsource\n\n\n\nQ1\n00:00:00.000\n00:00:14.080\nBrendan Clarke\nthis was the first question in the transcript\ndata/input\n\n\nQ1\n00:00:14.080\n00:00:32.180\nSomeone Else\nthen someone replied with this answer\ndata/input\n\n\nQ2\n00:00:32.180\n00:00:48.010\nBrendan Clarke\nthen there was another question\ndata/input\n\n\nQ2\n00:00:48.010\n00:00:58.010\nSomeone Else\nand another tedious response\ndata/input\n\n\n\n\n\n\nwe could change the inputs, and look at the outputs\n\nso twiddle our input file, and manually check the output\n\n\nmaybe we could also change the background conditions\n\nchange the R environment, or package versions, or whatever\n\n\nbut that gets tedious and erratic very quickly"
  },
  {
    "objectID": "r_training/testing.html#testthat",
    "href": "r_training/testing.html#testthat",
    "title": "Testing R code",
    "section": "testthat",
    "text": "testthat\n\nUnit testing = automated, standardised, testing\nthe best place to start is with testthat:\n\n\nlibrary(testthat)\n\n\nhelpful man pages\nnice vignette\nmore ambitious guide to ad hoc testing with testthat\n\nFirst steps with testthat\n\n\nbuilt for R package developers\nbut readily usable for non-package people\n\n\ntest_that(\"multiplication works\", {\n  expect_equal(2 * 2, 4)\n})\n\nTest passed 🥳\n\n\nFunctions and testthat\n\n\n\ntestthat works best when you’re testing functions\nfunctions in R are easy:\n\n\nfunction_name &lt;- function(arg1 = default1, arg2 = default2){\n     arg1 * arg2 # using our argument names\n}\n\nor include the body inline for simple functions:\n\nfunction_name &lt;- function(arg1 = default1, arg2 = default2) arg1 * arg2\n\nTransform your code into functions\n\nmulto &lt;- function(n1, n2){\n  n1 * n2\n}\n\nTest your function\n\nthen test. We think that multo(2,2) should equal 4, so we use:\n\n\ntest_that() to set up our test environment\n\nexpect_equal() inside the test environment to check for equality\n\n\n\n\n# then run as a test\n\ntest_that(\"multo works with 2 and 2\", {\n    expect_equal(multo(2, 2), 4)\n})\n\nTest passed 😀\n\n\nRaise your expectations\n\nwe can add more expectations\n\n\ntest_that(\"multo works in general\", {\n    expect_equal(multo(2, 2), 4)\n    expect_identical(multo(2,0.01), 0.02)\n    expect_type(multo(0,2), \"double\")\n    expect_length(multo(9,2), 1)\n    expect_gte(multo(4,4), 15)\n})\n\nTest passed 😀\n\n\nEqual and identical\n\nbeware the floating point error\n\n\n\n3 - 2.9\n\n[1] 0.1\n\n3 - 2.9 == 0.1\n\n[1] FALSE\n\n\n\nhappily, there’s a sufficiently sloppy way of checking equality:\n\n\ntest_that(\"pedants corner\", {\n  expect_equal(multo(2, 0.01), 0.020000001)\n  expect_identical(multo(2, 0.01), 0.02)\n})\n\nTest passed 🎉"
  },
  {
    "objectID": "r_training/testing.html#testing-several-values",
    "href": "r_training/testing.html#testing-several-values",
    "title": "Testing R code",
    "section": "Testing several values",
    "text": "Testing several values\n\nif you want to work with vectors, there are a number of tools for checking their contents:\n\n\nx &lt;- rownames(as.matrix(eurodist, labels=TRUE)) # odd built in dataset\n\ntest_that(\"check my vec\", {\n    expect_equal(x[1:2], c(\"Athens\", \"Barcelona\"))\n})    \n\nTest passed 🥳\n\n\n\nyou can get much more fancy with a bit of set theory (not really set theory):\n\n\ny &lt;- x\n\ntest_that(\"check my vec sets\", {\n    expect_success(expect_setequal(x, y)) # all x in y\n    expect_failure(expect_mapequal(x, y)) # same names, y is proper subset x) # all x in y)\n    show_failure(expect_contains(x[1:19], y)) # y proper subset x)\n    expect_success(expect_in(x, y)) # x proper subset y\n})    \n\nFailed expectation:\nx[1:19] (`actual`) doesn't fully contain all the values in `y` (`expected`).\n* Missing from `actual`: \"Stockholm\", \"Vienna\"\n* Present in `actual`:   \"Athens\", \"Barcelona\", \"Brussels\", \"Calais\", \"Cherbourg\", \"Cologne\", \"Copenhagen\", \"Geneva\", \"Gibraltar\", ...\n\nTest passed 😀\n\n\n\ny &lt;- sample(x, length(x)-2)\n\ntest_that(\"check my vec sets\", {\n    expect_failure(expect_setequal(x, y)) # all x in y\n    expect_failure(expect_mapequal(x, y)) # same names, y is proper subset x) # all x in y)\n    expect_success(expect_contains(x, y)) # y proper subset x)\n    expect_failure(expect_in(x, y)) # x is a proper subset y\n})    \n\nTest passed 😸\n\n\nTesting tibbles\n\nbecause most of the tests are powered by waldo, you shouldn’t have to do anything fancy to test on tibbles:\n\n\nlibrary(palmerpenguins)\n\nmy_pengs &lt;- penguins\n\ntest_that(\"penguin experiments\", {\n    expect_equal(my_pengs, penguins)\n})\n\nTest passed 🌈\n\n\nTypes and classes etc\n\none massive corollary to that: if you don’t do a lot of base-R, expect a fiercely stringent test of your understanding of types and classes.\n\n\ntypeof(penguins)\n\n[1] \"list\"\n\nclass(penguins) \n\n[1] \"tbl_df\"     \"tbl\"        \"data.frame\"\n\nis.object(names(penguins)) # vectors are base types\n\n[1] FALSE\n\nattr(names(penguins), \"class\") # base types have no class\n\nNULL\n\nis.object(penguins) # this is some kind of object\n\n[1] TRUE\n\nattr(penguins, \"class\") # so it definitely does have a class\n\n[1] \"tbl_df\"     \"tbl\"        \"data.frame\"\n\n\nTibble tests\n\ntest_that(\"penguin types\", {\n    expect_type(penguins, \"list\")\n    expect_s3_class(penguins, \"tbl_df\")\n    expect_s3_class(penguins, \"tbl\")\n    expect_s3_class(penguins, \"data.frame\")\n    expect_type(penguins$island, \"integer\")\n    expect_s3_class(penguins$island, \"factor\")\n})\n\nTest passed 😸\n\n\n\nthere’s also an expect_s4_class for those with that high clear mercury sound ringing in their ears\nLast tip\n\nyou can put bare expectations in pipes if you’re looking for something specific\n\n\npenguins |&gt;\n  expect_type(\"list\") |&gt;\n  dplyr::pull(island) |&gt;\n  expect_length(344)"
  },
  {
    "objectID": "r_training/src/rmd/01_qmd.html",
    "href": "r_training/src/rmd/01_qmd.html",
    "title": "Quarto with params",
    "section": "",
    "text": "Hello Bruce"
  },
  {
    "objectID": "r_training/scope_of_the_possible_with_r.html",
    "href": "r_training/scope_of_the_possible_with_r.html",
    "title": "Scope of the possible with R",
    "section": "",
    "text": "Session materials\n\n\n\n\n\n\nall materials \nslides  html /  pdf\nSlides for this session / .pdf slides for this session\nNo feedback found for this session"
  },
  {
    "objectID": "r_training/scope_of_the_possible_with_r.html#welcome",
    "href": "r_training/scope_of_the_possible_with_r.html#welcome",
    "title": "Scope of the possible with R",
    "section": "Welcome",
    "text": "Welcome\n\nthis session is a non-technical overview designed for service leads"
  },
  {
    "objectID": "r_training/scope_of_the_possible_with_r.html#session-outline",
    "href": "r_training/scope_of_the_possible_with_r.html#session-outline",
    "title": "Scope of the possible with R",
    "section": "Session outline",
    "text": "Session outline\n\nWhy R, and why this session?\nR demo - take some data, load, tidy, analyse\nStrengths and weaknesses\n\nobvious\nless obvious\n\n\nAlternatives\nSkill development"
  },
  {
    "objectID": "r_training/scope_of_the_possible_with_r.html#r",
    "href": "r_training/scope_of_the_possible_with_r.html#r",
    "title": "Scope of the possible with R",
    "section": "R",
    "text": "R\n\nfree and open-source\nmulti-platform\nlarge user base\nprominent in health, industry, biosciences"
  },
  {
    "objectID": "r_training/scope_of_the_possible_with_r.html#why-this-session",
    "href": "r_training/scope_of_the_possible_with_r.html#why-this-session",
    "title": "Scope of the possible with R",
    "section": "Why this session?",
    "text": "Why this session?\n\nR can be confusing\n\nit’s code-based, and most of us don’t have much code experience\nit’s used for some inherently complicated tasks\nit’s a big product with lots of add-ons and oddities\n\n\nBut R is probably the best general-purpose toolbox we have for data work at present\n\nbig user base in health and social care\nfocus on health and care-like applications\nnot that hard to learn\nextensible and flexible\ncapable of enterprise-y, fancy uses"
  },
  {
    "objectID": "r_training/scope_of_the_possible_with_r.html#r-demo",
    "href": "r_training/scope_of_the_possible_with_r.html#r-demo",
    "title": "Scope of the possible with R",
    "section": "R demo",
    "text": "R demo\n\nthis is about showing what’s possible, and give you a flavour of how R works\nwe won’t explain code in detail during this session\nusing live open data"
  },
  {
    "objectID": "r_training/scope_of_the_possible_with_r.html#load-that-data",
    "href": "r_training/scope_of_the_possible_with_r.html#load-that-data",
    "title": "Scope of the possible with R",
    "section": "Load that data",
    "text": "Load that data\nlibrary(readr)\nae_activity &lt;- read_csv(\"data/weekly_ae_activity_20240609.csv\")"
  },
  {
    "objectID": "r_training/scope_of_the_possible_with_r.html#one-small-bit-of-cheating-renaming",
    "href": "r_training/scope_of_the_possible_with_r.html#one-small-bit-of-cheating-renaming",
    "title": "Scope of the possible with R",
    "section": "One small bit of cheating: renaming",
    "text": "One small bit of cheating: renaming\nnames(ae_activity) &lt;- c(\"date\", \"country\", \"hb\", \"loc\", \"type\", \"attend\", \"n_within\", \"n_4\", \"perc_4\", \"n_8\", \"perc_8\", \"n_12\", \"perc_12\")"
  },
  {
    "objectID": "r_training/scope_of_the_possible_with_r.html#preview",
    "href": "r_training/scope_of_the_possible_with_r.html#preview",
    "title": "Scope of the possible with R",
    "section": "Preview",
    "text": "Preview\n\nPreview of data\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ndate\ncountry\nhb\nloc\ntype\nattend\nn_within\nn_4\nperc_4\nn_8\nperc_8\nn_12\nperc_12\n\n\n\n20181230\nS92000003\nS08000032\nL308H\nEmergency Department\n1341\n1148\n193\n85.6\n23\n1.7\n2\n0.1\n\n\n20151025\nS92000003\nS08000030\nT202H\nEmergency Department\n446\n444\n2\n99.6\n0\n0.0\n0\n0.0\n\n\n20200105\nS92000003\nS08000017\nY146H\nEmergency Department\n648\n534\n114\n82.4\n16\n2.5\n1\n0.2\n\n\n20221009\nS92000003\nS08000030\nT202H\nEmergency Department\n462\n440\n22\n95.2\n3\n0.6\n1\n0.2\n\n\n20150524\nS92000003\nS08000022\nH212H\nEmergency Department\n209\n205\n4\n98.1\n1\n0.5\n0\n0.0"
  },
  {
    "objectID": "r_training/scope_of_the_possible_with_r.html#removing-data",
    "href": "r_training/scope_of_the_possible_with_r.html#removing-data",
    "title": "Scope of the possible with R",
    "section": "Removing data",
    "text": "Removing data\nae_activity &lt;- ae_activity |&gt;\n    select(!c(country, contains(\"perc_\")))\n\nPreview of data\n\n\n\n\n\n\n\n\n\n\n\n\ndate\nhb\nloc\ntype\nattend\nn_within\nn_4\nn_8\nn_12\n\n\n\n20171105\nS08000029\nF704H\nEmergency Department\n1187\n1147\n40\n1\n0\n\n\n20200614\nS08000017\nY144H\nEmergency Department\n184\n174\n10\n1\n0\n\n\n20171105\nS08000025\nR103H\nEmergency Department\n116\n110\n6\n0\n0\n\n\n20170716\nS08000022\nH202H\nEmergency Department\n675\n654\n21\n1\n0\n\n\n20180415\nS08000022\nC121H\nEmergency Department\n154\n143\n11\n0\n0"
  },
  {
    "objectID": "r_training/scope_of_the_possible_with_r.html#tidying-data",
    "href": "r_training/scope_of_the_possible_with_r.html#tidying-data",
    "title": "Scope of the possible with R",
    "section": "Tidying data",
    "text": "Tidying data\nae_activity &lt;- ae_activity |&gt;\n    mutate(date = lubridate::ymd(date))\n\nPreview of data\n\n\n\n\n\n\n\n\n\n\n\n\ndate\nhb\nloc\ntype\nattend\nn_within\nn_4\nn_8\nn_12\n\n\n\n2015-11-08\nS08000022\nH103H\nEmergency Department\n141\n131\n10\n0\n0\n\n\n2024-01-28\nS08000015\nA210H\nEmergency Department\n578\n343\n235\n119\n78\n\n\n2017-10-01\nS08000017\nY146H\nEmergency Department\n746\n707\n39\n0\n0\n\n\n2023-12-31\nS08000031\nC313H\nEmergency Department\n532\n347\n185\n38\n12\n\n\n2016-09-18\nS08000020\nN101H\nEmergency Department\n1204\n1068\n136\n5\n0"
  },
  {
    "objectID": "r_training/scope_of_the_possible_with_r.html#subset-data",
    "href": "r_training/scope_of_the_possible_with_r.html#subset-data",
    "title": "Scope of the possible with R",
    "section": "Subset data",
    "text": "Subset data\n\nwe’ll take a random selection of 5 health boards to keep things tidy\n\nae_activity &lt;- ae_activity |&gt;\n    filter(hb %in% boards)\n\nPreview of data\n\n\n\n\n\n\n\n\n\n\n\n\ndate\nhb\nloc\ntype\nattend\nn_within\nn_4\nn_8\nn_12\n\n\n\n2017-05-14\nS08000029\nF704H\nEmergency Department\n1306\n1181\n125\n7\n0\n\n\n2021-12-05\nS08000029\nF704H\nEmergency Department\n1189\n902\n287\n45\n3\n\n\n2020-06-14\nS08000029\nF704H\nEmergency Department\n981\n943\n38\n0\n0\n\n\n2021-02-21\nS08000022\nH202H\nEmergency Department\n501\n388\n113\n17\n0\n\n\n2015-03-01\nS08000022\nH103H\nEmergency Department\n115\n106\n9\n1\n1"
  },
  {
    "objectID": "r_training/scope_of_the_possible_with_r.html#basic-plots",
    "href": "r_training/scope_of_the_possible_with_r.html#basic-plots",
    "title": "Scope of the possible with R",
    "section": "Basic plots",
    "text": "Basic plots\nlibrary(ggplot2)\nae_activity |&gt;\n    ggplot() +\n    geom_line(aes(x = date, y = attend, colour = hb, group = loc))"
  },
  {
    "objectID": "r_training/scope_of_the_possible_with_r.html#joining-data",
    "href": "r_training/scope_of_the_possible_with_r.html#joining-data",
    "title": "Scope of the possible with R",
    "section": "Joining data",
    "text": "Joining data\nae_activity |&gt;\n    left_join(read_csv(\"data/boards_data.csv\"), by = c(\"hb\" = \"HB\")) |&gt;\n    select(!any_of(c(\"_id\", \"HB\", \"HBDateEnacted\", \"HBDateArchived\", \"Country\"))) |&gt;\n    ggplot() +\n    geom_line(aes(x = date, y = attend, colour = HBName, group = loc))"
  },
  {
    "objectID": "r_training/scope_of_the_possible_with_r.html#and-again",
    "href": "r_training/scope_of_the_possible_with_r.html#and-again",
    "title": "Scope of the possible with R",
    "section": "and again…",
    "text": "and again…"
  },
  {
    "objectID": "r_training/scope_of_the_possible_with_r.html#add-to-a-map",
    "href": "r_training/scope_of_the_possible_with_r.html#add-to-a-map",
    "title": "Scope of the possible with R",
    "section": "Add to a map",
    "text": "Add to a map\nae_activity_loc |&gt;\n    leaflet::leaflet() |&gt;\n    leaflet::addTiles() |&gt;\n    leaflet::addMarkers(~longitude, ~latitude, label = ~HospitalName)"
  },
  {
    "objectID": "r_training/scope_of_the_possible_with_r.html#then-make-that-map-more-useful",
    "href": "r_training/scope_of_the_possible_with_r.html#then-make-that-map-more-useful",
    "title": "Scope of the possible with R",
    "section": "Then make that map more useful",
    "text": "Then make that map more useful\nae_activity_loc |&gt;\n    group_by(HospitalName) |&gt;\n    summarise(attend = sum(attend), n_within = sum(n_within), longitude = min(longitude), latitude = min(latitude)) |&gt;\n    mutate(rate = paste(HospitalName, \"averages\", scales::percent(round(n_within / attend, 1)))) |&gt;\n    leaflet::leaflet() |&gt;\n    leaflet::addTiles() |&gt;\n    leaflet::addMarkers(~longitude, ~latitude, label = ~rate)"
  },
  {
    "objectID": "r_training/scope_of_the_possible_with_r.html#then-add-to-reports-dashboards",
    "href": "r_training/scope_of_the_possible_with_r.html#then-add-to-reports-dashboards",
    "title": "Scope of the possible with R",
    "section": "Then add to reports, dashboards…",
    "text": "Then add to reports, dashboards…"
  },
  {
    "objectID": "r_training/scope_of_the_possible_with_r.html#strengths",
    "href": "r_training/scope_of_the_possible_with_r.html#strengths",
    "title": "Scope of the possible with R",
    "section": "Strengths",
    "text": "Strengths\n\nenormous scope and flexibility\na force-multiplier for fancier data work\n\nhelps collaboration within teams, between teams, between orgs\nreproducible analytics\nmodular approaches to large projects\n\n\ndecreasing pain curve: the fancier the project, the better"
  },
  {
    "objectID": "r_training/scope_of_the_possible_with_r.html#weaknesses",
    "href": "r_training/scope_of_the_possible_with_r.html#weaknesses",
    "title": "Scope of the possible with R",
    "section": "Weaknesses",
    "text": "Weaknesses\n\nharder to learn than competitors\nvery patchy expertise across H+SC Scotland\ncomplex IG landscape\nmessy skills development journey"
  },
  {
    "objectID": "r_training/purrr_package.html",
    "href": "r_training/purrr_package.html",
    "title": "The purrr package in R",
    "section": "",
    "text": "Session materials\n\n\n\n\n\n\nall materials \nslides  html /  pdf"
  },
  {
    "objectID": "r_training/purrr_package.html#previous-attendees-have-said",
    "href": "r_training/purrr_package.html#previous-attendees-have-said",
    "title": "The purrr package in R",
    "section": "Previous attendees have said…",
    "text": "Previous attendees have said…\n\n2 previous attendees have left feedback\n100% would recommend this session to a colleague\n100% said that this session was pitched correctly\n\n\n\n\n\n\n\n\n\n\n\nThree random comments from previous attendees\n\n\n\n\n.\nThe session was a useful introduction to purrr, though I struggled a bit to identify how I might use it in my daily work"
  },
  {
    "objectID": "r_training/purrr_package.html#welcome",
    "href": "r_training/purrr_package.html#welcome",
    "title": "The purrr package in R",
    "section": "Welcome",
    "text": "Welcome\n\nthis session is for 🌶🌶 intermediate users\nyou’ll need R + Rstudio / Posit Workbench / posit.cloud to follow along"
  },
  {
    "objectID": "r_training/purrr_package.html#session-outline",
    "href": "r_training/purrr_package.html#session-outline",
    "title": "The purrr package in R",
    "section": "Session outline",
    "text": "Session outline\n\na digression about Linnaeus\nfunctionals\nbase-R functional programming\n\nmap and walk\n\n\nmap2 and pmap\n\nniceties and add-ons"
  },
  {
    "objectID": "r_training/purrr_package.html#a-digression-about-linnaeus",
    "href": "r_training/purrr_package.html#a-digression-about-linnaeus",
    "title": "The purrr package in R",
    "section": "A digression about Linnaeus",
    "text": "A digression about Linnaeus\n\n\n\n\n1758 edition of the Systema Naturae\n\n\n\nused an existing system of binomial classification\n\nHomo sapiens\n\n\nHomo = generic name, which applies to similar species\n\nsapiens = specific name, for that species and that species only\n\n\n\nPan troglodytes and Pan paniscus = two similar species in a genus\n\nElephas maximus and Loxodonta africana = two similar species in different genera"
  },
  {
    "objectID": "r_training/purrr_package.html#functionals",
    "href": "r_training/purrr_package.html#functionals",
    "title": "The purrr package in R",
    "section": "Functionals",
    "text": "Functionals\nHere are some numbers:\n\nn1 &lt;- 7:9\n\nLet’s find their average. We’d usually do this by passing those numbers to a function:\n\nmean(n1)\n\n[1] 8\n\n\nBut in R, interestingly, we can also do this the other way round by passing a function name:\n\nmy_num_f &lt;- function(funct = mean) funct(n1)\nmy_num_f(mean)\n\n[1] 8\n\nmy_num_f(sum)\n\n[1] 24\n\n\nWe’d describe this as a functional. It’s fun, but a bit messy and annoying (e.g. how to change the numbers you’re averaging??)."
  },
  {
    "objectID": "r_training/purrr_package.html#functional-programming-in-base-r",
    "href": "r_training/purrr_package.html#functional-programming-in-base-r",
    "title": "The purrr package in R",
    "section": "Functional programming in base R",
    "text": "Functional programming in base R\nSay we’ve got a function we want to apply:\n\nround_root &lt;- function(n) round(n ^ 0.5, 1)\n\nThere are several ways of applying functions to stuff in base R. + we could use a loop: that’s another session + we could just exploit the vectorised nature of most functions in R\n\nround_root(n1)\n\n[1] 2.6 2.8 3.0\n\n\n\nor we could use some of the apply family of functions, like lapply and sapply:\n\n\nlapply(n1, round_root) # returns a list\n\n[[1]]\n[1] 2.6\n\n[[2]]\n[1] 2.8\n\n[[3]]\n[1] 3\n\nsapply(n1, round_root) # simplifies that list to a vector\n\n[1] 2.6 2.8 3.0\n\n\nThere’s no real reason to use these functions when things are this simple, but when our applications become more complicated…\n\nn2 &lt;- 11:13\n\nlapply(list(n1, n2), round_root)\n\n[[1]]\n[1] 2.6 2.8 3.0\n\n[[2]]\n[1] 3.3 3.5 3.6\n\nsapply(list(n1, n2), round_root) # oddball output\n\n     [,1] [,2]\n[1,]  2.6  3.3\n[2,]  2.8  3.5\n[3,]  3.0  3.6\n\nlapply(list(n1, n2[1:2]), round_root) # quirky\n\n[[1]]\n[1] 2.6 2.8 3.0\n\n[[2]]\n[1] 3.3 3.5"
  },
  {
    "objectID": "r_training/purrr_package.html#purrr",
    "href": "r_training/purrr_package.html#purrr",
    "title": "The purrr package in R",
    "section": "purrr",
    "text": "purrr\n\n\npurrr is a functional programming toolkit\nmain advantage = consistency\n\nvery useful cheatsheet"
  },
  {
    "objectID": "r_training/purrr_package.html#map",
    "href": "r_training/purrr_package.html#map",
    "title": "The purrr package in R",
    "section": "map",
    "text": "map\nmap is our purrr type specimen\n\nlibrary(purrr)\nmap(n1, round_root)\n\n[[1]]\n[1] 2.6\n\n[[2]]\n[1] 2.8\n\n[[3]]\n[1] 3\n\n\nPleasingly, map will handle all kinds of odd inputs without fuss:\n\nmap(c(n1, n2), round_root)\n\n[[1]]\n[1] 2.6\n\n[[2]]\n[1] 2.8\n\n[[3]]\n[1] 3\n\n[[4]]\n[1] 3.3\n\n[[5]]\n[1] 3.5\n\n[[6]]\n[1] 3.6\n\nmap(dplyr::tibble(n1 = n1, n2 = n2), round_root)\n\n$n1\n[1] 2.6 2.8 3.0\n\n$n2\n[1] 3.3 3.5 3.6\n\nmap(rbind(n1, n2), round_root) \n\n[[1]]\n[1] 2.6\n\n[[2]]\n[1] 3.3\n\n[[3]]\n[1] 2.8\n\n[[4]]\n[1] 3.5\n\n[[5]]\n[1] 3\n\n[[6]]\n[1] 3.6\n\n\nmap will always return a list - that’s because, no matter what the output, you can always cram it into a list. If you want different output, you can have it. You just need to find the right species:\n\nmap_vec(n1, round_root)\n\n[1] 2.6 2.8 3.0\n\ntry(map_int(n1, round_root)) # surly and strict\n\nError in map_int(n1, round_root) : ℹ In index: 1.\nCaused by error:\n! Can't coerce from a number to an integer.\n\n\n\nround_root_int &lt;- function(n) as.integer(n ^ 0.5)\nmap_int(n1, round_root_int) \n\n[1] 2 2 3\n\n\n\nround_root_lgl &lt;- function(n) as.integer(n ^ 0.5) %% 2 == 0\nmap_lgl(n1, round_root_lgl)\n\n[1]  TRUE  TRUE FALSE"
  },
  {
    "objectID": "r_training/purrr_package.html#anonymous-functions",
    "href": "r_training/purrr_package.html#anonymous-functions",
    "title": "The purrr package in R",
    "section": "anonymous functions",
    "text": "anonymous functions\nIf you’re comfortable with the new anonymous function syntax, you can build an anonymous function in place:\n\nmap_lgl(1:4, \\(x) x %% 2 == 0)\n\n[1] FALSE  TRUE FALSE  TRUE"
  },
  {
    "objectID": "r_training/purrr_package.html#walk",
    "href": "r_training/purrr_package.html#walk",
    "title": "The purrr package in R",
    "section": "walk",
    "text": "walk\nwalk is intended for code where the side-effect is the point: graphs, pipes, and Rmarkdown especially. Otherwise, it’s as map:\n\nwalk(n1, round_root) # wtf?\nround_root_print &lt;- function(n) print(n ^ 0.5)\nwalk(n1, round_root_print) \n\n[1] 2.645751\n[1] 2.828427\n[1] 3\n\n\n\nround_root_cat &lt;- function(n) cat(n ^ 0.5, \"  \\n\")\nwalk(n1, round_root_cat)\n\n2.645751   \n2.828427   \n3"
  },
  {
    "objectID": "r_training/purrr_package.html#map2",
    "href": "r_training/purrr_package.html#map2",
    "title": "The purrr package in R",
    "section": "map2",
    "text": "map2\nmap2 is for 2-argument functions:\n\nmap2_int(n1, n2, `+`) # the best terrible way of adding I know\n\n[1] 18 20 22\n\nround_root_places &lt;- function(n, dp = 1) round(n ^ 0.5, dp)\nround_root_places(n1, 0)\n\n[1] 3 3 3\n\nmap2(n1, 0, round_root_places)\n\n[[1]]\n[1] 3\n\n[[2]]\n[1] 3\n\n[[3]]\n[1] 3"
  },
  {
    "objectID": "r_training/purrr_package.html#beware-of-recycling-rules",
    "href": "r_training/purrr_package.html#beware-of-recycling-rules",
    "title": "The purrr package in R",
    "section": "Beware of recycling rules",
    "text": "Beware of recycling rules\nYou’ll be unable to use map2 if your inputs are different lengths:\n\ntry(map2(1:3, 0:3, round_root_places))\n\nError in map2(1:3, 0:3, round_root_places) : \n  Can't recycle `.x` (size 3) to match `.y` (size 4).\n\n\nThis makes expand.grid valuable if you’re looking to try out all the combinations of two vectors, for example.\n\ndat &lt;- expand.grid(nums = 1:3, dplaces = 0:3) \n\nmap2(dat$nums, dat$dplaces, round_root_places)\n\n[[1]]\n[1] 1\n\n[[2]]\n[1] 1\n\n[[3]]\n[1] 2\n\n[[4]]\n[1] 1\n\n[[5]]\n[1] 1.4\n\n[[6]]\n[1] 1.7\n\n[[7]]\n[1] 1\n\n[[8]]\n[1] 1.41\n\n[[9]]\n[1] 1.73\n\n[[10]]\n[1] 1\n\n[[11]]\n[1] 1.414\n\n[[12]]\n[1] 1.732\n\n\nOr (probably more usefully) this could be done inside dplyr::mutate to add to a tibble:\nexpand.grid(nums = n1, dplaces = 0:3) |&gt;\n  dplyr::as_tibble() |&gt;\n  dplyr::mutate(rr = map2_vec(nums, dplaces, round_root_places)) |&gt;\n  knitr::kable()\n\n\nnums\ndplaces\nrr\n\n\n\n7\n0\n3.000\n\n\n8\n0\n3.000\n\n\n9\n0\n3.000\n\n\n7\n1\n2.600\n\n\n8\n1\n2.800\n\n\n9\n1\n3.000\n\n\n7\n2\n2.650\n\n\n8\n2\n2.830\n\n\n9\n2\n3.000\n\n\n7\n3\n2.646\n\n\n8\n3\n2.828\n\n\n9\n3\n3.000"
  },
  {
    "objectID": "r_training/purrr_package.html#pmap",
    "href": "r_training/purrr_package.html#pmap",
    "title": "The purrr package in R",
    "section": "pmap",
    "text": "pmap\npmap is for n argument functions.\n\nround_roots_places &lt;- function(n, root = 2, places = 1) round(n ^ 1/root, places)\n\nround_roots_places(n1, root = 4, places = 2) # use named arguments to avoid misery\n\n[1] 1.75 2.00 2.25\n\npmap(list(n = n1, root = 4, places = 2), round_roots_places)\n\n[[1]]\n[1] 1.75\n\n[[2]]\n[1] 2\n\n[[3]]\n[1] 2.25"
  },
  {
    "objectID": "r_training/purrr_package.html#niceties-and-addons",
    "href": "r_training/purrr_package.html#niceties-and-addons",
    "title": "The purrr package in R",
    "section": "Niceties and addons",
    "text": "Niceties and addons\nimap allows you to work with indicies, and list_c converts simple lists back to vectors:\n\nimap(list(\"a\", \"b\", \"c\"), \\(x, y) paste0(y, \": \", x)) |&gt; # index map where y is the name or index\n  list_c()\n\n[1] \"1: a\" \"2: b\" \"3: c\"\n\n\nIf your function returns a tibble, you can use list_rbind or list_cbind to row- or column-bind the results into a tibble:\nmap(n1, \\(x) dplyr::tibble(\"Val\" = x, \"sq_val\" = x^2)) |&gt;\n  list_rbind() |&gt;\n  knitr::kable()\n\n\nVal\nsq_val\n\n\n\n7\n49\n\n\n8\n64\n\n\n9\n81"
  },
  {
    "objectID": "r_training/purrr_package.html#resources",
    "href": "r_training/purrr_package.html#resources",
    "title": "The purrr package in R",
    "section": "Resources",
    "text": "Resources\n\nfunctionals chapter in Advanced R\npurrr cheatsheet"
  },
  {
    "objectID": "r_training/lists_r.html",
    "href": "r_training/lists_r.html",
    "title": "R lists",
    "section": "",
    "text": "No feedback found for this session"
  },
  {
    "objectID": "r_training/lists_r.html#introduction",
    "href": "r_training/lists_r.html#introduction",
    "title": "R lists",
    "section": "Introduction",
    "text": "Introduction\n\nlists are one of R’s built-in data structures\nlists are roughly equivalent to a vector of vectors"
  },
  {
    "objectID": "r_training/lists_r.html#make-and-change-lists",
    "href": "r_training/lists_r.html#make-and-change-lists",
    "title": "R lists",
    "section": "Make and change lists",
    "text": "Make and change lists\n\nlist construction can be done in a couple of different ways:\n\n\nlist(\"1\", \"2\")\n\n[[1]]\n[1] \"1\"\n\n[[2]]\n[1] \"2\"\n\nempty &lt;- vector(\"list\", 3L)\nempty\n\n[[1]]\nNULL\n\n[[2]]\nNULL\n\n[[3]]\nNULL\n\n\n\nyou can assign into lists\n\n\nempty[[2]] &lt;- 9\nempty # ironic\n\n[[1]]\nNULL\n\n[[2]]\n[1] 9\n\n[[3]]\nNULL\n\nempty[[2]] &lt;- NULL\nempty # balance restored\n\n[[1]]\nNULL\n\n[[2]]\nNULL\n\n\n\nlists are ordered:\n\n\nsimple_list &lt;- list(\"one\", \"two\", \"three\")\nsimple_list[1]\n\n[[1]]\n[1] \"one\""
  },
  {
    "objectID": "r_training/lists_r.html#so-whats-good-about-lists",
    "href": "r_training/lists_r.html#so-whats-good-about-lists",
    "title": "R lists",
    "section": "So what’s good about lists?",
    "text": "So what’s good about lists?\n\nso far, so like vectors\nunlike vectors and df/tibbles, lists are ragged arrays - can store different lengths and kinds of values together\nlet’s start with some vectors of different types:\n\n\nhw &lt;- \"hello world\"\nhi &lt;- substr(hw, 1, 5)\nhh &lt;- c(hi, hw)\nhcount &lt;- sum(nchar(c(hh, hi, hw)))\ning_things &lt;- factor(c(\"thing\", \"string\", \"wing\", \"bling\"), levels = c(\"wing\", \"bling\", \"string\", \"thing\"))\n\n\nnow build a list, and discover that you can store these dissimilar items together\n\n\nlist(hh, hi, hw, ing_things, hcount)\n\n[[1]]\n[1] \"hello\"       \"hello world\"\n\n[[2]]\n[1] \"hello\"\n\n[[3]]\n[1] \"hello world\"\n\n[[4]]\n[1] thing  string wing   bling \nLevels: wing bling string thing\n\n[[5]]\n[1] 32"
  },
  {
    "objectID": "r_training/lists_r.html#names",
    "href": "r_training/lists_r.html#names",
    "title": "R lists",
    "section": "Names",
    "text": "Names\n\nyou can name list items\n\n\nnamed_list &lt;- list(\"hh\" = hh, \n                   \"hi\" = hi, \n                   \"hw\" = hw, \n                   \"silly_name\" = ing_things,\n                   \"total_letter_score\" = hcount)\n\n\nit turns out that you already knew that: df/tibbles are a special case of lists. That means that some familiar friends will work with lists - list using $ to get at named list items:\n\n\nnamed_list$hw\n\n[1] \"hello world\"\n\nnamed_list$hi\n\n[1] \"hello\"\n\npaste(\"we've got a total of\", named_list$hcount, \"characters in our list, including\", named_list$silly_name)\n\n[1] \"we've got a total of  characters in our list, including thing\" \n[2] \"we've got a total of  characters in our list, including string\"\n[3] \"we've got a total of  characters in our list, including wing\"  \n[4] \"we've got a total of  characters in our list, including bling\""
  },
  {
    "objectID": "r_training/lists_r.html#indexing-lists",
    "href": "r_training/lists_r.html#indexing-lists",
    "title": "R lists",
    "section": "Indexing lists",
    "text": "Indexing lists\n\nthere’s some additional care required when working with indexes and lists though:\n\n\nnamed_list$hi # a vector\n\n[1] \"hello\"\n\nnamed_list[2] # that's a list\n\n$hi\n[1] \"hello\"\n\nclass(mtcars[2]) # likewise, a 1-column df\n\n[1] \"data.frame\"\n\n\n\ntwo easy ways of getting vectors out of lists\n\n\nnamed_list$silly_name # like df\n\n[1] thing  string wing   bling \nLevels: wing bling string thing\n\nnamed_list[[2]] # double brackets\n\n[1] \"hello\""
  },
  {
    "objectID": "r_training/lists_r.html#unmaking-lists",
    "href": "r_training/lists_r.html#unmaking-lists",
    "title": "R lists",
    "section": "Unmaking lists",
    "text": "Unmaking lists\n\nif you’re not too fussy about the resulting structure, you can flatten a list into a named vector\n\n\nunlist(named_list)\n\n               hh1                hh2                 hi                 hw \n           \"hello\"      \"hello world\"            \"hello\"      \"hello world\" \n       silly_name1        silly_name2        silly_name3        silly_name4 \n               \"4\"                \"3\"                \"1\"                \"2\" \ntotal_letter_score \n              \"32\" \n\n\n\neach item is named by a concatenation of the original list item name (like “silly_name”) and an index number - so “silly_name4”. You can retrieve elements from the vector by these names:\n\n\nunlist(named_list)[\"silly_name4\"]\n\nsilly_name4 \n        \"2\" \n\n\n\nnote that everything has been coerced to character - a reminder that vectors can only contain a single data type\nyou can also turn a list with equal/similar length items into a tidy array like a tibble:\n\n\ntidyr::tibble(glurt = list(hh, hh, hh)) |&gt;\n  tidyr::unnest_wider(col = glurt, names_sep = \"_\")\n\n# A tibble: 3 × 2\n  glurt_1 glurt_2    \n  &lt;chr&gt;   &lt;chr&gt;      \n1 hello   hello world\n2 hello   hello world\n3 hello   hello world\n\n\n\nthings get much more messy when you’re dealing with lists with mixed lengths and types. That’s beyond us today - have a look at R for data science for an introduction to rectangling"
  },
  {
    "objectID": "r_training/lists_r.html#what-are-lists-for",
    "href": "r_training/lists_r.html#what-are-lists-for",
    "title": "R lists",
    "section": "What are lists for?",
    "text": "What are lists for?\nLists are particularly useful in three cases:\n\nwhere you don’t know what type of output you’re going to get. This is the reason that purrr::map returns a list by default - you can collect any output type in a list.\n\n\nrando &lt;- function(n){\n  ifelse(runif(1) &gt; 0.5, list(n), as.character(n)) # sometimes numeric, sometimes char\n}\nrando(4)\n\n[[1]]\n[1] 4\n\nc(4,3,rando(8)) # unfortunate coercion that might happen with vectors\n\n[[1]]\n[1] 4\n\n[[2]]\n[1] 3\n\n[[3]]\n[1] 8\n\nlist(4,3,rando(8)) # happier and safer in a list\n\n[[1]]\n[1] 4\n\n[[2]]\n[1] 3\n\n[[3]]\n[1] \"8\"\n\n\n\nwhen you’ve got several related bits of data you want to keep together, especially if you’d like to save them to a single portable object:\n\n\nnamed_list |&gt;\n  readr::write_rds(\"data/named_list.rds\")\nrm(list = ls()) # clear environment\n\nnamed_list &lt;- readr::read_rds(\"data/named_list.rds\")\n\nnamed_list |&gt;\n  list2env(envir = .GlobalEnv) # don't tell any proper programmers about this\n\n&lt;environment: R_GlobalEnv&gt;\n\n\n\nwhen you’re dealing with wildly complicated data structures. Nice example from R for data science, which is too long-winded for a practical session like this, but a good example of real-world horrible data\n\n\nrepurrrsive::gmaps_cities |&gt; # list columns on list columns\n  tidyr::unnest_wider(col = json) |&gt;\n  tidyr::unnest_longer(col = results) |&gt;\n  tidyr::unnest_wider(col = results) \n\n# A tibble: 7 × 7\n  city  address_components formatted_address geometry     place_id types  status\n  &lt;chr&gt; &lt;list&gt;             &lt;chr&gt;             &lt;list&gt;       &lt;chr&gt;    &lt;list&gt; &lt;chr&gt; \n1 Hous… &lt;list [4]&gt;         Houston, TX, USA  &lt;named list&gt; ChIJAYW… &lt;list&gt; OK    \n2 Wash… &lt;list [2]&gt;         Washington, USA   &lt;named list&gt; ChIJ-bD… &lt;list&gt; OK    \n3 Wash… &lt;list [4]&gt;         Washington, DC, … &lt;named list&gt; ChIJW-T… &lt;list&gt; OK    \n4 New … &lt;list [3]&gt;         New York, NY, USA &lt;named list&gt; ChIJOwg… &lt;list&gt; OK    \n5 Chic… &lt;list [4]&gt;         Chicago, IL, USA  &lt;named list&gt; ChIJ7cv… &lt;list&gt; OK    \n6 Arli… &lt;list [4]&gt;         Arlington, TX, U… &lt;named list&gt; ChIJ05g… &lt;list&gt; OK    \n7 Arli… &lt;list [4]&gt;         Arlington, VA, U… &lt;named list&gt; ChIJD6e… &lt;list&gt; OK    \n\n\nAgain, getting beyond the session’s aims, but the purrr package is a great help for this kind of nested-nested-nested data:\n\nrepurrrsive::gmaps_cities |&gt;\n  purrr::pluck(2,1,1,1,\"formatted_address\")\n\n[1] \"Houston, TX, USA\""
  },
  {
    "objectID": "r_training/exploring_data_with_dplyr.html",
    "href": "r_training/exploring_data_with_dplyr.html",
    "title": "Exploring data with dplyr",
    "section": "",
    "text": "No feedback found for this session"
  },
  {
    "objectID": "r_training/exploring_data_with_dplyr.html#session-outline",
    "href": "r_training/exploring_data_with_dplyr.html#session-outline",
    "title": "Exploring data with dplyr",
    "section": "Session outline",
    "text": "Session outline\nThis session is an 🌶🌶 intermediate practical designed for those with some R experience. The aim of this session is to do three things with dplyr:\n\nbuild your fluency with basic dplyr functionality\nshow some of the similarities of approach across the package, again to help you master the syntax\nlearn some of the more advanced functions to harness the power available beneath the surface\n\nYou might also like some of the other dplyr-themed practical sessions:\n\nSummarising data with dplyr\nJoining data with dplyr\nTidyselect"
  },
  {
    "objectID": "r_training/exploring_data_with_dplyr.html#a-starting-point",
    "href": "r_training/exploring_data_with_dplyr.html#a-starting-point",
    "title": "Exploring data with dplyr",
    "section": "A starting-point",
    "text": "A starting-point\nYou should have at least some previous experience working with dplyr before starting this training. Specifically, you should be familiar with at least:\n\n\nselect(), to select columns from data\n\nfilter(), to select rows from data\n\nmutate(), to make new columns from existing columns"
  },
  {
    "objectID": "r_training/exploring_data_with_dplyr.html#investigating-data",
    "href": "r_training/exploring_data_with_dplyr.html#investigating-data",
    "title": "Exploring data with dplyr",
    "section": "Investigating data",
    "text": "Investigating data\nDplyr is usually used as a toolkit for manipulating tidy data. This session concentrates on some lesser-used functions in the dplyr package that are especially useful earlier in the analysis lifecycle when exploring new data: slice(), glimpse(), rename(), relocate(), case_when()/case_match(), and consecutive_id()\nPackage loading as follows:\n\nlibrary(NHSRdatasets)\nlibrary(dplyr)\n\nslice()\nIt’s definitely worth pointing you towards the slice() manual page - it’s clear and interesting.\nAt its simplest, slice() is an alternative to head:\n\nae_attendances |&gt; \n  slice(1:6)\n\n# A tibble: 6 × 6\n  period     org_code type  attendances breaches admissions\n  &lt;date&gt;     &lt;fct&gt;    &lt;fct&gt;       &lt;dbl&gt;    &lt;dbl&gt;      &lt;dbl&gt;\n1 2017-03-01 RF4      1           21289     2879       5060\n2 2017-03-01 RF4      2             813       22          0\n3 2017-03-01 RF4      other        2850        6          0\n4 2017-03-01 R1H      1           30210     5902       6943\n5 2017-03-01 R1H      2             807       11          0\n6 2017-03-01 R1H      other       11352      136          0\n\n\nThe number supplied to slice() returns that row - so slice(3) shows the third row. You can also provide a sequence or vector of rows:\n\nae_attendances |&gt; \n  slice(1:3)\n\n# A tibble: 3 × 6\n  period     org_code type  attendances breaches admissions\n  &lt;date&gt;     &lt;fct&gt;    &lt;fct&gt;       &lt;dbl&gt;    &lt;dbl&gt;      &lt;dbl&gt;\n1 2017-03-01 RF4      1           21289     2879       5060\n2 2017-03-01 RF4      2             813       22          0\n3 2017-03-01 RF4      other        2850        6          0\n\nae_attendances |&gt; \n  slice(2,5,918)\n\n# A tibble: 3 × 6\n  period     org_code type  attendances breaches admissions\n  &lt;date&gt;     &lt;fct&gt;    &lt;fct&gt;       &lt;dbl&gt;    &lt;dbl&gt;      &lt;dbl&gt;\n1 2017-03-01 RF4      2             813       22          0\n2 2017-03-01 R1H      2             807       11          0\n3 2017-01-01 RQ6      other       10253        0          0\n\n\nMore interestingly, you can group_by(), then slice, to see the first row of each group. Here, the data is filtered, grouped by org_code, then we slice the top row of each group:\n\nae_attendances |&gt;\n  filter(attendances &gt;= 22000) |&gt;\n  group_by(org_code) |&gt;\n  slice(1)\n\n# A tibble: 4 × 6\n# Groups:   org_code [4]\n  period     org_code type  attendances breaches admissions\n  &lt;date&gt;     &lt;fct&gt;    &lt;fct&gt;       &lt;dbl&gt;    &lt;dbl&gt;      &lt;dbl&gt;\n1 2017-10-01 R0A      1           22392     3628       6836\n2 2017-03-01 R1H      1           30210     5902       6943\n3 2019-03-01 RRK      1           32017    10670      10850\n4 2017-03-01 RW6      1           22930     4997       5328\n\n\n(we’ll explore group_by() in the summarising data with dplyr session, so don’t worry if this is unfamiliar)\nThe slice_min() and slice_max() functions are also useful, giving you something like an integrated arrange() for looking at slices of the data:\n\nae_attendances |&gt;\n  filter(type == \"1\") |&gt;\n  slice_max(breaches, n=1)\n\n# A tibble: 1 × 6\n  period     org_code type  attendances breaches admissions\n  &lt;date&gt;     &lt;fct&gt;    &lt;fct&gt;       &lt;dbl&gt;    &lt;dbl&gt;      &lt;dbl&gt;\n1 2019-01-01 RRK      1           31935    12502      11493\n\n# equivalent to\nae_attendances |&gt;\n  arrange(desc(breaches)) |&gt;\n  slice(1)\n\n# A tibble: 1 × 6\n  period     org_code type  attendances breaches admissions\n  &lt;date&gt;     &lt;fct&gt;    &lt;fct&gt;       &lt;dbl&gt;    &lt;dbl&gt;      &lt;dbl&gt;\n1 2019-01-01 RRK      1           31935    12502      11493\n\n\n(note that you need to explicitly name the number of rows you want using n=...)\nslice_min() and slice_max() are particularly useful for groups:\n\nae_attendances |&gt;\n  filter(type == \"1\") |&gt;\n  group_by(org_code) |&gt;\n  slice_max(breaches, n=1) \n\n# A tibble: 140 × 6\n# Groups:   org_code [140]\n   period     org_code type  attendances breaches admissions\n   &lt;date&gt;     &lt;fct&gt;    &lt;fct&gt;       &lt;dbl&gt;    &lt;dbl&gt;      &lt;dbl&gt;\n 1 2019-01-01 R0A      1           21980     6206       6985\n 2 2018-11-01 R1F      1            3810     1262        967\n 3 2017-01-01 R1H      1           28420     7426       6435\n 4 2017-01-01 R1K      1           11961     5897       4587\n 5 2019-01-01 RA2      1            6242     1071       2513\n 6 2017-01-01 RA3      1            4073     1471       1074\n 7 2016-06-01 RA4      1            3992      454       1057\n 8 2016-11-01 RA7      1            9625     2445       3064\n 9 2019-01-01 RA9      1            6056     2053       2557\n10 2019-03-01 RAE      1           10698     3438       2854\n# ℹ 130 more rows\n\n\nslice_sample() gives a random sampling of the data.\n\nae_attendances |&gt;\n  slice_sample(n=6) \n\n# A tibble: 6 × 6\n  period     org_code type  attendances breaches admissions\n  &lt;date&gt;     &lt;fct&gt;    &lt;fct&gt;       &lt;dbl&gt;    &lt;dbl&gt;      &lt;dbl&gt;\n1 2019-03-01 RK5      1            9373      901       3033\n2 2016-04-01 RW3      1           11977     1655       3347\n3 2016-11-01 NX122    other        2701        0          0\n4 2016-09-01 RE9      other         678        4          0\n5 2017-06-01 RH5      other        8231       31          0\n6 2019-02-01 RQ6      2             464        0         22\n\n\nThere are also slice_head() and slice_tail() functions which work in the same way.\nFinal tip - slice with a negative index can be used as like filter() to remove the specified row(s):\n\n# returns the last 5 rows only\nae_attendances |&gt; \n  slice(-1:-12760)\n\n# A tibble: 5 × 6\n  period     org_code type  attendances breaches admissions\n  &lt;date&gt;     &lt;fct&gt;    &lt;fct&gt;       &lt;dbl&gt;    &lt;dbl&gt;      &lt;dbl&gt;\n1 2018-04-01 Y02584   other         471        0          0\n2 2018-04-01 RA3      1            3825      476       1016\n3 2018-04-01 AXG      other        2980       24          0\n4 2018-04-01 NLX24    other        1538        0          0\n5 2018-04-01 RA4      1            4388       82       1292\n\n\nglimpse()\nglimpse() is a data viewing function similar to print(), except it transposes the data so that each column is displayed as a row. This is particularly useful for wide data with many columns, especially when you are interested in checking the class (date, character, etc.) of your columns.\n\nsynthetic_news_data |&gt; \n  glimpse() \n\nRows: 1,000\nColumns: 12\n$ male  &lt;int&gt; 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1…\n$ age   &lt;int&gt; 68, 94, 85, 44, 77, 58, 25, 69, 91, 70, 87, 93, 61, 75, 97, 80, …\n$ NEWS  &lt;int&gt; 3, 1, 0, 0, 1, 1, 4, 0, 1, 1, 7, 2, 5, 1, 1, 3, 1, 5, 0, 2, 1, 2…\n$ syst  &lt;int&gt; 150, 145, 169, 154, 122, 146, 65, 116, 162, 132, 110, 166, 123, …\n$ dias  &lt;int&gt; 98, 67, 69, 106, 67, 106, 42, 56, 72, 96, 85, 90, 78, 80, 72, 81…\n$ temp  &lt;dbl&gt; 36.8, 35.0, 36.2, 36.9, 36.4, 35.3, 35.6, 37.2, 35.5, 35.3, 37.0…\n$ pulse &lt;int&gt; 78, 62, 54, 80, 62, 73, 72, 90, 60, 67, 95, 87, 93, 65, 89, 145,…\n$ resp  &lt;int&gt; 26, 18, 18, 17, 20, 20, 12, 16, 16, 16, 24, 16, 26, 12, 16, 16, …\n$ sat   &lt;int&gt; 96, 96, 96, 96, 95, 98, 99, 97, 99, 97, 87, 95, 96, 96, 98, 99, …\n$ sup   &lt;int&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0…\n$ alert &lt;int&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ died  &lt;int&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n\n\nNote the useful dimension information in the first two lines, and the class information in angle brackets. Okay, so there are lots of similar ways of displaying the same information, but glimpse() is nice and concise both to write and to read. Compare a couple of base r (or purrr) near-equivalents, which are especially messy when the data is quite wide:\n\nsynthetic_news_data |&gt; \n  purrr::map_df(class)\n\n# A tibble: 1 × 12\n  male    age     NEWS    syst   dias  temp  pulse resp  sat   sup   alert died \n  &lt;chr&gt;   &lt;chr&gt;   &lt;chr&gt;   &lt;chr&gt;  &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt;\n1 integer integer integer integ… inte… nume… inte… inte… inte… inte… inte… inte…\n\n# equivalent in base R\nlapply(synthetic_news_data, class)\n\n$male\n[1] \"integer\"\n\n$age\n[1] \"integer\"\n\n$NEWS\n[1] \"integer\"\n\n$syst\n[1] \"integer\"\n\n$dias\n[1] \"integer\"\n\n$temp\n[1] \"numeric\"\n\n$pulse\n[1] \"integer\"\n\n$resp\n[1] \"integer\"\n\n$sat\n[1] \"integer\"\n\n$sup\n[1] \"integer\"\n\n$alert\n[1] \"integer\"\n\n$died\n[1] \"integer\"\n\n\nglimpse() plays nicely with the pipe, meaning that it’s potentially useful while you’re working on a complicated data transformation. If you have lots of stages piped together, you can insert glimpse() in periodically to check that each stage of your transformation is working as expected:\n\nsynthetic_news_data |&gt; \n  glimpse() |&gt;\n  filter(age == 71 & male == 0) |&gt;\n  glimpse() |&gt;\n  mutate(pulse_pres = syst-dias) |&gt;\n  glimpse()\n\nRows: 1,000\nColumns: 12\n$ male  &lt;int&gt; 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1…\n$ age   &lt;int&gt; 68, 94, 85, 44, 77, 58, 25, 69, 91, 70, 87, 93, 61, 75, 97, 80, …\n$ NEWS  &lt;int&gt; 3, 1, 0, 0, 1, 1, 4, 0, 1, 1, 7, 2, 5, 1, 1, 3, 1, 5, 0, 2, 1, 2…\n$ syst  &lt;int&gt; 150, 145, 169, 154, 122, 146, 65, 116, 162, 132, 110, 166, 123, …\n$ dias  &lt;int&gt; 98, 67, 69, 106, 67, 106, 42, 56, 72, 96, 85, 90, 78, 80, 72, 81…\n$ temp  &lt;dbl&gt; 36.8, 35.0, 36.2, 36.9, 36.4, 35.3, 35.6, 37.2, 35.5, 35.3, 37.0…\n$ pulse &lt;int&gt; 78, 62, 54, 80, 62, 73, 72, 90, 60, 67, 95, 87, 93, 65, 89, 145,…\n$ resp  &lt;int&gt; 26, 18, 18, 17, 20, 20, 12, 16, 16, 16, 24, 16, 26, 12, 16, 16, …\n$ sat   &lt;int&gt; 96, 96, 96, 96, 95, 98, 99, 97, 99, 97, 87, 95, 96, 96, 98, 99, …\n$ sup   &lt;int&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0…\n$ alert &lt;int&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ died  &lt;int&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\nRows: 11\nColumns: 12\n$ male  &lt;int&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n$ age   &lt;int&gt; 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71\n$ NEWS  &lt;int&gt; 1, 1, 2, 1, 2, 1, 1, 2, 1, 2, 3\n$ syst  &lt;int&gt; 128, 128, 137, 128, 114, 106, 128, 114, 132, 137, 102\n$ dias  &lt;int&gt; 67, 81, 61, 81, 62, 56, 82, 66, 96, 78, 51\n$ temp  &lt;dbl&gt; 38.2, 37.9, 36.4, 36.2, 35.9, 36.2, 37.9, 38.2, 35.4, 37.0, 35.8\n$ pulse &lt;int&gt; 99, 101, 102, 73, 87, 72, 110, 103, 67, 102, 54\n$ resp  &lt;int&gt; 17, 18, 17, 18, 16, 15, 17, 14, 17, 19, 18\n$ sat   &lt;int&gt; 98, 96, 95, 95, 95, 97, 97, 99, 99, 95, 100\n$ sup   &lt;int&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1\n$ alert &lt;int&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n$ died  &lt;int&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\nRows: 11\nColumns: 13\n$ male       &lt;int&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n$ age        &lt;int&gt; 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71\n$ NEWS       &lt;int&gt; 1, 1, 2, 1, 2, 1, 1, 2, 1, 2, 3\n$ syst       &lt;int&gt; 128, 128, 137, 128, 114, 106, 128, 114, 132, 137, 102\n$ dias       &lt;int&gt; 67, 81, 61, 81, 62, 56, 82, 66, 96, 78, 51\n$ temp       &lt;dbl&gt; 38.2, 37.9, 36.4, 36.2, 35.9, 36.2, 37.9, 38.2, 35.4, 37.0,…\n$ pulse      &lt;int&gt; 99, 101, 102, 73, 87, 72, 110, 103, 67, 102, 54\n$ resp       &lt;int&gt; 17, 18, 17, 18, 16, 15, 17, 14, 17, 19, 18\n$ sat        &lt;int&gt; 98, 96, 95, 95, 95, 97, 97, 99, 99, 95, 100\n$ sup        &lt;int&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1\n$ alert      &lt;int&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n$ died       &lt;int&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n$ pulse_pres &lt;int&gt; 61, 47, 76, 47, 52, 50, 46, 48, 36, 59, 51\n\n\n\nrename() (and rename_with())\nrename() renames columns. Like mutate(), the general syntax for rename() is new name = old name.\n\nLOS_model |&gt;\n  rename(age = Age) \n\n# A tibble: 300 × 5\n      ID Organisation   age   LOS Death\n   &lt;int&gt; &lt;ord&gt;        &lt;int&gt; &lt;int&gt; &lt;int&gt;\n 1     1 Trust1          55     2     0\n 2     2 Trust2          27     1     0\n 3     3 Trust3          93    12     0\n 4     4 Trust4          45     3     1\n 5     5 Trust5          70    11     0\n 6     6 Trust6          60     7     0\n 7     7 Trust7          25     4     0\n 8     8 Trust8          48     4     0\n 9     9 Trust9          51     7     1\n10    10 Trust10         81     1     0\n# ℹ 290 more rows\n\n\nThere’s not much more to say about the basic rename() function beyond that. However, the scoped variants, rename_with() and rename_all() provide some useful additional tools. For example, we can use tolower() - which converts strings to all lower-case - to rename multiple columns at once:\n\nLOS_model |&gt; \n  rename_with(tolower) \n\n# A tibble: 300 × 5\n      id organisation   age   los death\n   &lt;int&gt; &lt;ord&gt;        &lt;int&gt; &lt;int&gt; &lt;int&gt;\n 1     1 Trust1          55     2     0\n 2     2 Trust2          27     1     0\n 3     3 Trust3          93    12     0\n 4     4 Trust4          45     3     1\n 5     5 Trust5          70    11     0\n 6     6 Trust6          60     7     0\n 7     7 Trust7          25     4     0\n 8     8 Trust8          48     4     0\n 9     9 Trust9          51     7     1\n10    10 Trust10         81     1     0\n# ℹ 290 more rows\n\n\nrename() works well with tidyselect operators too, as we discuss in that session.\nrelocate()\nrelocate() re-arranges the order of columns:\n\nLOS_model \n\n# A tibble: 300 × 5\n      ID Organisation   Age   LOS Death\n   &lt;int&gt; &lt;ord&gt;        &lt;int&gt; &lt;int&gt; &lt;int&gt;\n 1     1 Trust1          55     2     0\n 2     2 Trust2          27     1     0\n 3     3 Trust3          93    12     0\n 4     4 Trust4          45     3     1\n 5     5 Trust5          70    11     0\n 6     6 Trust6          60     7     0\n 7     7 Trust7          25     4     0\n 8     8 Trust8          48     4     0\n 9     9 Trust9          51     7     1\n10    10 Trust10         81     1     0\n# ℹ 290 more rows\n\n\nrelocate()’s default behaviour is to move specified columns to the far left:\n\nLOS_model |&gt;\n  relocate(LOS) \n\n# A tibble: 300 × 5\n     LOS    ID Organisation   Age Death\n   &lt;int&gt; &lt;int&gt; &lt;ord&gt;        &lt;int&gt; &lt;int&gt;\n 1     2     1 Trust1          55     0\n 2     1     2 Trust2          27     0\n 3    12     3 Trust3          93     0\n 4     3     4 Trust4          45     1\n 5    11     5 Trust5          70     0\n 6     7     6 Trust6          60     0\n 7     4     7 Trust7          25     0\n 8     4     8 Trust8          48     0\n 9     7     9 Trust9          51     1\n10     1    10 Trust10         81     0\n# ℹ 290 more rows\n\n\nYou can specify .before and .after if you need finer control over where your column ends up:\n\nLOS_model |&gt;\n  relocate(LOS, .after=Death)\n\n# A tibble: 300 × 5\n      ID Organisation   Age Death   LOS\n   &lt;int&gt; &lt;ord&gt;        &lt;int&gt; &lt;int&gt; &lt;int&gt;\n 1     1 Trust1          55     0     2\n 2     2 Trust2          27     0     1\n 3     3 Trust3          93     0    12\n 4     4 Trust4          45     1     3\n 5     5 Trust5          70     0    11\n 6     6 Trust6          60     0     7\n 7     7 Trust7          25     0     4\n 8     8 Trust8          48     0     4\n 9     9 Trust9          51     1     7\n10    10 Trust10         81     0     1\n# ℹ 290 more rows\n\nLOS_model |&gt;\n  relocate(Death, .before=last_col()) # little bit of tidyselect\n\n# A tibble: 300 × 5\n      ID Organisation   Age   LOS Death\n   &lt;int&gt; &lt;ord&gt;        &lt;int&gt; &lt;int&gt; &lt;int&gt;\n 1     1 Trust1          55     2     0\n 2     2 Trust2          27     1     0\n 3     3 Trust3          93    12     0\n 4     4 Trust4          45     3     1\n 5     5 Trust5          70    11     0\n 6     6 Trust6          60     7     0\n 7     7 Trust7          25     4     0\n 8     8 Trust8          48     4     0\n 9     9 Trust9          51     7     1\n10    10 Trust10         81     1     0\n# ℹ 290 more rows\n\n\ncase_when()\nThe ONS mortality data in NHSRdatasets has several categories\n\nons_mortality |&gt;\n  count(category_1)\n\n# A tibble: 9 × 2\n  category_1                                                                   n\n  &lt;chr&gt;                                                                    &lt;int&gt;\n1 All respiratory diseases (ICD-10 J00-J99) ICD-10                           536\n2 Deaths where COVID-19 was mentioned on the death certificate (ICD-10 U0…    14\n3 Females                                                                   3927\n4 Males                                                                     3927\n5 Persons                                                                   3927\n6 Region                                                                    5350\n7 Total deaths                                                              1056\n8 average of same week over 5 years                                           14\n9 &lt;NA&gt;                                                                        52\n\n\nWinter (metrological winter, for clarity) runs from the start of December to the end of February. Can we class the total deaths into winter, and non-winter categories? In practice, I’d be tempted to use lubridate::quarter() with an appropriate starting offset for this kind of work if possible, especially if I was grouping into regular groups. Winter/non-winter isn’t regular though, so case_when() is the better option. Here, we’ll work in stages. First, as we’ll need the months, we’ll extract those using lubridate::month():\n\nons_mortality |&gt;\n  filter(category_1 == \"Total deaths\") |&gt;\n  mutate(month = lubridate::month(date))\n\n# A tibble: 1,056 × 6\n   category_1   category_2 counts date       week_no month\n   &lt;chr&gt;        &lt;chr&gt;       &lt;dbl&gt; &lt;date&gt;       &lt;int&gt; &lt;dbl&gt;\n 1 Total deaths all ages    12968 2010-01-08       1     1\n 2 Total deaths all ages    12541 2010-01-15       2     1\n 3 Total deaths all ages    11762 2010-01-22       3     1\n 4 Total deaths all ages    11056 2010-01-29       4     1\n 5 Total deaths all ages    10524 2010-02-05       5     2\n 6 Total deaths all ages    10117 2010-02-12       6     2\n 7 Total deaths all ages    10102 2010-02-19       7     2\n 8 Total deaths all ages    10295 2010-02-26       8     2\n 9 Total deaths all ages     9981 2010-03-05       9     3\n10 Total deaths all ages     9792 2010-03-12      10     3\n# ℹ 1,046 more rows\n\n\nOur definition of winter is any case where that month is 1, 2, or 12. So use case_when() to catch Jan and Feb:\n\nons_mortality |&gt;\n  filter(category_1 == \"Total deaths\") |&gt;\n  mutate(month = lubridate::month(date)) |&gt;\n  mutate(thing = case_when(month &lt; 3 ~ \"Winter\"))\n\n# A tibble: 1,056 × 7\n   category_1   category_2 counts date       week_no month thing \n   &lt;chr&gt;        &lt;chr&gt;       &lt;dbl&gt; &lt;date&gt;       &lt;int&gt; &lt;dbl&gt; &lt;chr&gt; \n 1 Total deaths all ages    12968 2010-01-08       1     1 Winter\n 2 Total deaths all ages    12541 2010-01-15       2     1 Winter\n 3 Total deaths all ages    11762 2010-01-22       3     1 Winter\n 4 Total deaths all ages    11056 2010-01-29       4     1 Winter\n 5 Total deaths all ages    10524 2010-02-05       5     2 Winter\n 6 Total deaths all ages    10117 2010-02-12       6     2 Winter\n 7 Total deaths all ages    10102 2010-02-19       7     2 Winter\n 8 Total deaths all ages    10295 2010-02-26       8     2 Winter\n 9 Total deaths all ages     9981 2010-03-05       9     3 &lt;NA&gt;  \n10 Total deaths all ages     9792 2010-03-12      10     3 &lt;NA&gt;  \n# ℹ 1,046 more rows\n\n\nand then add an extra case to deal with December:\n\nons_mortality |&gt;\n  filter(category_1 == \"Total deaths\") |&gt;\n  mutate(month = lubridate::month(date)) |&gt;\n  mutate(season = case_when(month &lt; 3 ~ \"Winter\",\n                           month == 12 ~ \"Winter\"))\n\n# A tibble: 1,056 × 7\n   category_1   category_2 counts date       week_no month season\n   &lt;chr&gt;        &lt;chr&gt;       &lt;dbl&gt; &lt;date&gt;       &lt;int&gt; &lt;dbl&gt; &lt;chr&gt; \n 1 Total deaths all ages    12968 2010-01-08       1     1 Winter\n 2 Total deaths all ages    12541 2010-01-15       2     1 Winter\n 3 Total deaths all ages    11762 2010-01-22       3     1 Winter\n 4 Total deaths all ages    11056 2010-01-29       4     1 Winter\n 5 Total deaths all ages    10524 2010-02-05       5     2 Winter\n 6 Total deaths all ages    10117 2010-02-12       6     2 Winter\n 7 Total deaths all ages    10102 2010-02-19       7     2 Winter\n 8 Total deaths all ages    10295 2010-02-26       8     2 Winter\n 9 Total deaths all ages     9981 2010-03-05       9     3 &lt;NA&gt;  \n10 Total deaths all ages     9792 2010-03-12      10     3 &lt;NA&gt;  \n# ℹ 1,046 more rows\n\n\nAnd finally a default to catch all the non-Winter values:\n\nseasonal_ons_mortality &lt;- ons_mortality |&gt;\n  filter(category_1 == \"Total deaths\") |&gt;\n  mutate(month = lubridate::month(date)) |&gt;\n  mutate(season = case_when(month &lt; 3 ~ \"Winter\",\n                           month == 12 ~ \"Winter\",\n                           TRUE ~ \"Not winter\"))\nseasonal_ons_mortality\n\n# A tibble: 1,056 × 7\n   category_1   category_2 counts date       week_no month season    \n   &lt;chr&gt;        &lt;chr&gt;       &lt;dbl&gt; &lt;date&gt;       &lt;int&gt; &lt;dbl&gt; &lt;chr&gt;     \n 1 Total deaths all ages    12968 2010-01-08       1     1 Winter    \n 2 Total deaths all ages    12541 2010-01-15       2     1 Winter    \n 3 Total deaths all ages    11762 2010-01-22       3     1 Winter    \n 4 Total deaths all ages    11056 2010-01-29       4     1 Winter    \n 5 Total deaths all ages    10524 2010-02-05       5     2 Winter    \n 6 Total deaths all ages    10117 2010-02-12       6     2 Winter    \n 7 Total deaths all ages    10102 2010-02-19       7     2 Winter    \n 8 Total deaths all ages    10295 2010-02-26       8     2 Winter    \n 9 Total deaths all ages     9981 2010-03-05       9     3 Not winter\n10 Total deaths all ages     9792 2010-03-12      10     3 Not winter\n# ℹ 1,046 more rows\n\nseasonal_ons_mortality |&gt;\n  count(season)\n\n# A tibble: 2 × 2\n  season         n\n  &lt;chr&gt;      &lt;int&gt;\n1 Not winter   793\n2 Winter       263\n\n\ncase_match()\nRather than a logical test, case_match() matches against values rather than performing a logical test. This is excellent for the winter classification example:\n\nons_mortality |&gt;\n  filter(category_1 == \"Total deaths\") |&gt;\n  mutate(month = lubridate::month(date)) |&gt;\n  mutate(season = case_match(month, c(1, 2, 12) ~ \"Winter\",\n                             .default = \"Not winter\"))\n\n# A tibble: 1,056 × 7\n   category_1   category_2 counts date       week_no month season    \n   &lt;chr&gt;        &lt;chr&gt;       &lt;dbl&gt; &lt;date&gt;       &lt;int&gt; &lt;dbl&gt; &lt;chr&gt;     \n 1 Total deaths all ages    12968 2010-01-08       1     1 Winter    \n 2 Total deaths all ages    12541 2010-01-15       2     1 Winter    \n 3 Total deaths all ages    11762 2010-01-22       3     1 Winter    \n 4 Total deaths all ages    11056 2010-01-29       4     1 Winter    \n 5 Total deaths all ages    10524 2010-02-05       5     2 Winter    \n 6 Total deaths all ages    10117 2010-02-12       6     2 Winter    \n 7 Total deaths all ages    10102 2010-02-19       7     2 Winter    \n 8 Total deaths all ages    10295 2010-02-26       8     2 Winter    \n 9 Total deaths all ages     9981 2010-03-05       9     3 Not winter\n10 Total deaths all ages     9792 2010-03-12      10     3 Not winter\n# ℹ 1,046 more rows\n\n\nconsecutive_id()\n\nconsecutive_id(c(1, 1, 1, 2, 1, 1, 2, 2)) # puts groups together by changes. This would have been very useful for my transcripts\n\n[1] 1 1 1 2 3 3 4 4\n\nrepeats &lt;- tibble(speaker = c(\"steve\", \"steve\", \"emma\", \"steve\", \"emma\", \"emma\"),\n       comment = letters[1:6]) # repeated data\n\nrepeats |&gt;\n  mutate(group = consecutive_id(speaker)) # add a group that increments with each change of speaker\n\n# A tibble: 6 × 3\n  speaker comment group\n  &lt;chr&gt;   &lt;chr&gt;   &lt;int&gt;\n1 steve   a           1\n2 steve   b           1\n3 emma    c           2\n4 steve   d           3\n5 emma    e           4\n6 emma    f           4\n\nrepeats |&gt;\n  mutate(group = consecutive_id(speaker)) |&gt;\n  group_by(group) |&gt;\n  mutate(comment = paste(comment, collapse = \" \")) |&gt;\n  distinct()\n\n# A tibble: 4 × 3\n# Groups:   group [4]\n  speaker comment group\n  &lt;chr&gt;   &lt;chr&gt;   &lt;int&gt;\n1 steve   a b         1\n2 emma    c           2\n3 steve   d           3\n4 emma    e f         4"
  },
  {
    "objectID": "r_training/dplyr_group_summarise.html",
    "href": "r_training/dplyr_group_summarise.html",
    "title": "Summarising data with dplyr",
    "section": "",
    "text": "No feedback found for this session"
  },
  {
    "objectID": "r_training/dplyr_group_summarise.html#session-outline",
    "href": "r_training/dplyr_group_summarise.html#session-outline",
    "title": "Summarising data with dplyr",
    "section": "Session outline",
    "text": "Session outline\nThis session is an 🌶🌶 intermediate practical designed for those with some R experience. The aim of this session is to do three things with dplyr:\n\nshow how to approach summarising data\nexplain how grouping works\nshow some simple summary functions\n\nYou might also like some of the other dplyr-themed practical sessions:\n\nExploring data with dplyr\nJoining data with dplyr\nTidyselect"
  },
  {
    "objectID": "r_training/dplyr_group_summarise.html#summarise",
    "href": "r_training/dplyr_group_summarise.html#summarise",
    "title": "Summarising data with dplyr",
    "section": "summarise()",
    "text": "summarise()\nLet’s do a little bit of package loading, and then start summarising things:\n\nlibrary(NHSRdatasets)\nlibrary(dplyr)\n\nThe description on the dplyr reference page for summarise is admirably clear:\n\nsummarise() creates a new data frame. It returns one row for each combination of grouping variables; if there are no grouping variables, the output will have a single row summarising all observations in the input. It will contain one column for each grouping variable and one column for each of the summary statistics that you have specified.\n\n\nae_attendances |&gt; \n  summarise(sum(attendances)) \n\n# A tibble: 1 × 1\n  `sum(attendances)`\n               &lt;dbl&gt;\n1           72019402\n\n\nsummarise() is especially strong in concert with group_by():\n\nae_attendances |&gt; \n  group_by(org_code) |&gt;\n  summarise(sum(attendances)) \n\n# A tibble: 274 × 2\n   org_code `sum(attendances)`\n   &lt;fct&gt;                 &lt;dbl&gt;\n 1 8J094                 74303\n 2 AAH                    6808\n 3 AC008                 25808\n 4 AD913                159739\n 5 AF002                  7542\n 6 AF003                  6046\n 7 AJN                   27425\n 8 ATQ02                127445\n 9 AXG                   36486\n10 AXT02                 88073\n# ℹ 264 more rows\n\n\nTwo important things to note here:\n\n\ngroup_by doesn’t change how the data looks - just how it behaves:\nEach call to summarise() removes a layer of grouping\n\n\nae_attendances |&gt; \n  group_by(org_code) |&gt;\n  summarise(sum(attendances)) |&gt;\n  summarise(sum(`sum(attendances)`)) # horrible default column names, which we'll fix in future\n\n# A tibble: 1 × 1\n  `sum(\\`sum(attendances)\\`)`\n                        &lt;dbl&gt;\n1                    72019402\n\n\nAnd you can build simple formulae inside summarise():\n\nae_attendances |&gt; \n  group_by(org_code) |&gt;\n  summarise(total = sum(attendances)) |&gt; # rename columns like select \n  arrange(desc(total)) \n\n# A tibble: 274 × 2\n   org_code   total\n   &lt;fct&gt;      &lt;dbl&gt;\n 1 R1H      1471581\n 2 RW6      1067518\n 3 R1K      1033563\n 4 RQM       913440\n 5 RF4       873909\n 6 RJ2       873689\n 7 RYJ       868344\n 8 RJZ       856644\n 9 RAL       806571\n10 RJE       746107\n# ℹ 264 more rows\n\nae_attendances |&gt; \n  group_by(org_code) |&gt;\n  summarise(non_admissions = sum(attendances - admissions)) |&gt;\n  arrange(desc(non_admissions)) \n\n# A tibble: 274 × 2\n   org_code non_admissions\n   &lt;fct&gt;             &lt;dbl&gt;\n 1 R1H             1211923\n 2 RW6              856664\n 3 R1K              837535\n 4 RQM              778879\n 5 RYJ              750941\n 6 RJ2              712189\n 7 RF4              705767\n 8 RJZ              696891\n 9 RYX              661468\n10 RAL              660741\n# ℹ 264 more rows\n\n\nYou can, in another recent change, group inside the summarise itself via .by():\n\nae_attendances |&gt; \n  summarise(non_admissions = sum(attendances - admissions), \n            .by = org_code) |&gt;\n  arrange(desc(non_admissions)) \n\n# A tibble: 274 × 2\n   org_code non_admissions\n   &lt;fct&gt;             &lt;dbl&gt;\n 1 R1H             1211923\n 2 RW6              856664\n 3 R1K              837535\n 4 RQM              778879\n 5 RYJ              750941\n 6 RJ2              712189\n 7 RF4              705767\n 8 RJZ              696891\n 9 RYX              661468\n10 RAL              660741\n# ℹ 264 more rows\n\n\nThis returns an ungrouped tibble - so important to know that it’s not a direct substitute for an ordinary group_by(). That’s especially confusing with summarise() owing to the “remove a single grouping layer each time” approach:\n\nae_attendances |&gt; \n  summarise(att = sum(attendances), .by = c(org_code, type)) \n\n# A tibble: 428 × 3\n   org_code type     att\n   &lt;fct&gt;    &lt;fct&gt;  &lt;dbl&gt;\n 1 RF4      1     697635\n 2 RF4      2      25667\n 3 RF4      other 150607\n 4 R1H      1     998934\n 5 R1H      2      27286\n 6 R1H      other 445361\n 7 AD913    other 159739\n 8 RYX      other 661468\n 9 RQM      1     623161\n10 RQM      other 290279\n# ℹ 418 more rows\n\nae_attendances |&gt; \n  group_by(org_code, type) |&gt;\n  summarise(att = sum(attendances))\n\n# A tibble: 428 × 3\n# Groups:   org_code [274]\n   org_code type     att\n   &lt;fct&gt;    &lt;fct&gt;  &lt;dbl&gt;\n 1 8J094    other  74303\n 2 AAH      other   6808\n 3 AC008    other  25808\n 4 AD913    other 159739\n 5 AF002    other   7542\n 6 AF003    other   6046\n 7 AJN      other  27425\n 8 ATQ02    other 127445\n 9 AXG      other  36486\n10 AXT02    other  88073\n# ℹ 418 more rows"
  },
  {
    "objectID": "r_training/dplyr_group_summarise.html#reframe",
    "href": "r_training/dplyr_group_summarise.html#reframe",
    "title": "Summarising data with dplyr",
    "section": "reframe()",
    "text": "reframe()\nA recent change in dplyr 1.1.0 is that summarise() now will only return one row per group. A new function, reframe(), has been developed to produce multiple-row summaries. It works exactly like summarise() except, rather than removing one grouping layer per operation, it always returns an ungrouped tibble. The syntax is the same as summarise():\n\nsum &lt;- ae_attendances |&gt;\n  group_by(year = lubridate::floor_date(period, unit = \"year\")) |&gt;\n  summarise(\n    year = lubridate::year(year),\n    non_admissions = sum(attendances - admissions)\n  )\n\nref &lt;- ae_attendances |&gt;\n  group_by(year = lubridate::floor_date(period, unit = \"year\")) |&gt;\n  reframe(\n    year = lubridate::year(year),\n    non_admissions = sum(attendances - admissions)\n  )\n\nwaldo::compare(sum, ref)\n\n`class(old)`: \"grouped_df\" \"tbl_df\" \"tbl\" \"data.frame\"\n`class(new)`:              \"tbl_df\" \"tbl\" \"data.frame\"\n\n`attr(old, 'groups')` is an S3 object of class &lt;tbl_df/tbl/data.frame&gt;, a list\n`attr(new, 'groups')` is absent"
  },
  {
    "objectID": "r_training/dplyr_group_summarise.html#count-and-tally",
    "href": "r_training/dplyr_group_summarise.html#count-and-tally",
    "title": "Summarising data with dplyr",
    "section": "\ncount() and tally()\n",
    "text": "count() and tally()\n\ncount() counts unique values, and is equivalent to using group_by() and then summarise():\n\nsynthetic_news_data |&gt;\n  count(died) \n\n# A tibble: 2 × 2\n   died     n\n  &lt;int&gt; &lt;int&gt;\n1     0   930\n2     1    70\n\n\nThat’s roughly equivalent to:\n\nsynthetic_news_data |&gt; \n  group_by(died) |&gt; \n  summarise(n = n())  \n\n# A tibble: 2 × 2\n   died     n\n  &lt;int&gt; &lt;int&gt;\n1     0   930\n2     1    70\n\n\ntally() works similarly, except without the group_by():\n\nsynthetic_news_data |&gt; \n  # group_by(died) |&gt; \n  summarise(n = n())  \n\n# A tibble: 1 × 1\n      n\n  &lt;int&gt;\n1  1000\n\nsynthetic_news_data |&gt;\n  tally() \n\n# A tibble: 1 × 1\n      n\n  &lt;int&gt;\n1  1000\n\n\nA possible source of confusion is that adding a column name to tally() performs a weighted count of that column:\n\nsynthetic_news_data |&gt;\n  tally(age)\n\n# A tibble: 1 × 1\n      n\n  &lt;int&gt;\n1 69647\n\n\nRoughly equivalent to:\n\nsynthetic_news_data |&gt;\n  pull(age) |&gt;\n  sum()\n\n[1] 69647\n\n\ncount() has a useful sort option to arrange by group size:\n\nsynthetic_news_data |&gt;\n  count(syst, sort=T) \n\n# A tibble: 125 × 2\n    syst     n\n   &lt;int&gt; &lt;int&gt;\n 1   130    28\n 2   120    26\n 3   139    26\n 4   150    25\n 5   135    24\n 6   126    22\n 7   134    22\n 8   119    21\n 9   123    21\n10   112    20\n# ℹ 115 more rows\n\n\nBoth count() and tally() have add_ variants, which work like mutate() in that they add a new column containing the count:\n\n#add_ variants\nsynthetic_news_data |&gt;\n  add_count(syst, name=\"syst_BP_count\") |&gt;\n  select(syst, last_col())\n\n# A tibble: 1,000 × 2\n    syst syst_BP_count\n   &lt;int&gt;         &lt;int&gt;\n 1   150            25\n 2   145            16\n 3   169             4\n 4   154            12\n 5   122            11\n 6   146            16\n 7    65             2\n 8   116            12\n 9   162            10\n10   132             9\n# ℹ 990 more rows\n\n\nadd_tally() gives a col with the same value in each row of a group:\n\nsynthetic_news_data |&gt;\n  group_by(died) |&gt;\n  add_tally() |&gt;\n  slice(1:3) \n\n# A tibble: 6 × 13\n# Groups:   died [2]\n   male   age  NEWS  syst  dias  temp pulse  resp   sat   sup alert  died     n\n  &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;dbl&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt;\n1     0    68     3   150    98  36.8    78    26    96     0     0     0   930\n2     1    94     1   145    67  35      62    18    96     0     0     0   930\n3     0    85     0   169    69  36.2    54    18    96     0     0     0   930\n4     0    80     5   130    81  37     129    18    97     0     0     1    70\n5     0    62     6   108    65  34.4    43    18    99     0     0     1    70\n6     1    64     0   114    82  36.2    78    18    97     0     0     1    70"
  },
  {
    "objectID": "r_training/dplyr_group_summarise.html#rowwise",
    "href": "r_training/dplyr_group_summarise.html#rowwise",
    "title": "Summarising data with dplyr",
    "section": "rowwise()",
    "text": "rowwise()\nrowwise() forms groups per row. For example, we could take the average of the three columns in ae_attendances:\n\n# to find the daily mean of attendances, breaches, and admissions\nae_attendances |&gt; \n  rowwise() |&gt;\n  mutate(mean = mean(c(attendances, breaches, admissions))) \n\n# A tibble: 12,765 × 7\n# Rowwise: \n   period     org_code type  attendances breaches admissions   mean\n   &lt;date&gt;     &lt;fct&gt;    &lt;fct&gt;       &lt;dbl&gt;    &lt;dbl&gt;      &lt;dbl&gt;  &lt;dbl&gt;\n 1 2017-03-01 RF4      1           21289     2879       5060  9743.\n 2 2017-03-01 RF4      2             813       22          0   278.\n 3 2017-03-01 RF4      other        2850        6          0   952 \n 4 2017-03-01 R1H      1           30210     5902       6943 14352.\n 5 2017-03-01 R1H      2             807       11          0   273.\n 6 2017-03-01 R1H      other       11352      136          0  3829.\n 7 2017-03-01 AD913    other        4381        2          0  1461 \n 8 2017-03-01 RYX      other       19562      258          0  6607.\n 9 2017-03-01 RQM      1           17414     2030       3597  7680.\n10 2017-03-01 RQM      other        7817       86          0  2634.\n# ℹ 12,755 more rows\n\n\nCompare and contrast with the results we obtain if we omit rowwise(), where the mean column contains the averages of the three columns overall, rather than for each date and organisation:\n\nae_attendances |&gt; \n  mutate(mean=mean(c(attendances, breaches, admissions))) \n\n# A tibble: 12,765 × 7\n   period     org_code type  attendances breaches admissions  mean\n   &lt;date&gt;     &lt;fct&gt;    &lt;fct&gt;       &lt;dbl&gt;    &lt;dbl&gt;      &lt;dbl&gt; &lt;dbl&gt;\n 1 2017-03-01 RF4      1           21289     2879       5060 2450.\n 2 2017-03-01 RF4      2             813       22          0 2450.\n 3 2017-03-01 RF4      other        2850        6          0 2450.\n 4 2017-03-01 R1H      1           30210     5902       6943 2450.\n 5 2017-03-01 R1H      2             807       11          0 2450.\n 6 2017-03-01 R1H      other       11352      136          0 2450.\n 7 2017-03-01 AD913    other        4381        2          0 2450.\n 8 2017-03-01 RYX      other       19562      258          0 2450.\n 9 2017-03-01 RQM      1           17414     2030       3597 2450.\n10 2017-03-01 RQM      other        7817       86          0 2450.\n# ℹ 12,755 more rows\n\n\nThere’s also a c_across() function to select columns that looks really promising for rowwise() work, but bafflingly it is extremely slow here, taking 50x longer than the equivalent mutate(). This is a known issue - “particularly for long, narrow, data”. So this code is switched off and provided here for information only - although do feel free to try it out if you don’t mind a ten second wait.\n\nae_attendances |&gt; \n  rowwise() |&gt;\n  mutate(mean = mean(c_across(4:6)))"
  },
  {
    "objectID": "r_training/dplyr_group_summarise.html#summary-functions",
    "href": "r_training/dplyr_group_summarise.html#summary-functions",
    "title": "Summarising data with dplyr",
    "section": "Summary functions",
    "text": "Summary functions\n\nnth() / first() / last()\n\nGet the nth, first, or last values. Very useful inside a summarise or similar when you want to be sure that you’re going to return a sensible result.\n\ntibble(speaker = c(\"steve\", \"steve\", \"emma\", \"steve\", \"emma\", \"emma\"),\n       comment = letters[1:6])  |&gt;\n  mutate(group = consecutive_id(speaker)) |&gt;\n  group_by(group, speaker) |&gt;\n  summarise(comment = last(comment)) |&gt;\n  ungroup() |&gt;\n  select(-group)\n\n# A tibble: 4 × 2\n  speaker comment\n  &lt;chr&gt;   &lt;chr&gt;  \n1 steve   b      \n2 emma    c      \n3 steve   d      \n4 emma    f"
  },
  {
    "objectID": "r_training/dates_and_times_with_lubridate.html",
    "href": "r_training/dates_and_times_with_lubridate.html",
    "title": "Dates and times with lubridate",
    "section": "",
    "text": "No feedback found for this session"
  },
  {
    "objectID": "r_training/dates_and_times_with_lubridate.html#word-of-warning",
    "href": "r_training/dates_and_times_with_lubridate.html#word-of-warning",
    "title": "Dates and times with lubridate",
    "section": "Word of warning",
    "text": "Word of warning\n\ndates and times are hard everywhere\nR is no exception\nthis session is a beginner’s guide to lubridate\n\nnot the only way of dealing with dates\nnot always the best\non balance the most consistent, and least quirky tools for dates"
  },
  {
    "objectID": "r_training/dates_and_times_with_lubridate.html#this-session",
    "href": "r_training/dates_and_times_with_lubridate.html#this-session",
    "title": "Dates and times with lubridate",
    "section": "This session",
    "text": "This session\n\nbeginner-friendly\nfocus on core parsing, get/set, and rounding functions\nlots on dates, a bit of date-times, no times\n\nResources\nlibrary(lubridate)\n\nLubridate cheatsheet\nR4DS 2e chapter on dates and times\nquick primer on ISO8601"
  },
  {
    "objectID": "r_training/dates_and_times_with_lubridate.html#r-dates",
    "href": "r_training/dates_and_times_with_lubridate.html#r-dates",
    "title": "Dates and times with lubridate",
    "section": "R dates",
    "text": "R dates\n\n\ndays since 1970-01-01\n\nas_date(0)\n[1] “1970-01-01”"
  },
  {
    "objectID": "r_training/dates_and_times_with_lubridate.html#r-dates-1",
    "href": "r_training/dates_and_times_with_lubridate.html#r-dates-1",
    "title": "Dates and times with lubridate",
    "section": "R dates",
    "text": "R dates\nas_date(19860)\n[1] “2024-05-17”\nas_date(1:5)\n[1] “1970-01-02” “1970-01-03” “1970-01-04” “1970-01-05” “1970-01-06”\nclass(as_date(0))\n[1] “Date”"
  },
  {
    "objectID": "r_training/dates_and_times_with_lubridate.html#famously",
    "href": "r_training/dates_and_times_with_lubridate.html#famously",
    "title": "Dates and times with lubridate",
    "section": "Famously…",
    "text": "Famously…\nas_datetime(2 ^ 31-1) # 32 bit signed int\n[1] “2038-01-19 03:14:07 UTC”"
  },
  {
    "objectID": "r_training/dates_and_times_with_lubridate.html#parsing-dates-is-important",
    "href": "r_training/dates_and_times_with_lubridate.html#parsing-dates-is-important",
    "title": "Dates and times with lubridate",
    "section": "Parsing dates is important",
    "text": "Parsing dates is important\n\nmost functions that accept dates (like ggplot) will mis-behave if you feed them date-shaped-words\n\ne.g. alphabetically-ordered dates\n\n\nwe also want to be able to calculate with dates"
  },
  {
    "objectID": "r_training/dates_and_times_with_lubridate.html#couple-of-fun-intro-functions",
    "href": "r_training/dates_and_times_with_lubridate.html#couple-of-fun-intro-functions",
    "title": "Dates and times with lubridate",
    "section": "Couple of fun intro functions",
    "text": "Couple of fun intro functions\ntoday()\n[1] “2025-06-04”\ndate_decimal(2024.37534)\n[1] “2024-05-17 08:59:11 UTC”\nnow()\n[1] “2025-06-04 15:26:41 UTC”\nnow(\"Japan\")\n[1] “2025-06-05 00:26:41 JST”\nrandom_zone &lt;- sample(OlsonNames(), 1)\ncat(paste(\"The date-time in\", random_zone, \"is\", now(sample(OlsonNames(), 1))))\nThe date-time in Indian/Cocos is 2025-06-04 17:26:41.856589"
  },
  {
    "objectID": "r_training/dates_and_times_with_lubridate.html#parsing",
    "href": "r_training/dates_and_times_with_lubridate.html#parsing",
    "title": "Dates and times with lubridate",
    "section": "Parsing",
    "text": "Parsing\n\n\nas_date() is fine assuming you have your date as a number of days\nbut usually, we’ll need to parse our dates\n\nas_date(45429) # excel-format 1900 date\n[1] “2094-05-19”\nas_date(45429 - 25569) # dirty but effective\n[1] “2024-05-17”\nas_date(45429, origin = \"1899-12-30\") # better\n[1] “2024-05-17”"
  },
  {
    "objectID": "r_training/dates_and_times_with_lubridate.html#parsing-1",
    "href": "r_training/dates_and_times_with_lubridate.html#parsing-1",
    "title": "Dates and times with lubridate",
    "section": "Parsing",
    "text": "Parsing\n\nmore often, we’ll be taking human-readable dates and parsing them\nthat’s a pain, because there are loads of inconsistent ways of representing dates\nworse, lots of dates are ambiguous (5/6/24 and 6/5/24 might refer to the same day)\n\ndate_input &lt;- c(\"17/5/24\", \"2024-05-17\", \"Friday 17th May 2024\", \"17*May*24\", \"5/17/2024\" )\n\nas_date(date_input) # as_date expects ISO-8601ish dates\n[1] “2017-05-24” “2024-05-17” NA “2017-05-24” NA\n# one correct, two silently incorrent, two NAs"
  },
  {
    "objectID": "r_training/dates_and_times_with_lubridate.html#parse_date_time",
    "href": "r_training/dates_and_times_with_lubridate.html#parse_date_time",
    "title": "Dates and times with lubridate",
    "section": "parse_date_time",
    "text": "parse_date_time\nparse_date_time(date_input, orders = \"ymd\")\n[1] “2017-05-24 UTC” “2024-05-17 UTC” NA “2017-05-24 UTC” [5] NA\nparse_date_time(date_input, orders = c(\"dmy\", \"ymd\", \"dmy\", \"dmy\", \"mdy\"))\n[1] “2024-05-17 UTC” “2024-05-17 UTC” “2024-05-17 UTC” “2024-05-17 UTC” [5] “2024-05-17 UTC”"
  },
  {
    "objectID": "r_training/dates_and_times_with_lubridate.html#dmy-and-co",
    "href": "r_training/dates_and_times_with_lubridate.html#dmy-and-co",
    "title": "Dates and times with lubridate",
    "section": "dmy and co",
    "text": "dmy and co\n\nyou can also use the orders (like dmy) as standalone parsing functions:\n\ndmy(date_input[c(1,3,4)])\n[1] “2024-05-17” “2024-05-17” “2024-05-17”\nymd_hms(\"2024-05/17 9-05-01\")\n[1] “2024-05-17 09:05:01 UTC”"
  },
  {
    "objectID": "r_training/dates_and_times_with_lubridate.html#so-you-can-make-datesdate-times.-so-what",
    "href": "r_training/dates_and_times_with_lubridate.html#so-you-can-make-datesdate-times.-so-what",
    "title": "Dates and times with lubridate",
    "section": "So you can make dates/date-times. So what?",
    "text": "So you can make dates/date-times. So what?\ndate(now())\n[1] “2025-06-04”\nyear(today())\n[1] 2025\nleap_year(today())\n[1] FALSE\nquarter(today())\n[1] 2\nsemester(today())\n[1] 1\nsemester(today(), with_year = T)\n[1] 2025.1"
  },
  {
    "objectID": "r_training/dates_and_times_with_lubridate.html#months-and-weeks",
    "href": "r_training/dates_and_times_with_lubridate.html#months-and-weeks",
    "title": "Dates and times with lubridate",
    "section": "Months and weeks",
    "text": "Months and weeks\nmonth(today())\n[1] 6\nmonth(today(), label = T)\n[1] Jun 12 Levels: Jan &lt; Feb &lt; Mar &lt; Apr &lt; May &lt; Jun &lt; Jul &lt; Aug &lt; Sep &lt; … &lt; Dec\nweek(today())\n[1] 23\nepiweek(today()) # special ways of counting weeks. See  https://en.wikipedia.org/wiki/ISO_week_date and https://www.cmmcp.org/mosquito-surveillance-data/pages/epi-week-calendars-2008-2024\n[1] 23"
  },
  {
    "objectID": "r_training/dates_and_times_with_lubridate.html#days",
    "href": "r_training/dates_and_times_with_lubridate.html#days",
    "title": "Dates and times with lubridate",
    "section": "Days",
    "text": "Days\nday(today())\n[1] 4\nwday(today())\n[1] 4\nqday(today())\n[1] 65"
  },
  {
    "objectID": "r_training/dates_and_times_with_lubridate.html#hour-and-minute",
    "href": "r_training/dates_and_times_with_lubridate.html#hour-and-minute",
    "title": "Dates and times with lubridate",
    "section": "Hour and minute",
    "text": "Hour and minute\nhour(now())\n[1] 15\nminute(now())\n[1] 26\nam(now())\n[1] FALSE\ndst(now()) \n[1] FALSE"
  },
  {
    "objectID": "r_training/dates_and_times_with_lubridate.html#set",
    "href": "r_training/dates_and_times_with_lubridate.html#set",
    "title": "Dates and times with lubridate",
    "section": "Set",
    "text": "Set\nupdate(now(), hour = 11, minute = 0, second = 0) # nominal finish time today\n[1] “2025-06-04 11:00:00 UTC”\n\nor, more generally:\n\ntest_date &lt;- dmy(\"05/06/23\")\nday(test_date)\n[1] 5\nday(test_date) &lt;- 11\ntest_date\n[1] “2023-06-11”"
  },
  {
    "objectID": "r_main.html",
    "href": "r_main.html",
    "title": "R training",
    "section": "",
    "text": "Session\nDate\nArea\nLevel\n\n\n\nAn introduction to R and Rmarkdown (session 2)\n13:00-15:00 Thu 5th June 2025\nR\n🌶\n\n:beginner-level\n\n\nSummarising data with dplyr\n10:00-11:30 Wed 11th June 2025\nR\n🌶🌶\n\n: intermediate-level\n\n\nAn introduction to R and Rmarkdown (session 3)\n13:00-15:00 Thu 12th June 2025\nR\n🌶\n\n:beginner-level\n\n\nJoining data with dplyr\n10:00-11:30 Wed 18th June 2025\nR\n🌶🌶\n\n: intermediate-level\n\n\nAn introduction to R and Rmarkdown (session 4)\n13:00-15:00 Thu 19th June 2025\nR\n🌶\n\n:beginner-level\n\n\nDebugging R\n14:30-15:30 Mon 30th June 2025\nR\n🌶\n\n:beginner-level\n\n\nReproducible examples (reprex) in R\n13:00-14:00 Tue 1st July 2025\nR\n🌶\n\n:beginner-level\n\n\nTidyselect\n10:00-11:30 Wed 2nd July 2025\nR\n🌶🌶\n\n: intermediate-level\n\n\nPractical Shiny debugging\n11:00-12:00 Thu 3rd July 2025\nR\n🌶🌶\n\n: intermediate-level\n\n\nWriting functions in R\n10:00-11:30 Wed 9th July 2025\nR\n🌶🌶\n\n: intermediate-level\n\n\nIteration in R\n09:30-11:00 Wed 23rd July 2025\nR\n🌶🌶\n\n: intermediate-level\n\n\nThe purrrr package in R\n10:00-11:30 Wed 30th July 2025\nR\n🌶🌶\n\n: intermediate-level\n\n\nData masking in R\n10:00-11:30 Wed 6th August 2025\nR\n🌶🌶\n\n: intermediate-level\n\n\nAn introduction to data.table\n10:00-11:30 Wed 13th August 2025\nR\n🌶🌶\n\n: intermediate-level"
  },
  {
    "objectID": "r_main.html#r-training-schedule",
    "href": "r_main.html#r-training-schedule",
    "title": "R training",
    "section": "",
    "text": "Session\nDate\nArea\nLevel\n\n\n\nAn introduction to R and Rmarkdown (session 2)\n13:00-15:00 Thu 5th June 2025\nR\n🌶\n\n:beginner-level\n\n\nSummarising data with dplyr\n10:00-11:30 Wed 11th June 2025\nR\n🌶🌶\n\n: intermediate-level\n\n\nAn introduction to R and Rmarkdown (session 3)\n13:00-15:00 Thu 12th June 2025\nR\n🌶\n\n:beginner-level\n\n\nJoining data with dplyr\n10:00-11:30 Wed 18th June 2025\nR\n🌶🌶\n\n: intermediate-level\n\n\nAn introduction to R and Rmarkdown (session 4)\n13:00-15:00 Thu 19th June 2025\nR\n🌶\n\n:beginner-level\n\n\nDebugging R\n14:30-15:30 Mon 30th June 2025\nR\n🌶\n\n:beginner-level\n\n\nReproducible examples (reprex) in R\n13:00-14:00 Tue 1st July 2025\nR\n🌶\n\n:beginner-level\n\n\nTidyselect\n10:00-11:30 Wed 2nd July 2025\nR\n🌶🌶\n\n: intermediate-level\n\n\nPractical Shiny debugging\n11:00-12:00 Thu 3rd July 2025\nR\n🌶🌶\n\n: intermediate-level\n\n\nWriting functions in R\n10:00-11:30 Wed 9th July 2025\nR\n🌶🌶\n\n: intermediate-level\n\n\nIteration in R\n09:30-11:00 Wed 23rd July 2025\nR\n🌶🌶\n\n: intermediate-level\n\n\nThe purrrr package in R\n10:00-11:30 Wed 30th July 2025\nR\n🌶🌶\n\n: intermediate-level\n\n\nData masking in R\n10:00-11:30 Wed 6th August 2025\nR\n🌶🌶\n\n: intermediate-level\n\n\nAn introduction to data.table\n10:00-11:30 Wed 13th August 2025\nR\n🌶🌶\n\n: intermediate-level"
  },
  {
    "objectID": "r_main.html#r-session-materials",
    "href": "r_main.html#r-session-materials",
    "title": "R training",
    "section": "R session materials",
    "text": "R session materials\nNot all training session have training materials currently available. This is a work in progress - please get in touch if there’s something you’d particularly like to see."
  },
  {
    "objectID": "excel_main.html",
    "href": "excel_main.html",
    "title": "Excel training",
    "section": "",
    "text": "We run two multi-session Excel courses. For Excel beginners, we run an introduction to Excel for people working in health and social care. That consists of six linked sessions which are delivered live on Teams:\nFor more experienced users with some prior Excel experience, we run a skill builder course to help them develop and consoliate their skills:"
  },
  {
    "objectID": "excel_main.html#excel-training-schedule",
    "href": "excel_main.html#excel-training-schedule",
    "title": "Excel training",
    "section": "Excel training schedule",
    "text": "Excel training schedule\n\n\n\n\n\n\n\n\nSession\nDate\nArea\nLevel\n\n\n\nTidy data in Excel\n15:00-16:00 Thu 5th June 2025\nExcel\n🌶\n\n:beginner-level\n\n\nReferences and names in Excel\n15:00-16:00 Tue 10th June 2025\nExcel\n🌶\n\n:beginner-level\n\n\nExcel formatting\n15:00-16:00 Thu 12th June 2025\nExcel\n🌶\n\n:beginner-level\n\n\nExcel tables\n15:00-16:00 Tue 17th June 2025\nExcel\n🌶\n\n:beginner-level\n\n\nExcel formulas\n15:00-16:00 Thu 19th June 2025\nExcel\n🌶\n\n:beginner-level\n\n\nExcel errors\n13:00-14:00 Mon 30th June 2025\nExcel\n🌶\n\n:beginner-level"
  },
  {
    "objectID": "excel_main.html#excel-session-materials",
    "href": "excel_main.html#excel-session-materials",
    "title": "Excel training",
    "section": "Excel session materials",
    "text": "Excel session materials"
  },
  {
    "objectID": "excel/tidy_data_in_excel.html",
    "href": "excel/tidy_data_in_excel.html",
    "title": "Tidy data in Excel",
    "section": "",
    "text": "This session is part of our Excel for beginners course. That’s a series of six linked sessions, delivered on Teams, that give an introduction to Excel for people working in health and social care. The sessions are:\nTogether, they aim to help you develop an appropriate set of Excel skills to help your work. This session covers:"
  },
  {
    "objectID": "excel/tidy_data_in_excel.html#previous-attendees-have-said",
    "href": "excel/tidy_data_in_excel.html#previous-attendees-have-said",
    "title": "Tidy data in Excel",
    "section": "Previous attendees have said…",
    "text": "Previous attendees have said…\n\n22 previous attendees have left feedback\n95% would recommend this session to a colleague\n100% said that this session was pitched correctly\n\n\n\n\n\n\n\n\n\n\n\nThree random comments from previous attendees\n\n\n\n\nExcellant and very easy to understand especially using the exercises so you can practice whilst in the session. Thank you again Brendan\nSo many useful tips and tricks - loving these sessions 🤩\nA great introduction into getting data setup in a clean and tidy way."
  },
  {
    "objectID": "excel/tidy_data_in_excel.html#session-outline",
    "href": "excel/tidy_data_in_excel.html#session-outline",
    "title": "Tidy data in Excel",
    "section": "Session outline",
    "text": "Session outline\n\n\n\n\n\na word of warning\nunderstanding tidy data\na practical introduction to making tidy data\ntext to columns\ntransposing"
  },
  {
    "objectID": "excel/tidy_data_in_excel.html#a-word-of-warning",
    "href": "excel/tidy_data_in_excel.html#a-word-of-warning",
    "title": "Tidy data in Excel",
    "section": "A word of warning",
    "text": "A word of warning\n\ntidying data can be very slow and complicated\nin Excel, there are lots of advanced tools that can speed things up\nthis is a beginner’s session, so we’ll avoid the more fancy tools\n\nbut if your process takes lots of manual work, it’s definitely worth exploring alternative ways of working"
  },
  {
    "objectID": "excel/tidy_data_in_excel.html#tidy-data",
    "href": "excel/tidy_data_in_excel.html#tidy-data",
    "title": "Tidy data in Excel",
    "section": "Tidy data",
    "text": "Tidy data\n\n\ndate\nservice_a\nservice_b\n\n\n\n2025-01-01\n99\n11\n\n\n2025-01-02\n77\n33\n\n\n2025-01-03\n55\n55\n\n\n\n\none value per cell\neach column contains all the values of one measurement\neach row shows all the values for one date"
  },
  {
    "objectID": "excel/tidy_data_in_excel.html#entering-values",
    "href": "excel/tidy_data_in_excel.html#entering-values",
    "title": "Tidy data in Excel",
    "section": "Entering values",
    "text": "Entering values\n\nimagine that we want to measure something across several years: 2018, 2019, 2020, 2021, 2022?\npractical:\n\nopen Excel\nstart a new workbook\nadd a column header year in cell A1\n\nthen add each of those five values in the five cells underneath (down to A6)"
  },
  {
    "objectID": "excel/tidy_data_in_excel.html#more-values",
    "href": "excel/tidy_data_in_excel.html#more-values",
    "title": "Tidy data in Excel",
    "section": "More values",
    "text": "More values\n\nwe’re going to be using some birthrate data from the NRS for this session. We’ll start by adding some birth rate data\nthis is given as births per 1,000 women in five year age brackets. We’ll start with 25-29 year old mothers\nplease add the header 25-29yrs in cell B1\nhere are the values for our five years: 73.4, 71, 66.8, 69.6, 66.7"
  },
  {
    "objectID": "excel/tidy_data_in_excel.html#another-column",
    "href": "excel/tidy_data_in_excel.html#another-column",
    "title": "Tidy data in Excel",
    "section": "Another column",
    "text": "Another column\n\n\n30-34yrs\n\n\n\n90.9\n\n\n88.6\n\n\n83.4\n\n\n85.9\n\n\n84.4\n\n\n\n\nplease could you add some new data to your table showing births for another age group"
  },
  {
    "objectID": "excel/tidy_data_in_excel.html#back-to-tidy-data",
    "href": "excel/tidy_data_in_excel.html#back-to-tidy-data",
    "title": "Tidy data in Excel",
    "section": "Back to tidy data",
    "text": "Back to tidy data\n\nwe’ve now got some data with:\n\neach value in a cell\neach variable in a column\n\nhere, this is a maternal age bracket\n\n\neach observation in a row\n\nhere, this is a year"
  },
  {
    "objectID": "excel/tidy_data_in_excel.html#fixing-several-values-per-cell",
    "href": "excel/tidy_data_in_excel.html#fixing-several-values-per-cell",
    "title": "Tidy data in Excel",
    "section": "Fixing several values per cell",
    "text": "Fixing several values per cell\n\nWe often find useful data with more than one value per cell\nthis can be helpful for humans  \n\nExcel can’t do anything with this data"
  },
  {
    "objectID": "excel/tidy_data_in_excel.html#exercise-many-values-per-cell",
    "href": "excel/tidy_data_in_excel.html#exercise-many-values-per-cell",
    "title": "Tidy data in Excel",
    "section": "Exercise: many values per cell",
    "text": "Exercise: many values per cell\n\n\n35-39\n\n\n\n54.2 (21%)\n\n\n52.7 (20%)\n\n\n49.4 (19%)\n\n\n52.8 (20%)\n\n\n52 (20%)\n\n\n\n\nplease add this column of data to your table\ndoes it look similar to your existing data?"
  },
  {
    "objectID": "excel/tidy_data_in_excel.html#whats-the-solution",
    "href": "excel/tidy_data_in_excel.html#whats-the-solution",
    "title": "Tidy data in Excel",
    "section": "What’s the solution?",
    "text": "What’s the solution?\n\nmake this data have one value per cell\n\nwe could remove all the percentages by hand\n\nText to Columns gives us a better tool for the job"
  },
  {
    "objectID": "excel/tidy_data_in_excel.html#text-to-columns",
    "href": "excel/tidy_data_in_excel.html#text-to-columns",
    "title": "Tidy data in Excel",
    "section": "Text to Columns",
    "text": "Text to Columns\n\nselect a column\nin the Data tab of the ribbon, you should find the Text to Columns tool  \n\nnote that you can keep, or remove, the percentage column. We’ll skip it, to keep things simple"
  },
  {
    "objectID": "excel/tidy_data_in_excel.html#exercise-transposed-data",
    "href": "excel/tidy_data_in_excel.html#exercise-transposed-data",
    "title": "Tidy data in Excel",
    "section": "Exercise: transposed data",
    "text": "Exercise: transposed data\n\n\nBracket\n2018\n2019\n2020\n2021\n2022\n\n\n\n25-29yrs\n73.4\n71.0\n66.8\n69.6\n66.7\n\n\n30-34yrs\n90.9\n88.6\n83.4\n85.9\n84.4\n\n\n35-39yrs\n54.2\n52.7\n49.4\n52.8\n52.0\n\n\n\n\nsometimes you’ll find data where the columns and rows have been flipped\nthat’s slow to fix by hand, but luckily you can transpose it, which swaps rows and columns\nselect your data, and copy/paste into a new cell\nthen use the transpose option"
  },
  {
    "objectID": "excel/relative_absolute_mixed_structured_and_r_1_c_1_references_in_excel.html",
    "href": "excel/relative_absolute_mixed_structured_and_r_1_c_1_references_in_excel.html",
    "title": "Relative, absolute, mixed, and structured references",
    "section": "",
    "text": "Session materials\n\n\n\n\n\n\nall materials \nslides  html /  pdf\n\nexercises .xlsx / completed exercises .xlsx"
  },
  {
    "objectID": "excel/relative_absolute_mixed_structured_and_r_1_c_1_references_in_excel.html#previous-attendees-have-said",
    "href": "excel/relative_absolute_mixed_structured_and_r_1_c_1_references_in_excel.html#previous-attendees-have-said",
    "title": "Relative, absolute, mixed, and structured references",
    "section": "Previous attendees have said…",
    "text": "Previous attendees have said…\n\n9 previous attendees have left feedback\n100% would recommend this session to a colleague\n100% said that this session was pitched correctly\n\n\n\n\n\n\n\n\n\n\n\nThree random comments from previous attendees\n\n\n\n\nInformative and made me think about how I reference within my speadsheets\nI missed the first 20 minutes as I was tied up in another meeting, but found what I did attend useful, thank you\neven as an Excel old hat I still always discover something new on these sessions"
  },
  {
    "objectID": "excel/relative_absolute_mixed_structured_and_r_1_c_1_references_in_excel.html#welcome",
    "href": "excel/relative_absolute_mixed_structured_and_r_1_c_1_references_in_excel.html#welcome",
    "title": "Relative, absolute, mixed, and structured references",
    "section": "Welcome",
    "text": "Welcome\n\nthis session is for 🌶🌶 intermediate Excel users\nyou’ need Excel of some sort to follow along\nyou’ll also need the exercise workbook\n\nif you can’t access the chat, you might need to join our Teams channel: tinyurl.com/kindnetwork\n\nyou can find session materials at tinyurl.com/kindtrp"
  },
  {
    "objectID": "excel/relative_absolute_mixed_structured_and_r_1_c_1_references_in_excel.html#session-outline",
    "href": "excel/relative_absolute_mixed_structured_and_r_1_c_1_references_in_excel.html#session-outline",
    "title": "Relative, absolute, mixed, and structured references",
    "section": "Session outline",
    "text": "Session outline\n\nthis is an intermediate-level review of referencing techniques in Excel\nit’s a technical session, so we’ll concentrate on the how of referencing\nA1 references\n\nrelative\nabsolute\nmixed\n\n\nstructured references\nR1C1"
  },
  {
    "objectID": "excel/relative_absolute_mixed_structured_and_r_1_c_1_references_in_excel.html#a1-references",
    "href": "excel/relative_absolute_mixed_structured_and_r_1_c_1_references_in_excel.html#a1-references",
    "title": "Relative, absolute, mixed, and structured references",
    "section": "A1 references",
    "text": "A1 references\n\nA1 references are the standard way that references are made in Excel\nA1 references are usually made up of a letter and a number (like A2, B56, …)\n\nthe letter stands for the column a cell is in\nthe number stands for the row\n\n\nwe can use those references in formulas\n\n\n=A1 will copy the values from A1 into the current cell\n\n\nyou can also use the range operator (:) to select several values - like A1:A3\n\n\n\n\n\n\n\n\nTask\n\n\n\n\nusing A1 references, can you populate the first three rows of the summary table in the A1 referencing sheet? \nStart date\nEnd date\nFirst duty manager\n\n\nyou might need to switch off Calculated Columns from the floatie \n\n\n\n\nAbsolute vs relative references\n\nby default, A1 references are relative\n\nif the formula moves, the reference will change\n\n\n\n\n\n\n\n\n\nTask\n\n\n\n\ntry copy/pasting your three summary values:\n\na few columns across\na few rows down\n\n\nwhat happens to your values?\n\n\n\n\n\nThe effect of moving our summary cells down the sheet\n\n\nas you’ve seen, relative references can cause problems\nyou can change relative references to absolute (=fixed) references using $\n\n\n$A$1 refers to A1 no matter what\n\nuse this if you absolutely always want to refer to the same cell\n\n\n\n\n\n\n\n\n\n\n\nTask\n\n\n\n\nupdate your relative references in the summary table to absolute references by adding $ before both the column letter, and the row number\n\n\n\n\n\n\n\n\n\nNote\n\n\n\n\nif you click in the formula bar, F4 toggles absolute/relative\n\n\n\nMixed references\n\n\n$A1 will be absolute in the column, but relative in the rows\n\nA$1 will be relative in the row, but absolute in the column\ntake care with these - they’re pretty confusing (and we’ll look at a much better way of doing the same thing below)"
  },
  {
    "objectID": "excel/relative_absolute_mixed_structured_and_r_1_c_1_references_in_excel.html#structured-referencing",
    "href": "excel/relative_absolute_mixed_structured_and_r_1_c_1_references_in_excel.html#structured-referencing",
    "title": "Relative, absolute, mixed, and structured references",
    "section": "Structured referencing",
    "text": "Structured referencing\n\nmost objects in Excel can be named - including cells, tables, and ranges\nstructured referencing is a special case\n\n\nTable[Column] syntax\nshared across Power BI, PowerQuery…\n\n\n\n\n\n\n\n\n\nTask\n\n\n\n\nplease switch to the Structured referencing sheet\nsum up each of the three service columns in the summary table\n\n\n\n=SUM(SR_table[service_a]) / =SUM(SR_table[service_b]) / =SUM(SR_table[service_c])\n\n\n\n\nImplicit intersection\n\nyou can convert a structured reference to a column to refer to a single value\nthat’s done using the implicit intersection operator [@col]\n\n(if you’re using an older version of Excel, you might also see this written as [@[Service_duration]])\n\n\nif you pick reference locations with the mouse, this is how Excel will render your references\n\n\n\n\n\n\n\nTask\n\n\n\n\nplease try populating the daily_total by summing with implicit intersection\n\n\n=SUM(SR_table[@[service_a]:[service_c]])"
  },
  {
    "objectID": "excel/relative_absolute_mixed_structured_and_r_1_c_1_references_in_excel.html#r1c1",
    "href": "excel/relative_absolute_mixed_structured_and_r_1_c_1_references_in_excel.html#r1c1",
    "title": "Relative, absolute, mixed, and structured references",
    "section": "R1C1",
    "text": "R1C1\n\nR1C1 gives an alternative way of referring to cells\nslightly more complicated, but more precise, and less confusing\nlargely encountered in VBA, but available and helpful in standard Excel\n\n\n\n\n\n\n\nTask\n\n\n\n\nSwitch to the R1C1 referencing sheet\nswitch to inspect formulas (Ctrl + backtick)\nHave a look at the formula in the First name column\nNow switch your workbook to R1C1 by File &gt; Options &gt; Formulas &gt; R1C1 reference style \n\n\n\n\n\ncolumn letters (A, B, C,…) are replaced by numbers\nrow numbers remain as row numbers\n\nR1C1 = A1\nR2C8 = H2\n\n\n\n\n\n\n\n\n\nTask\n\n\n\n\nHave another look at the formula in the First name column - it should be much easier to conclude that this is the same formula in every row\n\n\n\nTypes of R1C1 referencing\n\nthree kinds of R1C1 reference:\n\nabsolute reference = specify a row and column number (R2C2)\nrelative reference by adding a numeric offset in square brackets (R2C[-6])\nimplicit intersection-like “give me this row’s column 2” by using a bare R/C (RC2)\n\n\na much nicer way of doing mixed referencing\n\n\n\n\n\n\n\nTask\n\n\n\n\nin R16C4, please populate the four rows of the Age column in the summary table using R1C1\n\n\n\nWhy bother with R1C1?\n\nR1C1 adds a bit of complexity to simple formulas\n\nbut it makes complicated formulas (and repeated formulas) much easier to understand\nthis is a big help when working with more complex Excel documents - particularly if you’re debugging something that’s gone wrong\n\n\nR1C1 gives the same formulas for the same work across different columns\n\nwe have to work this out by hand with A1 referencing - the row number would be different each time\nthis helps us understand quickly when and where a formula is repeated\n\n\n(apparently) R1C1 is faster with very complex sheets"
  },
  {
    "objectID": "excel/practical_power_pivot.html",
    "href": "excel/practical_power_pivot.html",
    "title": "Practical PowerPivot",
    "section": "",
    "text": "No feedback found for this session"
  },
  {
    "objectID": "excel/practical_power_pivot.html#welcome",
    "href": "excel/practical_power_pivot.html#welcome",
    "title": "Practical PowerPivot",
    "section": "Welcome",
    "text": "Welcome\n\nthis session is 🌶🌶, so it’s designed for intermediate users with plenty of previous Excel Pivot Table experience\nthis session is not a general introduction to Pivot Tables in Excel\ninstead, it’s designed as a high-level introduction to Power Pivot"
  },
  {
    "objectID": "excel/practical_power_pivot.html#session-outline",
    "href": "excel/practical_power_pivot.html#session-outline",
    "title": "Practical PowerPivot",
    "section": "Session outline",
    "text": "Session outline\n\ncheck that you have Power Pivot please!\n\nuseful guide for M365\n\n\nPowerPivot infrastructure varies widely, so we can’t advise on installation\n\n\nfind and tidy some data in Excel\nadd to Power Pivot\nlook at the data model and create relationships\ncreate a pivot table from that data\ncreate calculated columns in the data model\ncreate measures and add to a pivot table"
  },
  {
    "objectID": "excel/practical_power_pivot.html#words-of-warning",
    "href": "excel/practical_power_pivot.html#words-of-warning",
    "title": "Practical PowerPivot",
    "section": "Words of warning",
    "text": "Words of warning\n\nPower Pivot is glitchy\nPower Pivot in Excel is still officially supported, but has been largely replaced by Power BI\n\nI’d be very circumspect about its long-term prospects\nI’d also be cautious about starting more ambitious projects in Power Pivot\n\n\nThat said, knowing a bit of Power Pivot is definitely worthwhile - especially if you’re not able to use Power BI etc"
  },
  {
    "objectID": "excel/practical_power_pivot.html#nutshell",
    "href": "excel/practical_power_pivot.html#nutshell",
    "title": "Practical PowerPivot",
    "section": "Nutshell",
    "text": "Nutshell\n\nPowerPivot = effectively a local SSAS\n\nthat means PowerPivot allows you to do fancy relational work with your data\nit can also means higher performance with large (10k rows +) data\nyet allows you to use Excel for data ingest and output"
  },
  {
    "objectID": "excel/practical_power_pivot.html#data",
    "href": "excel/practical_power_pivot.html#data",
    "title": "Practical PowerPivot",
    "section": "Data",
    "text": "Data\n\ndownload the Agatha Christie dataset as an Excel file\ntidying:\n\nremove filters \n\ncreate 4 x named tables for each of the four main data sheets:\n\nnovels\nshort_stories\nshort_story_collections\nall_titles"
  },
  {
    "objectID": "excel/practical_power_pivot.html#add-data-to-power-pivot",
    "href": "excel/practical_power_pivot.html#add-data-to-power-pivot",
    "title": "Practical PowerPivot",
    "section": "Add data to Power Pivot",
    "text": "Add data to Power Pivot\n\nfind Power Pivot in the ribbon menu\nnow add each table in turn to your data model"
  },
  {
    "objectID": "excel/practical_power_pivot.html#the-data-view",
    "href": "excel/practical_power_pivot.html#the-data-view",
    "title": "Practical PowerPivot",
    "section": "The data view",
    "text": "The data view\n\ndata view"
  },
  {
    "objectID": "excel/practical_power_pivot.html#the-diagram-view",
    "href": "excel/practical_power_pivot.html#the-diagram-view",
    "title": "Practical PowerPivot",
    "section": "The diagram view",
    "text": "The diagram view\n\ndiagram view"
  },
  {
    "objectID": "excel/practical_power_pivot.html#relationships",
    "href": "excel/practical_power_pivot.html#relationships",
    "title": "Practical PowerPivot",
    "section": "Relationships",
    "text": "Relationships\n\nyou can create relationships between different parts of your data\nthat’s useful as you can then exploit those relationships using DAX formulas\nopen the diagram view, and connect the other three Title ID columns to all_titles[Title ID]"
  },
  {
    "objectID": "excel/practical_power_pivot.html#relationships-have-directions",
    "href": "excel/practical_power_pivot.html#relationships-have-directions",
    "title": "Practical PowerPivot",
    "section": "Relationships have directions",
    "text": "Relationships have directions\n(with thanks to Michael Robb, NHS Highland)"
  },
  {
    "objectID": "excel/practical_power_pivot.html#make-a-pivot-table",
    "href": "excel/practical_power_pivot.html#make-a-pivot-table",
    "title": "Practical PowerPivot",
    "section": "Make a Pivot Table",
    "text": "Make a Pivot Table\n\nthis should feel nice and familiar: please insert a pivot table (from Power Pivot)\nthat should bring up a nearly-standard set of pivot table tools. One immediate difference though: you can work across several tables"
  },
  {
    "objectID": "excel/practical_power_pivot.html#make-a-pivot-table-1",
    "href": "excel/practical_power_pivot.html#make-a-pivot-table-1",
    "title": "Practical PowerPivot",
    "section": "Make a Pivot Table",
    "text": "Make a Pivot Table\n\n\n\n\nPivot table fields\n\n\n\n\nOutput"
  },
  {
    "objectID": "excel/practical_power_pivot.html#dax",
    "href": "excel/practical_power_pivot.html#dax",
    "title": "Practical PowerPivot",
    "section": "DAX",
    "text": "DAX\n\nPower Pivot is based on DAX (Data Analysis eXpressions)\nsimilar to Excel formula language\na major difference: you can’t reference individual cells\nwe’ll use structured references: table[column]"
  },
  {
    "objectID": "excel/practical_power_pivot.html#make-a-new-column",
    "href": "excel/practical_power_pivot.html#make-a-new-column",
    "title": "Practical PowerPivot",
    "section": "Make a new column",
    "text": "Make a new column\n\n=MROUND(short_story_collections[Year of first publication], 10)\nrename to Decade\n\nrefresh your pivot table, and add a decade column"
  },
  {
    "objectID": "excel/practical_power_pivot.html#fancier-calculated-columns-with-dax",
    "href": "excel/practical_power_pivot.html#fancier-calculated-columns-with-dax",
    "title": "Practical PowerPivot",
    "section": "Fancier calculated columns with DAX",
    "text": "Fancier calculated columns with DAX\n\nadd a series col to your all_titles data\n\n=related(novels[Series]) & related(short_stories[Series])"
  },
  {
    "objectID": "excel/practical_power_pivot.html#fancier-calculated-columns-with-dax-1",
    "href": "excel/practical_power_pivot.html#fancier-calculated-columns-with-dax-1",
    "title": "Practical PowerPivot",
    "section": "Fancier calculated columns with DAX",
    "text": "Fancier calculated columns with DAX\n\nadd a publication_year column to your short_story data\n\n=LOOKUPVALUE(short_story_collections[Year of first publication],short_story_collections[Title Name], short_stories[Collection])"
  },
  {
    "objectID": "excel/practical_power_pivot.html#calculated-columns-work-as-ordinary-pivot-table-data",
    "href": "excel/practical_power_pivot.html#calculated-columns-work-as-ordinary-pivot-table-data",
    "title": "Practical PowerPivot",
    "section": "Calculated columns work as ordinary pivot table data",
    "text": "Calculated columns work as ordinary pivot table data\n\nremember to refresh the data\nyou may also need to re-create your pivot table if you add tables/relationships: glitchy!"
  },
  {
    "objectID": "excel/practical_power_pivot.html#creating-measures",
    "href": "excel/practical_power_pivot.html#creating-measures",
    "title": "Practical PowerPivot",
    "section": "Creating measures",
    "text": "Creating measures\n\nanother way of using DAX to create values\ninsert from the Power Pivot menu: \n\nthen populate with a simple DAX calculation: =AVERAGE(ssc[Number of stories])\n\nnote the Table Name (which is where your measure will live)"
  },
  {
    "objectID": "excel/practical_power_pivot.html#using-measures",
    "href": "excel/practical_power_pivot.html#using-measures",
    "title": "Practical PowerPivot",
    "section": "Using measures",
    "text": "Using measures\n\nyou can then insert your measure in a Pivot Table\nfirst refresh your pivot table\nthen look in the table you set as the Table Name to find your measure: \n\nnow drag the measure to the Values field, and then populate Rows with short_story_collection[Decade]"
  },
  {
    "objectID": "excel/pivot_tables_and_pivot_charts.html",
    "href": "excel/pivot_tables_and_pivot_charts.html",
    "title": "Pivot tables and pivot charts",
    "section": "",
    "text": "This is a session in our intermediate-level Excel skill builder course. This consists of five practical training sessions, designed to be taken together, that are aimed at helping users with some prior Excel experience build and consolidate their skills. The sessions are:"
  },
  {
    "objectID": "excel/pivot_tables_and_pivot_charts.html#previous-attendees-have-said",
    "href": "excel/pivot_tables_and_pivot_charts.html#previous-attendees-have-said",
    "title": "Pivot tables and pivot charts",
    "section": "Previous attendees have said…",
    "text": "Previous attendees have said…\n\n21 previous attendees have left feedback\n100% would recommend this session to a colleague\n95% said that this session was pitched correctly\n\n\n\n\n\n\n\n\n\n\n\nThree random comments from previous attendees\n\n\n\n\nWell presented and lots of little tips to expand my skills using excel\nThis session felt like it was more targeted to people who had never used pivot tables, I have used pivot tables for many years but I still learned something from this course! Everyday is a school day and just because you use something everyday doesn’t mean you are an expert!\nI’m Excel self-taught out of necessity and probably like a lot of NHS staff. I found the session helpful in validating that I was in fact using pivot tables correctly. I didn’t know about slicers or about uploading data from the web and both of those hacks will become daily use for me. The session gave me confidence in my own ability which can be a rare feeling and even let me think that I might now be an ‘advanced user’. I’ve no notes on the session content, I found it hit the mark and was straightforward to follow. Really great to use a PHS dataset too as they’re the ones I think a lot of people would pull data from."
  },
  {
    "objectID": "excel/pivot_tables_and_pivot_charts.html#session-outline",
    "href": "excel/pivot_tables_and_pivot_charts.html#session-outline",
    "title": "Pivot tables and pivot charts",
    "section": "Session outline",
    "text": "Session outline\n\nPivot tables\nPivot charts\nSlicers\nConditional formatting"
  },
  {
    "objectID": "excel/pivot_tables_and_pivot_charts.html#getting-started",
    "href": "excel/pivot_tables_and_pivot_charts.html#getting-started",
    "title": "Pivot tables and pivot charts",
    "section": "Getting started",
    "text": "Getting started\n\nfiles for today:\n\n\ns05_exercises.xlsx is a starting-point for the exercises today\n\ns05_exercises_final.xlsx is the end-point for the exercises today - it’s there to help if you get stuck or lost\n\n\n\n\n\n\n\n\n\nTask\n\n\n\n\nOpen the sample spreadsheet s05_exercises.xlsx and have a look around\nSwitch to the service use data in the weekend_sh sheet"
  },
  {
    "objectID": "excel/pivot_tables_and_pivot_charts.html#whats-this-all-for",
    "href": "excel/pivot_tables_and_pivot_charts.html#whats-this-all-for",
    "title": "Pivot tables and pivot charts",
    "section": "What’s this all for?",
    "text": "What’s this all for?\n\nthis data is complicated\nwe want to find out when our service is busiest\n\nthat’s hard to do manually - we can’t just inspect it by eye\nwe’ll need to summarise our data\n\n\ntwo key concerns\n\nwe want to do that safely\nwe also want to do that efficiently\n\n\nthis session (and the previous ones) give some key methods for effectively summarising Excel data\n\nmost importantly: be clear about where your data lives, and where your summaries will live"
  },
  {
    "objectID": "excel/pivot_tables_and_pivot_charts.html#pivot-tables",
    "href": "excel/pivot_tables_and_pivot_charts.html#pivot-tables",
    "title": "Pivot tables and pivot charts",
    "section": "Pivot tables",
    "text": "Pivot tables\n\n\nthe key summary tool in Excel\nmaking a new pivot table is easy\nand will give us an answer to our summary question quickly\n\n\n\n\n\n\n\nTask\n\n\n\n\nOpen the s05_exercises.xlsx file\nGo to the weekend_sh worksheet\nSelect the weekend_service table (click inside it and Ctrl + a)\nPress Alt, N, V, T (or from the ribbon Insert &gt;&gt; PivotTable), and click OK to insert a pivot table \n\nSwitch to the new worksheet containing your new (blank) pivot table"
  },
  {
    "objectID": "excel/pivot_tables_and_pivot_charts.html#adding-data-to-a-pivot-table",
    "href": "excel/pivot_tables_and_pivot_charts.html#adding-data-to-a-pivot-table",
    "title": "Pivot tables and pivot charts",
    "section": "Adding data to a pivot table",
    "text": "Adding data to a pivot table\n\nnext, we need to tell the pivot table which data we want to summarise\nwe’ll use the PivotTable Fields interface to control this\n\nwe want to find the busiest days for each quarter for each site, so we:\n\ndrag the three site_ columns to the Values field\nthen, using the dropdown, change the Value Field Settings to Max\n\n(the Columns field should automatically populate with Values)\ndrag the date column to the Rows field"
  },
  {
    "objectID": "excel/pivot_tables_and_pivot_charts.html#improving-our-pivot-table",
    "href": "excel/pivot_tables_and_pivot_charts.html#improving-our-pivot-table",
    "title": "Pivot tables and pivot charts",
    "section": "Improving our pivot table",
    "text": "Improving our pivot table\n\n\nNew Pivot table\n\n\nthat gives us a simple pivot table, showing us the peak values for our service\nwe can also add a PivotChart instantly - click on your pivot table, and press Alt + F1\n\nplay with the expansion buttons - the PivotChart should update to reflect the way that your PivotTable is currently arranged"
  },
  {
    "objectID": "excel/pivot_tables_and_pivot_charts.html#pivottable-tips",
    "href": "excel/pivot_tables_and_pivot_charts.html#pivottable-tips",
    "title": "Pivot tables and pivot charts",
    "section": "PivotTable tips",
    "text": "PivotTable tips\n\n\n\n\n\n\nNote\n\n\n\n\nDouble-click any cell in a PivotTable to see the underlying data\nGroup PivotTable items using:\n\n\nShift + Alt + → (right arrow) to add items to a group\n\nShift + Alt + ← (left arrow) to ungroup\n\n\nAdd a new calculated field using Ctrl + Shift + = (equals)\nDelete an entire PivotTable using Ctrl + A then pressing Del"
  },
  {
    "objectID": "excel/pivot_tables_and_pivot_charts.html#pivottable-pages",
    "href": "excel/pivot_tables_and_pivot_charts.html#pivottable-pages",
    "title": "Pivot tables and pivot charts",
    "section": "PivotTable pages",
    "text": "PivotTable pages\n\nwe can split out parts of a PivotTable to separate worksheets\n\n\n\n\n\n\n\nTask\n\n\n\n\nDrag the Years item to the Filters field. This should update the PivotTable so that only one year’s data is present at once\nWe can also split each year into its own worksheet: find the option in the PivotTable Analyze section of the ribbon - or via Alt, J, T, T, P"
  },
  {
    "objectID": "excel/pivot_tables_and_pivot_charts.html#slicing",
    "href": "excel/pivot_tables_and_pivot_charts.html#slicing",
    "title": "Pivot tables and pivot charts",
    "section": "Slicing",
    "text": "Slicing\n\none slicer can control many PivotTables\n\n\n\n\n\n\n\nTask\n\n\n\n\nClick within one of your new annual PivotTables\nAdd a slicer from the insert menu (or ALT, N, S, F)\nSelect date to slice on\nWhen the slicer appears, right click and select “Report Connections…” and add the other annual PivotTables\nNow select a couple of months from your slicer, and see the effect on your PivotTables\n\n\n\n\nif you’re working with dates, you can also use the timeline, which works in exactly the same way. Insert with ALT, N, S, T, update the connections, and you can get fine-grained control over which date-ranges contribute to your PivotTable"
  },
  {
    "objectID": "excel/pivot_tables_and_pivot_charts.html#conditional-formatting",
    "href": "excel/pivot_tables_and_pivot_charts.html#conditional-formatting",
    "title": "Pivot tables and pivot charts",
    "section": "Conditional formatting",
    "text": "Conditional formatting\n\ngenerally useful for shorter data and simpler summary queries than PivotTables\n\nduplicated values\nmax values\n\n\nloads of pre-packed options for conditional formatting\n\n\n\n\n\n\n\nTask\n\n\n\n\nSwitch to the Conditional formatting worksheet\nFrom the ribbon, explore some of the pre-packed conditional formats"
  },
  {
    "objectID": "excel/pivot_tables_and_pivot_charts.html#conditional-formatting-rules",
    "href": "excel/pivot_tables_and_pivot_charts.html#conditional-formatting-rules",
    "title": "Pivot tables and pivot charts",
    "section": "Conditional formatting rules",
    "text": "Conditional formatting rules\n\nfor more sophisticated conditional formatting, formatting rules can be specified and edited using the conditional formatting rules manager\n\n\n\n\n\n\n\nTask\n\n\n\n\nAdd a pre-packed conditional format to your table\nBring up the conditional formatting rules manager using ALT, H, L, R"
  },
  {
    "objectID": "excel/pivot_tables_and_pivot_charts.html#custom-conditional-formatting",
    "href": "excel/pivot_tables_and_pivot_charts.html#custom-conditional-formatting",
    "title": "Pivot tables and pivot charts",
    "section": "Custom conditional formatting",
    "text": "Custom conditional formatting\n\nagain, there are pre-set formatting rules available\nwe can also write a custom formula\n\n\n\n\n\n\n\nTask\n\n\n\n\nTo find the max value in a row, use the formula = A2 = MAX($A2:$E2) \n\nTry adding extra rules and experimenting with how they interact"
  },
  {
    "objectID": "excel/pivot_tables_and_pivot_charts.html#thank-yous",
    "href": "excel/pivot_tables_and_pivot_charts.html#thank-yous",
    "title": "Pivot tables and pivot charts",
    "section": "Thank yous",
    "text": "Thank yous\nI’m grateful to Jennifer Watt, John Mackintosh, Duncan Sage, David Coigach, Michael Robb, Angela Godfrey, Spela Oberstar, Andrew Christopherson, and other members of the KIND network for their valuable suggestions and corrections to these training materials"
  },
  {
    "objectID": "excel/lambda_formulas_in_excel.html",
    "href": "excel/lambda_formulas_in_excel.html",
    "title": "Lambda formulas in Excel",
    "section": "",
    "text": "Session materials\n\n\n\n\n\n\nall materials \nslides  html /  pdf\nNo feedback found for this session"
  },
  {
    "objectID": "excel/lambda_formulas_in_excel.html#welcome",
    "href": "excel/lambda_formulas_in_excel.html#welcome",
    "title": "Lambda formulas in Excel",
    "section": "Welcome",
    "text": "Welcome\n\n🌶🌶 this session is for intermediate Excel users\nyou’ll need M365 Excel (either web or desktop) to follow along\n\nearlier versions of Excel don’t have the LAMBDA function that we’ll need\nyou’ll also need to be pretty fluent with formulas, and know a bit about naming things in Excel"
  },
  {
    "objectID": "excel/lambda_formulas_in_excel.html#session-outline",
    "href": "excel/lambda_formulas_in_excel.html#session-outline",
    "title": "Lambda formulas in Excel",
    "section": "Session outline",
    "text": "Session outline\n\nthis session is based on our Excel skill-builder course\nquick introduction to lambda formulas\nLAMBDA()\ntwo practical examples\nuse-cases, and tips for applications"
  },
  {
    "objectID": "excel/lambda_formulas_in_excel.html#introduction",
    "href": "excel/lambda_formulas_in_excel.html#introduction",
    "title": "Lambda formulas in Excel",
    "section": "Introduction",
    "text": "Introduction\n\nlambda formulas are a way of repeating complicated Excel formulas safely\nfairly new - M365 Excel only\nodd, rather than hard to implement"
  },
  {
    "objectID": "excel/lambda_formulas_in_excel.html#lambda",
    "href": "excel/lambda_formulas_in_excel.html#lambda",
    "title": "Lambda formulas in Excel",
    "section": "LAMBDA",
    "text": "LAMBDA\n\n\ntake an existing formula\nwork out what the inputs are - usually, which cells are referenced\nadd one parameter per input\ndo a calculation with those parameters\nname and save that formula"
  },
  {
    "objectID": "excel/lambda_formulas_in_excel.html#making-a-lambda-function-setup",
    "href": "excel/lambda_formulas_in_excel.html#making-a-lambda-function-setup",
    "title": "Lambda formulas in Excel",
    "section": "Making a lambda function (setup)",
    "text": "Making a lambda function (setup)\n\nput some random numbers in A3 and B3\n\nwe could calculate A3 * B3 directly\nbut imagine we want to convert = A3 * B3 to a lambda"
  },
  {
    "objectID": "excel/lambda_formulas_in_excel.html#making-a-lambda-function",
    "href": "excel/lambda_formulas_in_excel.html#making-a-lambda-function",
    "title": "Lambda formulas in Excel",
    "section": "Making a lambda function",
    "text": "Making a lambda function\n\nstart with the lambda outline in D3\n\n= LAMBDA()\n\n\nnext, add test values in a second set of brackets\n\n= LAMBDA()(A3, B3)\n\n\nwe now invent parameter names (like variable names) for each of those values, and add them\n\n= LAMBDA(n_1, n_2, )(A3, B3)\n\n\nthen add the formula that we want to replicate\n\n= LAMBDA(n_1, n_2, n_1 * n_2)(A3, B3)"
  },
  {
    "objectID": "excel/lambda_formulas_in_excel.html#saving-a-lambda-function",
    "href": "excel/lambda_formulas_in_excel.html#saving-a-lambda-function",
    "title": "Lambda formulas in Excel",
    "section": "Saving a lambda function",
    "text": "Saving a lambda function\n\nonce you’ve tested and checked your lambda with a range of test values, copy your lambda formula (without the test values in the second brackets)\nthen open the name manager (Ctrl + F3)\ncreate a new name, then name your lambda definition using the New Name interface\npaste your lambda into the Refers to: section\n\nomit the test values - so just = LAMBDA(n_1, n_2, n_1 * n_2)\n\n\n\ntest your new lambda function"
  },
  {
    "objectID": "excel/lambda_formulas_in_excel.html#lambda-functions",
    "href": "excel/lambda_formulas_in_excel.html#lambda-functions",
    "title": "Lambda formulas in Excel",
    "section": "Lambda functions",
    "text": "Lambda functions\n\na real-ish example: converting CHI to DoB\nput an example CHI into G2 (like 1610790854)\nyou can use the following 😱 formula:\n\n=DATE(IF(RIGHT(LEFT(G2, 6), 2) &gt; RIGHT(YEAR(TODAY()), 2), 19, 20) & RIGHT(LEFT(G2, 6), 2), MID(LEFT(G2, 6), 3, 2), LEFT(LEFT(G2, 6), 2))\n\nthat’s a horrifying thing to paste about, so we can make this into a lambda:\n\n=LAMBDA(chi, DATE(IF(RIGHT(LEFT(chi, 6), 2) &gt; RIGHT(YEAR(TODAY()), 2), 19, 20)&RIGHT(LEFT(chi, 6), 2), MID(LEFT(chi, 6), 3, 2), LEFT(LEFT(chi, 6), 2)))(G2)\n\nthen save as CHI_TO_DOB via the name manager"
  },
  {
    "objectID": "excel/lambda_formulas_in_excel.html#use-cases-and-tips-for-applications",
    "href": "excel/lambda_formulas_in_excel.html#use-cases-and-tips-for-applications",
    "title": "Lambda formulas in Excel",
    "section": "Use-cases, and tips for applications",
    "text": "Use-cases, and tips for applications\n\nmaking workbooks less complicated\n\nnames and lambda formulas are a strong combo\n\n\nstandardising (and user-proofing) complex formulas\nlambdas are local, so you need to think laterally to re-use them\n\nmake a new blank sheet, and right-click the sheet tab\n\nMove or Copy... to new book"
  },
  {
    "objectID": "excel/excel_logic.html",
    "href": "excel/excel_logic.html",
    "title": "Logic in Excel",
    "section": "",
    "text": "Session materials\n\n\n\n\n\n\nall materials \nslides  html /  pdf\n\nexercises .xlsx / completed exercises .xlsx\nNo feedback found for this session"
  },
  {
    "objectID": "excel/excel_logic.html#welcome",
    "href": "excel/excel_logic.html#welcome",
    "title": "Logic in Excel",
    "section": "Welcome",
    "text": "Welcome\n\nthis session is for 🌶🌶🌶 advanced Excel users, who are confident writing formulas"
  },
  {
    "objectID": "excel/excel_logic.html#acknowledgements",
    "href": "excel/excel_logic.html#acknowledgements",
    "title": "Logic in Excel",
    "section": "Acknowledgements",
    "text": "Acknowledgements\nSincere thanks and appreciation to people who volunteered formulas for this session:\n\nLaura De Jongh (Hanover Scotland)\nGail Young (NHS Greater Glasgow & Clyde)\nGail Donaldson (NHS Lanarkshire)\nMatthew Hooks (Scottish Ambulance Service)\nSusanna Kirk (NHS Fife)\nHilary Guthrie (NHS Lothian)\nIrene Ventura (NHS Lanarkshire)\nPeter Wild (NHS Ayrshire & Arran)\nChris Spratt (NHS National Services Scotland)"
  },
  {
    "objectID": "excel/excel_logic.html#session-outline",
    "href": "excel/excel_logic.html#session-outline",
    "title": "Logic in Excel",
    "section": "Session outline",
    "text": "Session outline\n\nintro to logic in Excel\n\nfive minutes of Boolean algebra\nbasic logical functions (NOT, AND, OR)\nputting logical functions to work with IF and IFS\n\n\n\nusing logic in Excel\n\ndealing with errors and missing values (IFERROR, IFNA, and friends)\nmanaging different data types (ISNUMBER and friends)\nconditional summarising (SUMIF, COUNTIFS, and friends)\nnesting IF statements and future-proofing your work"
  },
  {
    "objectID": "excel/excel_logic.html#boolean-algebra",
    "href": "excel/excel_logic.html#boolean-algebra",
    "title": "Logic in Excel",
    "section": "Boolean algebra",
    "text": "Boolean algebra\n\nthe standard way of working with truth-values\n\nfound all over mathematics, logic, computer science…\n\n\nthink of a statement like \"my cat is blue\"\n\ncall that P to save writing it every time\n\n\nassume that P is either completely TRUE or completely FALSE"
  },
  {
    "objectID": "excel/excel_logic.html#not",
    "href": "excel/excel_logic.html#not",
    "title": "Logic in Excel",
    "section": "NOT",
    "text": "NOT\n\n\nNOT gives us the opposite truth-value\nif P is FALSE, then NOT P is TRUE\n\na useful shorthand: the truth table:\n\n\n\nP\nNOT P\n\n\n\nTRUE\nFALSE\n\n\nFALSE\nTRUE"
  },
  {
    "objectID": "excel/excel_logic.html#and",
    "href": "excel/excel_logic.html#and",
    "title": "Logic in Excel",
    "section": "AND",
    "text": "AND\n\nwe also have functions to understand what happens when we’re dealing with two statements\n\nAND is a great example - it’s TRUE when both the statements are TRUE\n\n\n\n\n\n\nP\nQ\nP AND Q\n\n\n\nTRUE\nTRUE\nTRUE\n\n\nTRUE\nFALSE\nFALSE\n\n\nFALSE\nTRUE\nFALSE\n\n\nFALSE\nFALSE\nFALSE"
  },
  {
    "objectID": "excel/excel_logic.html#or",
    "href": "excel/excel_logic.html#or",
    "title": "Logic in Excel",
    "section": "OR",
    "text": "OR\n\n\nOR is TRUE when either of the statements are TRUE\n\n\n\n\n\n\nP\nQ\nP OR Q\n\n\n\nTRUE\nTRUE\nTRUE\n\n\nTRUE\nFALSE\nTRUE\n\n\nFALSE\nTRUE\nTRUE\n\n\nFALSE\nFALSE\nFALSE"
  },
  {
    "objectID": "excel/excel_logic.html#xor",
    "href": "excel/excel_logic.html#xor",
    "title": "Logic in Excel",
    "section": "XOR",
    "text": "XOR\n\nFor completeness, we should also talk about XOR\n\n\nXOR is TRUE when either of the statements - but not both - are TRUE\n\n\n\n\n\n\nP\nQ\nP XOR Q\n\n\n\nTRUE\nTRUE\nFALSE\n\n\nTRUE\nFALSE\nTRUE\n\n\nFALSE\nTRUE\nTRUE\n\n\nFALSE\nFALSE\nFALSE"
  },
  {
    "objectID": "excel/excel_logic.html#not-in-excel",
    "href": "excel/excel_logic.html#not-in-excel",
    "title": "Logic in Excel",
    "section": "\nNOT in Excel",
    "text": "NOT in Excel\n\nsweet relief: please open the sample workbook for this session in Excel\nhave a look at the NOT worksheet\n\n\nNOT() function inputs in the truth-table\nexample use about inhalers\n\nnote that NOT() will treat any number as TRUE, and 0 as FALSE\n\n\n\n\n\n\n\n\n\n\n\n\nTask\n\n\n\n\n\n\nplease add a formula to decide whether a person is a non-user of inhalers or not\nit should return TRUE/FALSE based on the number of inhalers used"
  },
  {
    "objectID": "excel/excel_logic.html#and-and-or-in-excel",
    "href": "excel/excel_logic.html#and-and-or-in-excel",
    "title": "Logic in Excel",
    "section": "\nAND and OR in Excel",
    "text": "AND and OR in Excel\n\nhave a look at the AND / OR worksheet\n\nhave a look at the truth-table for AND and OR\n\nspecifically, look at the formulas and the way they use AND() and OR()\n\n\n\n\n\n\n\n\n\n\nTask\n\n\n\n\n\n\nin the hypertension/diabetes table, you’ve got several rows of data where each represents a person. Please write two formulas:\n\nfor diet and lifestyle, you’ll want to return TRUE if a person has either hypertension and/or diabetes\nfor statins, you’ll want to return TRUE is a person has both hypertension and diabetes"
  },
  {
    "objectID": "excel/excel_logic.html#if",
    "href": "excel/excel_logic.html#if",
    "title": "Logic in Excel",
    "section": "IF",
    "text": "IF\n\nunfortunately our data usually doesn’t come neatly coded into TRUE and FALSE\n\nthat mean we’ll usually need to use our basic logical functions in combination with other functions\n\nIF is a great example of a function that helps you convert to logical values\nhere’s an example formula: =IF(B3 &gt; 150, \"Hypertension\", \"No hypertension\")\n\nif the value in B3 is over 150, the formula returns \"Hypertension\"\n\notherwise it returns \"No hypertension\"\n\n\n\nthis is useful in its own right, but gets even more powerful when you return logical values\nhave a look at the top table on the IF worksheet\n\n\n\n\n\n\n\nTask\n\n\n\n\n\n\nin the IF worksheet, there’s an incomplete table of blood pressure values\nplease write a formula to return TRUE if those values are over 150, and FALSE otherwise\nthere’s a named cell on this sheet called Cutoff - please now change that 150 in your IF formula to use the value of the named cell"
  },
  {
    "objectID": "excel/excel_logic.html#true-and-false-are-1-and-0",
    "href": "excel/excel_logic.html#true-and-false-are-1-and-0",
    "title": "Logic in Excel",
    "section": "TRUE and FALSE are 1 and 0",
    "text": "TRUE and FALSE are 1 and 0\n\nmany other tools let you add up TRUE/FALSE values as if they were 1s and 0s\nthis can be very useful - say, to quickly count matching values\nExcel needs a minor workaround: add -- before a logical value to treat it as a number: =SUM(--Table1[Hypertension?])"
  },
  {
    "objectID": "excel/excel_logic.html#ifs",
    "href": "excel/excel_logic.html#ifs",
    "title": "Logic in Excel",
    "section": "IFS",
    "text": "IFS\n\n\nIFS allows you to check for the presence of several conditions fairly concisely\nan example: =IFS(B4 = TRUE,\"High\",C4 = \"CRD\",\"High\", D4 &gt; 20,\"High\", TRUE,\"Low\")\n\nread this horror as pairs of arguments, like B4 = TRUE, \"High\"\n\neach pair contains\n\na logical test - like B4 = TRUE\n\na return value if that test is TRUE - like \"High\"\n\n\n\nthe final pair of arguments are a catch-all to pick up all non-matched values"
  },
  {
    "objectID": "excel/excel_logic.html#public-service-announcement",
    "href": "excel/excel_logic.html#public-service-announcement",
    "title": "Logic in Excel",
    "section": "Public service announcement",
    "text": "Public service announcement\n\njust because you can, doesn’t mean you should\n\nIFS get pathologically complicated\npivot tables might be better for more complicated cases"
  },
  {
    "objectID": "excel/excel_logic.html#ifna-iferror-and-friends",
    "href": "excel/excel_logic.html#ifna-iferror-and-friends",
    "title": "Logic in Excel",
    "section": "\nIFNA, IFERROR, and friends",
    "text": "IFNA, IFERROR, and friends\n\nthese functions are great for dealing with errors and missing values\nthat’s useful, because (understatement of the decade) Excel isn’t very good at consistently dealing with errors and missing values"
  },
  {
    "objectID": "excel/excel_logic.html#is-and-if-functions",
    "href": "excel/excel_logic.html#is-and-if-functions",
    "title": "Logic in Excel",
    "section": "\nIS and IF functions",
    "text": "IS and IF functions\n\n\nIS**** functions detect errors and missing values and return TRUE/FALSE\n\n\nIF**** functions detect, and then:\n\nif an error is found display a message of your choice\notherwise just repeat the value they refer to"
  },
  {
    "objectID": "excel/excel_logic.html#what-do-they-detect",
    "href": "excel/excel_logic.html#what-do-they-detect",
    "title": "Logic in Excel",
    "section": "What do they detect?",
    "text": "What do they detect?"
  },
  {
    "objectID": "excel/excel_logic.html#the-important-error-messages-ones",
    "href": "excel/excel_logic.html#the-important-error-messages-ones",
    "title": "Logic in Excel",
    "section": "The important error messages ones",
    "text": "The important error messages ones\n\nBLANK = “There’s no value in that cell”\nERROR = “This formula doesn’t work properly”\n#N/A = “I can’t find what I was asked to find”\nERR = “A non-N/A error has happened”"
  },
  {
    "objectID": "excel/excel_logic.html#sumif-and-countif",
    "href": "excel/excel_logic.html#sumif-and-countif",
    "title": "Logic in Excel",
    "section": "SUMIF and COUNTIF",
    "text": "SUMIF and COUNTIF\n\nbasically, IF plus summary functions\nthree simple-ish examples to see:\n\n\n=SUMIF(B3:F3,\"&gt;5\"), which totals all values in the range greater than 5\n\n=COUNTIF(A10:E10,\"ramipril\"), which counts all occurrences of the work “ramipril” in a range\nor the close relative =COUNTIF(A10:E10,\"*prazole\") which uses a wildcard to count all the words ending in “prazole” from a range\n\n\nthere’s also the more complex SUMIFS, which allows you to sum with multiple conditions"
  },
  {
    "objectID": "excel/excel_logic.html#example-applications",
    "href": "excel/excel_logic.html#example-applications",
    "title": "Logic in Excel",
    "section": "Example applications",
    "text": "Example applications\n\n\n=IF(AND(B4 &gt;= TIMEVALUE(\"08:30\"), B4 &lt;= TIMEVALUE(\"17:00\")), \"In hours\", \"Out of hours\") to determine if a time is in- or out-of-hours\n\n=IF(LEN(B20)=9,CONCATENATE(\"0\",B20),TEXT(B20,\"0\")) to re-add a dropped leading 0 from a CHI / ISBN\n\n=IF(ISBLANK(B26), \"\", B26) to elegantly reference date values to avoid returning 00/01/1900 for missing values\n\n=IF((TODAY() &gt; DATE(YEAR(B31) + 3, MONTH(B31), DAY(B31))), \"Late\", \"Not late\") to determine if an activity has taken place in the past three years\n\n=FILTER(B35:B41, (C35:C41 &gt; 4)*D35:D41&gt;4) to find all rows with a value more than 4 in both the C and D column\n\n=IF(COUNTIF(B44,\"*ow*\"),TRUE,FALSE). IF by itself doesn’t allow wildcard matching, so you can attempt a work-around via COUNTIF"
  },
  {
    "objectID": "excel/excel_foundations_01.html",
    "href": "excel/excel_foundations_01.html",
    "title": "Excel foundations 1",
    "section": "",
    "text": "This is a session in our intermediate-level Excel skill builder course. This consists of five practical training sessions, designed to be taken together, that are aimed at helping users with some prior Excel experience build and consolidate their skills. The sessions are:\nNo feedback found for this session"
  },
  {
    "objectID": "excel/excel_foundations_01.html#session-outline",
    "href": "excel/excel_foundations_01.html#session-outline",
    "title": "Excel foundations 1",
    "section": "Session outline",
    "text": "Session outline\n\nmost Excel questions can be broken down into these five areas\n\nCells and formatting\nRanges and tables\nReferences\nFormulas\nFunctions\n\n\nwe’ll look at cells, ranges, and references in this session"
  },
  {
    "objectID": "excel/excel_foundations_01.html#tasks",
    "href": "excel/excel_foundations_01.html#tasks",
    "title": "Excel foundations 1",
    "section": "Tasks",
    "text": "Tasks\n\nthere are tasks throughout the training session\nthey’re described in the green boxes\nplease follow along with the tasks\n\n\n\n\n\n\n\nTask\n\n\n\n\nthis is the first step of the task\nthis is the next step"
  },
  {
    "objectID": "excel/excel_foundations_01.html#getting-started",
    "href": "excel/excel_foundations_01.html#getting-started",
    "title": "Excel foundations 1",
    "section": "Getting started",
    "text": "Getting started\n\nthis course is written for M365 Excel (desktop)\nother versions of Excel are available, and will work in a similar way\nfiles for today:\n\n\ns01_exercises.xlsx is a starting-point for the exercises today\n\ns01_exercises_final.xlsx is the end-point for the exercises today - it’s there to help if you get stuck or lost\n\n\n\n\n\n\n\n\n\nTask\n\n\n\n\nopen the sample spreadsheet s01_exercises.xlsx and have a look around\nfind the service_use worksheet"
  },
  {
    "objectID": "excel/excel_foundations_01.html#terminology",
    "href": "excel/excel_foundations_01.html#terminology",
    "title": "Excel foundations 1",
    "section": "Terminology",
    "text": "Terminology\n\n\nworksheet / workbook distinction\n\nCtrl + F1 to hide the ribbon"
  },
  {
    "objectID": "excel/excel_foundations_01.html#keyboard-shortcuts",
    "href": "excel/excel_foundations_01.html#keyboard-shortcuts",
    "title": "Excel foundations 1",
    "section": "Keyboard shortcuts",
    "text": "Keyboard shortcuts\n\nExcel is rich in keyboard shortcuts\nthese shortcuts are a great way to build speed and fluency\n\n\n\n\n\n\n\nTask\n\n\n\n\nPress Alt\n\nTry exploring the ribbon using the keyboard shortcuts"
  },
  {
    "objectID": "excel/excel_foundations_01.html#cells-and-formatting",
    "href": "excel/excel_foundations_01.html#cells-and-formatting",
    "title": "Excel foundations 1",
    "section": "Cells and formatting",
    "text": "Cells and formatting\n\nExcel sheets are made up of cells\neach cell can contain either a value or a formula\n\ncells can be formatted\n\nsometimes that’s just text formatting, like size, colour, etc\nsometimes that’s number format, which changes the value in the cell\n\n\nFormatting can be conditional, where formatting changes based on cell values. We talk about this in session 5\n\n\n\n\n\n\n\nTask\n\n\n\n\nlook at the values in the first 15 rows of the date column \n\nExcel generally stores dates using the 1900 date system, which is the number of days since Jan 1st 1900\nso 44570 stands for the 9th of January 2022\nwe can format these into something human-readable. Please select all the cells in that date column and change the number format to Short date  1. or use Alt, H, N, S 1. or Ctrl + 1 and select from the dropdown\n\n\n\n\ncells are arranged in rows and columns"
  },
  {
    "objectID": "excel/excel_foundations_01.html#ranges-and-tables",
    "href": "excel/excel_foundations_01.html#ranges-and-tables",
    "title": "Excel foundations 1",
    "section": "Ranges and tables",
    "text": "Ranges and tables\n\nany group of cells is called a range\n\nwe can convert ranges to tables\n\ntables have lots of useful features\n\nautomatic formatting of headings\nauto filters\nflash fill\n…\n\n\nlet’s turn a range into a table\n\n\n\n\n\n\n\nTask\n\n\n\n\nthe first 15 rows and 5 columns of our exercise worksheet contain a range\nplease select all of those cells\nthen select Format as Table from the ribbon (or Ctrl + T) \n\n\n\n\n\nyou can also convert a table back into a range using the Convert to Range tool"
  },
  {
    "objectID": "excel/excel_foundations_01.html#selecting-tables",
    "href": "excel/excel_foundations_01.html#selecting-tables",
    "title": "Excel foundations 1",
    "section": "Selecting tables",
    "text": "Selecting tables\n\nwithin a table press Ctrl + A to select all values\npress Ctrl + A again to include the headers in the selection\nand press Ctrl + A a third time to include the entire worksheet"
  },
  {
    "objectID": "excel/excel_foundations_01.html#references",
    "href": "excel/excel_foundations_01.html#references",
    "title": "Excel foundations 1",
    "section": "References",
    "text": "References\n\nreferences are the ‘address’ of a particular cell\nreferences are usually made up of a letter and a number (like A2, B56, …)\n\nthe letter stands for the column a cell is in\nthe number stands for the row\n\n\nwe can use those references in formulas\n\n\n=A1 will copy the values from A1 into the current cell\n\n\n\n\n\n\n\n\n\nTask\n\n\n\n\nusing A1 reference, can you populate the first three rows of the summary table? \nStart date\nEnd date\nFirst duty manager\n\n\nyou might need to switch off Calculated Columns from the floatie"
  },
  {
    "objectID": "excel/excel_foundations_01.html#absolute-vs-relative-references",
    "href": "excel/excel_foundations_01.html#absolute-vs-relative-references",
    "title": "Excel foundations 1",
    "section": "Absolute vs relative references",
    "text": "Absolute vs relative references\n\nby default, A1 references are relative\n\nif the formula moves, the reference will change\n\n\n\n\n\n\n\n\n\nTask\n\n\n\n\nthe data accidentally includes the last day of the previous year\n\nplease remove that first row of data (click the row number, then Ctrl + -), and see how the references change\n\n\n\n\n\nRelative references\n\n\nas you’ve seen, relative references can cause problems\nyou can change relative references to absolute (=fixed) references using $\n\n\n$A$1 refers to A1 no matter what\n\nuse this if you absolutely always want to refer to the same cell\n\n\n\n\n\n\n\n\n\n\n\nTask\n\n\n\n\nupdate your relative references in the summary table to absolute references"
  },
  {
    "objectID": "excel/excel_foundations_01.html#working-with-absolute-references",
    "href": "excel/excel_foundations_01.html#working-with-absolute-references",
    "title": "Excel foundations 1",
    "section": "Working with absolute references",
    "text": "Working with absolute references\n\nthere’s a bit more to say about absolute references\n\n\n$A1 will be absolute in the column, but relative in the rows\n\nA$1 will be relative in the row, but absolute in the column\n\n\n\n\n\n\n\n\n\nNote\n\n\n\n\nif you click in the formula bar, F4 toggles absolute/relative\n\nrelative &gt; absolute &gt; abs row &gt; abs col\n\n\n\n\n\n\n\n\n\n\n\nTask\n\n\n\n\ntry changing your 3 absolute references to abs col references (like $A2)\nnow try copying the manager’s name down the column\nnow try copying the manager’s name along the row\ndoes this behave as you’d expect?\n(please remove any of this copied data now - we won’t use it again)"
  },
  {
    "objectID": "excel/excel_foundations_01.html#working-with-names",
    "href": "excel/excel_foundations_01.html#working-with-names",
    "title": "Excel foundations 1",
    "section": "Working with names",
    "text": "Working with names\n\nwe can name cells in Excel\nthis is done using the name box  \n\n\n\n\n\n\n\n\nTask\n\n\n\n\nselect B18\nin the name box, please type a useful short name and confirm with Ctrl + Enter\n\nplease repeat for the other two value cells in the summary table\n\n\n\n\nwe can then use those names in formulas\n\n\n\n\n\n\n\nTask\n\n\n\n\nin a random cell, use TEXT() to find the days of the week from each of your start and end dates\nfor example, my start date is named start_date, so =TEXT(start_date, \"dddd\") gives me Saturday\n\n\n\n\n\nnaming important values helps lower the complexity of formulas by:\n\nmaking it obvious what is being referred to\nallowing you to change the location of a cell - as long as the name is retained, the formulas will continue to work\n\n\nwe can name lots of other parts of Excel sheets too"
  },
  {
    "objectID": "excel/excel_foundations_01.html#naming",
    "href": "excel/excel_foundations_01.html#naming",
    "title": "Excel foundations 1",
    "section": "Naming",
    "text": "Naming\n\nmost objects in Excel can be named - including cells, tables, and ranges\n\nspecial case - Table[Column] shorthand for columns. This is known as structured referencing\n\n\n\nthose names will work like variable names\nyou can see names in the name box to the left of the formula bar"
  },
  {
    "objectID": "excel/excel_foundations_01.html#adding-names",
    "href": "excel/excel_foundations_01.html#adding-names",
    "title": "Excel foundations 1",
    "section": "Adding names",
    "text": "Adding names\n\nthe easiest way to name a cell is to click in that cell, then edit using the name box (to the left of the formula bar)\nthere are a few name rules\n\ndon’t make names that look like references\ndon’t include spaces\ndon’t rely on case (Excel in general is case insensitive)\nkeep them shortish (less than 255 chars)\navoid numbers at the start of names"
  },
  {
    "objectID": "excel/excel_foundations_01.html#the-name-manager",
    "href": "excel/excel_foundations_01.html#the-name-manager",
    "title": "Excel foundations 1",
    "section": "The name manager",
    "text": "The name manager\n\nyou can review names using the name manager via Ctrl + F3\n\nnote reference, scope, and value\n\nCtrl + J for new lines in name manager\n\nF2 switches between edit and enter mode"
  },
  {
    "objectID": "excel/excel_foundations_01.html#the-go-to-menu",
    "href": "excel/excel_foundations_01.html#the-go-to-menu",
    "title": "Excel foundations 1",
    "section": "The Go To menu",
    "text": "The Go To menu\n\nyou can use names to navigate using the Go To menu via F5\n\ngives you an overview of the names in play\nquick navigation shortcut"
  },
  {
    "objectID": "excel/excel_foundations_01.html#thank-yous",
    "href": "excel/excel_foundations_01.html#thank-yous",
    "title": "Excel foundations 1",
    "section": "Thank yous",
    "text": "Thank yous\nI’m grateful to Jennifer Watt, John Mackintosh, Duncan Sage, David Coigach, Michael Robb, Angela Godfrey, Spela Oberstar, Andrew Christopherson, and other members of the KIND network for their valuable suggestions and corrections to these training materials"
  },
  {
    "objectID": "excel/excel_formatting.html",
    "href": "excel/excel_formatting.html",
    "title": "Excel formatting",
    "section": "",
    "text": "This session is part of our Excel for beginners course. That’s a series of six linked sessions, delivered on Teams, that give an introduction to Excel for people working in health and social care. The sessions are:\nTogether, they aim to help you develop an appropriate set of Excel skills to help your work. This session covers formatting in Excel:"
  },
  {
    "objectID": "excel/excel_formatting.html#previous-attendees-have-said",
    "href": "excel/excel_formatting.html#previous-attendees-have-said",
    "title": "Excel formatting",
    "section": "Previous attendees have said…",
    "text": "Previous attendees have said…\n\n83 previous attendees have left feedback\n98% would recommend this session to a colleague\n96% said that this session was pitched correctly\n\n\n\n\n\n\n\n\n\n\n\nThree random comments from previous attendees\n\n\n\n\nenjoyed the session and it was pitched at the right level.\nLots of great tips and good to be aware of accessibility around excel formatting.\nReally useful training, I love getting to practice along with the demo and the pace was just right."
  },
  {
    "objectID": "excel/excel_formatting.html#session-outline",
    "href": "excel/excel_formatting.html#session-outline",
    "title": "Excel formatting",
    "section": "Session outline",
    "text": "Session outline\n(thanks Deborah Calvin, Brian Orpin, Michael Roarty, Kenneth Mack, Catherine McGrenera, June Livey, Catriona Scott)\n\naccessibility\nformatting cells\nformatting values (aka number formatting)\nformatting vs other things\nshortcuts and tips\nan introduction to conditional formatting"
  },
  {
    "objectID": "excel/excel_formatting.html#accessibility",
    "href": "excel/excel_formatting.html#accessibility",
    "title": "Excel formatting",
    "section": "Accessibility",
    "text": "Accessibility\n\nmany of us will have legal duties to make parts of our services accessible\n\ne.g. The Public Sector Bodies (Websites and Mobile Applications) Accessibility Regulations 2018\n\n\n\nthere are useful standards for making sense of accessibility"
  },
  {
    "objectID": "excel/excel_formatting.html#excel-is-a-mixed-bag-for-accessibility",
    "href": "excel/excel_formatting.html#excel-is-a-mixed-bag-for-accessibility",
    "title": "Excel formatting",
    "section": "Excel is a mixed bag for accessibility",
    "text": "Excel is a mixed bag for accessibility\n\nit is easy to make non-accessible documents in Excel\n\nmerged and split cells\ninconsistent use of tables\npoor column headings, sheet names, etc\nunlabelled charts\nlow-contrast themes\nmeaning conveyed by colour and fonts\n\n\nthere is a built-in accessibility checker in some versions of Excel, which you might find useful"
  },
  {
    "objectID": "excel/excel_formatting.html#formatting-cells",
    "href": "excel/excel_formatting.html#formatting-cells",
    "title": "Excel formatting",
    "section": "Formatting cells",
    "text": "Formatting cells\n\nplease create a new Excel workbook\nyou can format each cell individually via the right click menu and Format cells (or by the Ctrl + 1 shortcut)"
  },
  {
    "objectID": "excel/excel_formatting.html#format-cells-dialogue",
    "href": "excel/excel_formatting.html#format-cells-dialogue",
    "title": "Excel formatting",
    "section": "Format cells dialogue",
    "text": "Format cells dialogue\n\n\nFormat cells dialogue\n\n\nyou can fill cells with custom fonts, alignments, colours, patterns, and gradients (via Fill Effects...)\nyou can add borders to individual cells"
  },
  {
    "objectID": "excel/excel_formatting.html#formatting-many-cells",
    "href": "excel/excel_formatting.html#formatting-many-cells",
    "title": "Excel formatting",
    "section": "Formatting many cells",
    "text": "Formatting many cells\n\nthis is fine for a few cells, but gets boring (and inconsistent) if you have lots of styling to do\nyou can select several cells, and access the Format cells dialogue to style them together\nor you can select a cell with a theme you want to copy, and use the Format Painter tool to spread that format about the place"
  },
  {
    "objectID": "excel/excel_formatting.html#theming",
    "href": "excel/excel_formatting.html#theming",
    "title": "Excel formatting",
    "section": "Theming",
    "text": "Theming\n\nyou can also theme your whole workbook  \n\ntake care, though, as many of these themes are not accessible and often produce hard-to-read results\nand lots of ugly clunky stuff to find (e.g. default font changes)\non balance, better to avoid themes unless you’re certain they’ll be of benefit for you"
  },
  {
    "objectID": "excel/excel_formatting.html#help-i-hate-my-formatting",
    "href": "excel/excel_formatting.html#help-i-hate-my-formatting",
    "title": "Excel formatting",
    "section": "Help! I hate my formatting!",
    "text": "Help! I hate my formatting!\n\n\nClear &gt; Clear Formats (or Alt, H, E, F) \n\nnote this doesn’t clear out all the formatting from themes - especially odd fonts etc\nalso worth having the Paste as Values trick in your back pocket for when things go horribly wrong"
  },
  {
    "objectID": "excel/excel_formatting.html#number-formatting",
    "href": "excel/excel_formatting.html#number-formatting",
    "title": "Excel formatting",
    "section": "Number formatting",
    "text": "Number formatting\n\nnumber formatting is taking a value, and changing its meaning with formatting\nnumber formatting is how dates work (or fail to work) in Excel\ndates are v. important, so we’ll concentrate on them in this part of the session\nyou’ll also encounter number formatting when working with…\n\nmoney\npercentages\ndecimal places\n…"
  },
  {
    "objectID": "excel/excel_formatting.html#date-formatting",
    "href": "excel/excel_formatting.html#date-formatting",
    "title": "Excel formatting",
    "section": "Date formatting",
    "text": "Date formatting\n\nwe’ll take a number, and apply special formatting to it to make it look like a date\n\nso 45483 will become 10/07/2024\n\n\n\nExcel dates are stored as the number of days since Jan 1st 1900\nyou can prove this to yourself by typing 1 into a cell, then formatting it as a date using the number formatting menu: \n\nyou can also format as a date via the Format Cells dialogue (Ctrl + 1)"
  },
  {
    "objectID": "excel/excel_formatting.html#dont-try-and-cheat-with-dates",
    "href": "excel/excel_formatting.html#dont-try-and-cheat-with-dates",
    "title": "Excel formatting",
    "section": "Don’t try and cheat with dates!",
    "text": "Don’t try and cheat with dates!\n\ndate formatting is one of the commonest pain points in Excel\ndates are extremely complicated, and we often want to calculate with them\nthe advice is simple: dates should always be stored as these numbers, and then formatted to look like dates\n\ndon’t try to cheat by writing dates as text\nuse formatting to produce your preferred date format in the Format Cells tools instead"
  },
  {
    "objectID": "excel/excel_formatting.html#formatting-vs-other-things",
    "href": "excel/excel_formatting.html#formatting-vs-other-things",
    "title": "Excel formatting",
    "section": "Formatting vs other things",
    "text": "Formatting vs other things\n(or, keep your sheets clean)\n\nit’s common to see Excel sheets that contain lots of extraneous bits\n\nheaders, copyright info, explanations…\n\n\nideally, all this extra stuff should be kept well away from your data, as it makes it harder to process that data safely\n…and you should definitely be using tables to help with this"
  },
  {
    "objectID": "excel/excel_formatting.html#conditional-formatting",
    "href": "excel/excel_formatting.html#conditional-formatting",
    "title": "Excel formatting",
    "section": "Conditional formatting",
    "text": "Conditional formatting\n\nthis can get complicated, and we’ll revisit more fancy conditional formatting in the intermediate training sessions\nthe big idea is that conditional formatting alters the format as values change"
  },
  {
    "objectID": "excel/excel_formatting.html#progress-bars",
    "href": "excel/excel_formatting.html#progress-bars",
    "title": "Excel formatting",
    "section": "Progress bars",
    "text": "Progress bars\n\nPut a few random numbers in a column \nSelect them, and go to the Conditional Formatting menu \nSelect Data Bars"
  },
  {
    "objectID": "excel/excel_formatting.html#duplicate-values",
    "href": "excel/excel_formatting.html#duplicate-values",
    "title": "Excel formatting",
    "section": "Duplicate values",
    "text": "Duplicate values\n\nNow clear that conditional formatting \n\nAdd a duplicate value to your numbers"
  },
  {
    "objectID": "excel/excel_formatting.html#duplicate-values-1",
    "href": "excel/excel_formatting.html#duplicate-values-1",
    "title": "Excel formatting",
    "section": "Duplicate values",
    "text": "Duplicate values\n\nHighlight duplicate values"
  },
  {
    "objectID": "excel/excel_formatting.html#red-amber-green-reporting",
    "href": "excel/excel_formatting.html#red-amber-green-reporting",
    "title": "Excel formatting",
    "section": "Red-Amber-Green reporting",
    "text": "Red-Amber-Green reporting\n\nRAG reporting with icon sets"
  },
  {
    "objectID": "excel/excel_formatting.html#key-shortcuts",
    "href": "excel/excel_formatting.html#key-shortcuts",
    "title": "Excel formatting",
    "section": "Key shortcuts",
    "text": "Key shortcuts\n\n\nCtrl + 1 for the Format Cells dialogue\n\nAlt, H, E, F to clear formats\n\nCtrl + v, Ctrl, v to paste values only"
  },
  {
    "objectID": "excel/excel_formatting.html#formatting-tips",
    "href": "excel/excel_formatting.html#formatting-tips",
    "title": "Excel formatting",
    "section": "Formatting tips",
    "text": "Formatting tips\n\nAccessibility is much more important than beauty\nUse number formatting for dates, currency, percentages\nConsider using validation to make sure that cells only contain what you expect them to contain\nConsider locking cells to protect formatting when that formatting is really important\nUse conditional formatting sparingly"
  },
  {
    "objectID": "excel/data_tidying_excel.html",
    "href": "excel/data_tidying_excel.html",
    "title": "Data tidying in Excel",
    "section": "",
    "text": "Session materials\n\n\n\n\n\n\nExcel data for this session\nNo feedback found for this session"
  },
  {
    "objectID": "excel/data_tidying_excel.html#welcome",
    "href": "excel/data_tidying_excel.html#welcome",
    "title": "Data tidying in Excel",
    "section": "Welcome",
    "text": "Welcome\n\nthis session is 🌶🌶 - for intermediate Excel users\nmaterials can be found on our training pages: tinyurl.com/kindtrp\n\nyou’ll need Excel, ideally M365 desktop to follow along\nyou’ll also need the sample data"
  },
  {
    "objectID": "excel/data_tidying_excel.html#session-outline",
    "href": "excel/data_tidying_excel.html#session-outline",
    "title": "Data tidying in Excel",
    "section": "Session outline",
    "text": "Session outline\n\nunderstanding tidy data\na practical introduction to making tidy data\ntables\nautofill\ntext to columns\nvalidation, manual reshaping, and PowerQuery demo"
  },
  {
    "objectID": "excel/data_tidying_excel.html#understanding-tidy-data",
    "href": "excel/data_tidying_excel.html#understanding-tidy-data",
    "title": "Data tidying in Excel",
    "section": "Understanding tidy data",
    "text": "Understanding tidy data\n\n\nR4DS Figure 5.1: The following three rules make a dataset tidy: variables are columns, observations are rows, and values are cells, via CC BY-NC-ND 3.0 US\n\n\ntidy data is not specific to Excel (e.g. this session is partly adapted from chapter 5 of R for Data Science)\nif we tidy our data, we’ll be able to compute it\nstandards for tidying data help make for safe and effective analysis"
  },
  {
    "objectID": "excel/data_tidying_excel.html#values",
    "href": "excel/data_tidying_excel.html#values",
    "title": "Data tidying in Excel",
    "section": "Values",
    "text": "Values\n\n\nvalues is the word we use to describe each bit of information in an Excel spreadsheet. Some examples:\na date, like 2024-06-28\n\na number, like 11.2\n\na name, like NHS Grampian\n\na cost, like £12.50\n\n…\neach value should have its own cell"
  },
  {
    "objectID": "excel/data_tidying_excel.html#entering-values",
    "href": "excel/data_tidying_excel.html#entering-values",
    "title": "Data tidying in Excel",
    "section": "Entering values",
    "text": "Entering values\n\nhow would you enter this data: 2018, 2019, 2020, 2021, 2022?\nplease now:\nopen Excel\nstart a new workbook\nadd a column header year in cell A1\n\nthen add each of those five values in the five cells underneath (down to A6)"
  },
  {
    "objectID": "excel/data_tidying_excel.html#more-values",
    "href": "excel/data_tidying_excel.html#more-values",
    "title": "Data tidying in Excel",
    "section": "More values",
    "text": "More values\n\nwe’re going to be using some birthrate data from the NRS for this session. We’ll start by adding some birth rate data\nthis is given as births per 1,000 women in five year age brackets. We’ll start with 25-29 year old mothers\nplease add the header 25-29yrs in cell B1\n\nhere are the values for our five years: 73.4, 71, 66.8, 69.6, 66.7"
  },
  {
    "objectID": "excel/data_tidying_excel.html#tables",
    "href": "excel/data_tidying_excel.html#tables",
    "title": "Data tidying in Excel",
    "section": "Tables",
    "text": "Tables\n\nyou should keep your new data in a table\n\n\nInsert &gt; Table  \n\ntables allow you to sort and filter your data\nthey also act as a useful ‘container’ (or data structure) for your data"
  },
  {
    "objectID": "excel/data_tidying_excel.html#extending-tables",
    "href": "excel/data_tidying_excel.html#extending-tables",
    "title": "Data tidying in Excel",
    "section": "Extending tables",
    "text": "Extending tables\n\n\n30-34yrs\n\n\n\n90.9\n\n\n88.6\n\n\n83.4\n\n\n85.9\n\n\n84.4\n\n\n\n\nplease could you add some new data to your table showing births for another age group\nyou should be able to drag the blue table corner over your new column to extend the table"
  },
  {
    "objectID": "excel/data_tidying_excel.html#autofill",
    "href": "excel/data_tidying_excel.html#autofill",
    "title": "Data tidying in Excel",
    "section": "Autofill",
    "text": "Autofill\n\none last way of adding values: autofill\ndrag again to make a new empty column, and label it difference\n\nin D2 (the first ‘proper’ cell), copy this formula: =C2-B2. This will calculate the difference in birth rates between the two columns\nfinally, click the small green corner of that newly-filled cell to autofill the column"
  },
  {
    "objectID": "excel/data_tidying_excel.html#back-to-tidy-data",
    "href": "excel/data_tidying_excel.html#back-to-tidy-data",
    "title": "Data tidying in Excel",
    "section": "Back to tidy data",
    "text": "Back to tidy data\n\nwe’ve now got some data with:\neach value in a cell\neach variable in a column\nhere, this is a maternal age bracket\neach observation in a row\nhere, this is a year\nwe could work through and extend this data by hand, but we’ll now switch over to some supplied data to save all the typing\n\nerrors are common in manual data-entry\nif you can import data, that’s usually better than re-typing it"
  },
  {
    "objectID": "excel/data_tidying_excel.html#many-values-per-cell",
    "href": "excel/data_tidying_excel.html#many-values-per-cell",
    "title": "Data tidying in Excel",
    "section": "Many values per cell",
    "text": "Many values per cell\n\nWe often find useful data with more than one value per cell\nthis can be helpful for humans  \n\nExcel can’t do anything with this data"
  },
  {
    "objectID": "excel/data_tidying_excel.html#exercise-one-many-values-per-cell",
    "href": "excel/data_tidying_excel.html#exercise-one-many-values-per-cell",
    "title": "Data tidying in Excel",
    "section": "Exercise one: many values per cell",
    "text": "Exercise one: many values per cell\n\nfind the Exercise one sheet in the exercise file\ntry calculating an average for each of the groups\nor, if you’re more confident, try plotting the data"
  },
  {
    "objectID": "excel/data_tidying_excel.html#nothing-works",
    "href": "excel/data_tidying_excel.html#nothing-works",
    "title": "Data tidying in Excel",
    "section": "Nothing works!",
    "text": "Nothing works!"
  },
  {
    "objectID": "excel/data_tidying_excel.html#whats-the-solution",
    "href": "excel/data_tidying_excel.html#whats-the-solution",
    "title": "Data tidying in Excel",
    "section": "What’s the solution?",
    "text": "What’s the solution?\n\nmake this data have one value per cell\n\nwe could remove all the percentages by hand - but that’s going to be very slow\n\nText to Columns gives us a better tool for the job"
  },
  {
    "objectID": "excel/data_tidying_excel.html#text-to-columns",
    "href": "excel/data_tidying_excel.html#text-to-columns",
    "title": "Data tidying in Excel",
    "section": "Text to Columns",
    "text": "Text to Columns\n\nselect a column\nin the Data tab of the ribbon, you should find the Text to Columns tool  \n\nnote that you can keep, or remove, the percentage column. We’ll skip it, to keep things simple"
  },
  {
    "objectID": "excel/data_tidying_excel.html#try-working-with-that-data-again",
    "href": "excel/data_tidying_excel.html#try-working-with-that-data-again",
    "title": "Data tidying in Excel",
    "section": "Try working with that data again",
    "text": "Try working with that data again\n\n\nWe can plot the data now"
  },
  {
    "objectID": "excel/data_tidying_excel.html#exercise-two-transposed-data",
    "href": "excel/data_tidying_excel.html#exercise-two-transposed-data",
    "title": "Data tidying in Excel",
    "section": "Exercise two: transposed data",
    "text": "Exercise two: transposed data\n\nsometimes you’ll find data where the columns and rows have been flipped  \n\nthat’s slow to fix by hand, but luckily you can transpose it, which swaps rows and columns\nselect your data, and copy/paste into a new cell\nthen use the transpose option \n\nyou might need to fix formatting and labels: \n\nthe Clear formats option might help this \n\nif you run into trouble, please note that transposing only works on data that is not in a table"
  },
  {
    "objectID": "excel/data_tidying_excel.html#validation-and-really-messy-data",
    "href": "excel/data_tidying_excel.html#validation-and-really-messy-data",
    "title": "Data tidying in Excel",
    "section": "Validation and really messy data",
    "text": "Validation and really messy data\n\none of the most time-consuming bits of tidying is checking your values\nwe’ll briefly demonstrate the data validation tool  \n\nyou can follow-along from the Demo one (validation) worksheet\nthis allows you to describe what format you think your data should be in, and then highlights anything that doesn’t fit\nwe select the years column\nthen open the data validation tool\nthen set appropriate validation options, so Whole number between 2010 and 2030  \n\nthen select Circle Invalid Data  \n\nwe can now go through and fix anything circled"
  },
  {
    "objectID": "excel/data_tidying_excel.html#reshaped-data",
    "href": "excel/data_tidying_excel.html#reshaped-data",
    "title": "Data tidying in Excel",
    "section": "Reshaped data",
    "text": "Reshaped data\n\nthere are several automated ways of reshaping data that’s not in a tidy format\nwe’ll look at the manual way here, but - as it’s horrible - I’d be keen to encourage you to investigate Power Query or Pivot Tables to reshape if this is a regular part of your working day. PQ takes &lt; 10 seconds, PT not much longer\nyou can follow-along from the Demo two (reshaping) worksheet"
  },
  {
    "objectID": "excel/data_tidying_excel.html#manual-reshape",
    "href": "excel/data_tidying_excel.html#manual-reshape",
    "title": "Data tidying in Excel",
    "section": "Manual reshape",
    "text": "Manual reshape\n\nsort the data by year \n\nthen copy and paste blocks of data, making sure to keep the years aligned \n\nmake sure you then copy the age brackets to label the column \n\nthen delete the spare years columns, and the age brackets"
  },
  {
    "objectID": "bi_training/scope_of_the_possible_with_power_query.html",
    "href": "bi_training/scope_of_the_possible_with_power_query.html",
    "title": "Scope of the possible with PowerQuery",
    "section": "",
    "text": "No feedback found for this session"
  },
  {
    "objectID": "bi_training/scope_of_the_possible_with_power_query.html#session-outline",
    "href": "bi_training/scope_of_the_possible_with_power_query.html#session-outline",
    "title": "Scope of the possible with PowerQuery",
    "section": "Session outline",
    "text": "Session outline\n\ndata wrangling\nwhat’s Power Query, and why this session?\nstrengths and weaknesses\nskill development"
  },
  {
    "objectID": "bi_training/scope_of_the_possible_with_power_query.html#data-wrangling",
    "href": "bi_training/scope_of_the_possible_with_power_query.html#data-wrangling",
    "title": "Scope of the possible with PowerQuery",
    "section": "Data wrangling",
    "text": "Data wrangling\n\ndata wrangling = the work required to get data in the right shape for analysis\noften manual and repetitious\ne.g. some staff spend 90% of their time doing the same Excel work\nthis is almost certainly the result of poor practices, rather than the tech\n(unsolicited advice): we are far too accepting of that drudgery"
  },
  {
    "objectID": "bi_training/scope_of_the_possible_with_power_query.html#the-golden-rule",
    "href": "bi_training/scope_of_the_possible_with_power_query.html#the-golden-rule",
    "title": "Scope of the possible with PowerQuery",
    "section": "The golden rule",
    "text": "The golden rule\nDon’t repeat yourself"
  },
  {
    "objectID": "bi_training/scope_of_the_possible_with_power_query.html#power-query",
    "href": "bi_training/scope_of_the_possible_with_power_query.html#power-query",
    "title": "Scope of the possible with PowerQuery",
    "section": "Power Query",
    "text": "Power Query\n\nspecialist data wrangling toolkit\nallows you to automate data wrangling\navailable in Excel from c.2013\n\nadd-ins from Excel 2010/3\nbuilt-in from Excel 2016\n\n\nalso found in Power BI (and some of the Microsoft SQL products)"
  },
  {
    "objectID": "bi_training/scope_of_the_possible_with_power_query.html#why-this-session",
    "href": "bi_training/scope_of_the_possible_with_power_query.html#why-this-session",
    "title": "Scope of the possible with PowerQuery",
    "section": "Why this session?",
    "text": "Why this session?\n\n(opinion) PQ is criminally under-used\nif you’re repeating yourself in Excel, consider doing it in PQ\nbenefits beyond automation"
  },
  {
    "objectID": "bi_training/scope_of_the_possible_with_power_query.html#workflow",
    "href": "bi_training/scope_of_the_possible_with_power_query.html#workflow",
    "title": "Scope of the possible with PowerQuery",
    "section": "Workflow",
    "text": "Workflow\n\nload data into PQ from many sources:\ntables, spreadsheets, CSV, SQL, …\nprocess that data by building a transformation pipeline\n\nreturn your data to Excel\npotentially, run that same pipeline again when the source data changes"
  },
  {
    "objectID": "bi_training/scope_of_the_possible_with_power_query.html#sample-data",
    "href": "bi_training/scope_of_the_possible_with_power_query.html#sample-data",
    "title": "Scope of the possible with PowerQuery",
    "section": "Sample data",
    "text": "Sample data\n\nsome Excel tables\nGP practice data\nOpen Annual inpatient/daycase data"
  },
  {
    "objectID": "bi_training/scope_of_the_possible_with_power_query.html#demo-workthrough",
    "href": "bi_training/scope_of_the_possible_with_power_query.html#demo-workthrough",
    "title": "Scope of the possible with PowerQuery",
    "section": "Demo workthrough",
    "text": "Demo workthrough\nWe’ll explore Power Query with a basic demonstration during the session. While not all of that will translate neatly to this sort of written format, I’ll include an outline of part of the demo below to give you an overview of what to expect.\nWe have two tables in Excel\n\n\nExcel tables\n\nEach can be loading into Power Query using Get & Transform Data &gt; From Table/Range\n\n\nGet & Transform Data &gt; From Table/Range\n\nLoading data into Power Query is one-way, and creates a copy of the Excel table\n\n\nCopy of Excel data in Power Query\n\nThat copy can be modified - in this case, by renaming the column\n\n\nRenamed column\n\nWhen suitably modified, the data can be passed back to Excel by clicking Close & Load\n\n\nClose & Load button\n\nThat will create a new table in a new worksheet that comes from Power Query (hence the green colour palette):\n\n\nPreview of PQ data in Excel"
  },
  {
    "objectID": "bi_training/scope_of_the_possible_with_power_query.html#merging-data",
    "href": "bi_training/scope_of_the_possible_with_power_query.html#merging-data",
    "title": "Scope of the possible with PowerQuery",
    "section": "Merging data",
    "text": "Merging data\nWe can also create new datasets. Start with the two queries containing our pair of Excel tables:\n\n\nTwo queries in Power Query\n\nSelect Merge Queries as New\n\n\nMerge Queries as New\n\nThen select the two datasets, and the corresponding name columns. Power Query will merge these - so find matching names from dataset_1 in dataset_2, and where it finds a match bringing that data together.\n\n\nSelect columns to merge on\n\nThat returns a nested table that can be expanded (click the two arrow button):\n\n\nNested table\n\nSelect the columns you’d like to retain:\n\n\nSelect columns to expand\n\nAnd see the merged data:\n\n\nMerged data preview\n\nOptionally, you can also replace those null values to something more friendly:\n\n\nReplacing values in the data\n\nThere are lots of options for this, but null is a nice simple one: just replace the word:\n\n\nReplacing null example"
  },
  {
    "objectID": "bi_training/scope_of_the_possible_with_power_query.html#strengths",
    "href": "bi_training/scope_of_the_possible_with_power_query.html#strengths",
    "title": "Scope of the possible with PowerQuery",
    "section": "Strengths",
    "text": "Strengths\n\nflexible: do almost anything to your data\nreproducible: do the same operations over many files\npowerful: has advanced tools for reshaping data"
  },
  {
    "objectID": "bi_training/scope_of_the_possible_with_power_query.html#weaknesses",
    "href": "bi_training/scope_of_the_possible_with_power_query.html#weaknesses",
    "title": "Scope of the possible with PowerQuery",
    "section": "Weaknesses",
    "text": "Weaknesses\n\nharder to learn than Excel\nrequires some thought and set-up\npoor documentation\nbafflingly small user-base"
  },
  {
    "objectID": "bi_training/power_query_a_practical_introduction.html",
    "href": "bi_training/power_query_a_practical_introduction.html",
    "title": "PowerQuery - a practical introduction",
    "section": "",
    "text": "Session materials\n\n\n\n\n\n\nall materials \nslides  html /  pdf"
  },
  {
    "objectID": "bi_training/power_query_a_practical_introduction.html#previous-attendees-have-said",
    "href": "bi_training/power_query_a_practical_introduction.html#previous-attendees-have-said",
    "title": "PowerQuery - a practical introduction",
    "section": "Previous attendees have said…",
    "text": "Previous attendees have said…\n\n11 previous attendees have left feedback\n100% would recommend this session to a colleague\n82% said that this session was pitched correctly\n\n\n\n\n\n\n\n\n\n\n\nThree random comments from previous attendees\n\n\n\n\nMade PowerQuery seem possible to use\nReally easy to follow and understand!\nissues in loading data and due to speed of which trainer was moving at could not follow along. transpired i needed an addon to excel and had to leave the session"
  },
  {
    "objectID": "bi_training/power_query_a_practical_introduction.html#welcome",
    "href": "bi_training/power_query_a_practical_introduction.html#welcome",
    "title": "PowerQuery - a practical introduction",
    "section": "Welcome",
    "text": "Welcome\n\n🌶 this session is a beginner-level introduction to PowerQuery\nyou’ll either Excel desktop (&gt;2007) or Power BI desktop\nyou’ll also need to have basic competency in Excel or Power BI\nthis session is based on our Power BI for Beginners course\nbut PowerQuery isn’t specific to Power BI - it’s brilliant for Excel too"
  },
  {
    "objectID": "bi_training/power_query_a_practical_introduction.html#session-outline",
    "href": "bi_training/power_query_a_practical_introduction.html#session-outline",
    "title": "PowerQuery - a practical introduction",
    "section": "Session outline",
    "text": "Session outline\n\nwhat is PowerQuery, and why might you use it?\ngetting data into PowerQuery\nbasic data wrangling\njoins (merges)\npivots"
  },
  {
    "objectID": "bi_training/power_query_a_practical_introduction.html#what-is-powerquery",
    "href": "bi_training/power_query_a_practical_introduction.html#what-is-powerquery",
    "title": "PowerQuery - a practical introduction",
    "section": "What is PowerQuery?",
    "text": "What is PowerQuery?\n\nMicrosoft call it a “data transformation and data preparation engine”\n\nit’s been around since 2010, initially in Excel, and then in both Excel and Power BI\nuses code (M Formula language) but has GUI tools for most tasks"
  },
  {
    "objectID": "bi_training/power_query_a_practical_introduction.html#how-i-think-of-powerquery",
    "href": "bi_training/power_query_a_practical_introduction.html#how-i-think-of-powerquery",
    "title": "PowerQuery - a practical introduction",
    "section": "How I think of PowerQuery",
    "text": "How I think of PowerQuery\n\nthe right way to load any real data into Excel"
  },
  {
    "objectID": "bi_training/power_query_a_practical_introduction.html#why-might-you-use-it",
    "href": "bi_training/power_query_a_practical_introduction.html#why-might-you-use-it",
    "title": "PowerQuery - a practical introduction",
    "section": "Why might you use it?",
    "text": "Why might you use it?\n\npowerful\neasy, to start with at least…\nallows you to standardise data loading from different sources\nallows you to repeat data loading"
  },
  {
    "objectID": "bi_training/power_query_a_practical_introduction.html#getting-data-into-powerquery",
    "href": "bi_training/power_query_a_practical_introduction.html#getting-data-into-powerquery",
    "title": "PowerQuery - a practical introduction",
    "section": "Getting data into PowerQuery",
    "text": "Getting data into PowerQuery\n\n\nExcel\nPower BI\n\n\n\n\nOpen Excel and create a new, blank, workbook\n\nData &gt; Get & Transform Data  \n\nPick From Web and supply the following URL - https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-07-25/scurvy.csv\n\nFrom the preview, select Transform data to open PowerQuery\n\n\n\n\nOpen Power BI and start a new report\nSelect Get data &gt; From Web button in the ribbon \n\nSupply the following URL - https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-07-25/scurvy.csv \n\nFrom the preview, select Transform data to open PowerQuery  \n\nIf you’ve already got some data in your report that you’d like to transform, use Tranform data in the ribbon to open PowerQuery:  \n\n\n\n\n\n\nthis is historical data about scurvy testing from the medicaldata r package"
  },
  {
    "objectID": "bi_training/power_query_a_practical_introduction.html#preview-your-data",
    "href": "bi_training/power_query_a_practical_introduction.html#preview-your-data",
    "title": "PowerQuery - a practical introduction",
    "section": "Preview your Data",
    "text": "Preview your Data\n (make sure to click Transform data)"
  },
  {
    "objectID": "bi_training/power_query_a_practical_introduction.html#first-view-of-powerquery",
    "href": "bi_training/power_query_a_practical_introduction.html#first-view-of-powerquery",
    "title": "PowerQuery - a practical introduction",
    "section": "First view of PowerQuery",
    "text": "First view of PowerQuery\n\n\nFirst view of PowerQuery\n\n\nQueries (= datasets) on the left\nribbon menu at the top\nQuery settings (= the changes you’ll make to your data) on the right\nExcel-ish data preview in the middle"
  },
  {
    "objectID": "bi_training/power_query_a_practical_introduction.html#basic-data-wrangling",
    "href": "bi_training/power_query_a_practical_introduction.html#basic-data-wrangling",
    "title": "PowerQuery - a practical introduction",
    "section": "Basic data wrangling",
    "text": "Basic data wrangling\n\nright click the study_id column and select Remove\n\nthe column will disappear\nbut you’ll also gain a step in your Applied Steps field \n\n\n\nyou can edit this step\n\nif you’re code-confident, you can edit the formula to read = Table.RemoveColumns(#\"Changed Type\",{\"study_id\", \"treatment\"}) to also remove the treatment column\nand you can remove the step using the X next to the step name \n\n\n\nyou should also try renaming and reordering your columns in the same way\nonce you’ve had a play, please remove the steps until you’re left with the data you started with (so delete back to “Changed Type”)"
  },
  {
    "objectID": "bi_training/power_query_a_practical_introduction.html#replacing-values",
    "href": "bi_training/power_query_a_practical_introduction.html#replacing-values",
    "title": "PowerQuery - a practical introduction",
    "section": "Replacing values",
    "text": "Replacing values\n\nwe can also work with individual values\nour values are a number, then an underscore, then a word\nwe can Split column at the underscore\nwe could also replace the odd underscores in the treatment column"
  },
  {
    "objectID": "bi_training/power_query_a_practical_introduction.html#reshaping-data",
    "href": "bi_training/power_query_a_practical_introduction.html#reshaping-data",
    "title": "PowerQuery - a practical introduction",
    "section": "Reshaping data",
    "text": "Reshaping data\n\nwe could go column by column here splitting, but an easier approach would be to re-shape the data\nselect the first three columns, and select Unpivot Other Columns \n\nthen split, change type, and generally tidy up"
  },
  {
    "objectID": "bi_training/power_query_a_practical_introduction.html#add-columns",
    "href": "bi_training/power_query_a_practical_introduction.html#add-columns",
    "title": "PowerQuery - a practical introduction",
    "section": "Add columns",
    "text": "Add columns\nOur treatment and dosing columns are annoying. Let’s make a new, joined, column for them:\n\nselect Custom Column\n\nyou can click the gearwheel next to the step if you’d like to go back and tweak"
  },
  {
    "objectID": "bi_training/power_query_a_practical_introduction.html#close-and-load-close-and-apply-sends-your-data-back-to-excelpower-bi",
    "href": "bi_training/power_query_a_practical_introduction.html#close-and-load-close-and-apply-sends-your-data-back-to-excelpower-bi",
    "title": "PowerQuery - a practical introduction",
    "section": "Close and load / Close and Apply sends your data back to Excel/Power BI",
    "text": "Close and load / Close and Apply sends your data back to Excel/Power BI"
  },
  {
    "objectID": "bi_training/power_query_a_practical_introduction.html#getting-more-fancy-a-bigger-dataset",
    "href": "bi_training/power_query_a_practical_introduction.html#getting-more-fancy-a-bigger-dataset",
    "title": "PowerQuery - a practical introduction",
    "section": "Getting more fancy: a bigger dataset",
    "text": "Getting more fancy: a bigger dataset\n\nplease load the Health and Care Experience survey results from 2023-4 \n\nor alternative local version\n\nplease load both the proper datasets (and ignore the background)"
  },
  {
    "objectID": "bi_training/power_query_a_practical_introduction.html#a-challenge",
    "href": "bi_training/power_query_a_practical_introduction.html#a-challenge",
    "title": "PowerQuery - a practical introduction",
    "section": "A challenge",
    "text": "A challenge\nCan you find the number of responses to each question for your local NHS board? You should be able to re-work this data to give something like: \nSome hints\n\nfiltering works like Excel, but is destructive\nunpivoting, doing something to all the rows, then re-pivoting is a great way to work across lots of columns\nyou can join structurally similar datasets using Append Queries as New\n\nyou can deduplicate entire datasets by selecting all the columns and using Remove Rows &gt; Remove Duplicates"
  },
  {
    "objectID": "bi_training/power_automate_for_health_care.html",
    "href": "bi_training/power_automate_for_health_care.html",
    "title": "Scope of the possible with Power Automate",
    "section": "",
    "text": "8 previous attendees have left feedback\n100% would recommend this session to a colleague\n88% said that this session was pitched correctly\n\n\n\n\n\n\n\n\n\n\n\nThree random comments from previous attendees\n\n\n\n\nExcellent demo and training materials to use yourself later to learn Power Automate\nGreat intro. It’s given me enough to have the confidence to play about! Before I just didn’t know where to start\nGreat starting point!"
  },
  {
    "objectID": "bi_training/power_automate_for_health_care.html#previous-attendees-have-said",
    "href": "bi_training/power_automate_for_health_care.html#previous-attendees-have-said",
    "title": "Scope of the possible with Power Automate",
    "section": "",
    "text": "8 previous attendees have left feedback\n100% would recommend this session to a colleague\n88% said that this session was pitched correctly\n\n\n\n\n\n\n\n\n\n\n\nThree random comments from previous attendees\n\n\n\n\nExcellent demo and training materials to use yourself later to learn Power Automate\nGreat intro. It’s given me enough to have the confidence to play about! Before I just didn’t know where to start\nGreat starting point!"
  },
  {
    "objectID": "bi_training/power_automate_for_health_care.html#introduction",
    "href": "bi_training/power_automate_for_health_care.html#introduction",
    "title": "Scope of the possible with Power Automate",
    "section": "Introduction",
    "text": "Introduction\n\nthis session is 🌶 - for beginners\nit’s designed as a demonstration session to show what Power Automate might be used to achieve, and how it works"
  },
  {
    "objectID": "bi_training/power_automate_for_health_care.html#session-outline",
    "href": "bi_training/power_automate_for_health_care.html#session-outline",
    "title": "Scope of the possible with Power Automate",
    "section": "Session outline",
    "text": "Session outline\n\na warning\nan introduction\nscope of the possible\nthree example tasks\nfree play"
  },
  {
    "objectID": "bi_training/power_automate_for_health_care.html#a-word-of-warning",
    "href": "bi_training/power_automate_for_health_care.html#a-word-of-warning",
    "title": "Scope of the possible with Power Automate",
    "section": "A word of warning",
    "text": "A word of warning\n\n\n\n\n\n\nWarning\n\n\n\n\n\nDo not use Power Automate for anything unless you’re absolutely sure that your organisational policies permit it\n\n\n\n\nmany boards and orgs have serious information governance and information security objections to Power Automate\n\nautomation tools are an excellent way to break your data\nthey’re also an excellent way to compromise its integrity/security\nespecially true if you’re thinking about automating processes with sensitive information\nif in any doubt, speak to your IG/Caldicott/information security colleagues before setting to work"
  },
  {
    "objectID": "bi_training/power_automate_for_health_care.html#quick-introduction-to-power-automate",
    "href": "bi_training/power_automate_for_health_care.html#quick-introduction-to-power-automate",
    "title": "Scope of the possible with Power Automate",
    "section": "Quick introduction to Power Automate",
    "text": "Quick introduction to Power Automate\n\n\nPower Automate is a set of low-code automation tools\nallows users to automate tasks\nlots of options\n\n\nweb and desktop versions\n\nseveral different subscription levels\n\nhundreds of add-ons"
  },
  {
    "objectID": "bi_training/power_automate_for_health_care.html#scope-of-the-possible",
    "href": "bi_training/power_automate_for_health_care.html#scope-of-the-possible",
    "title": "Scope of the possible with Power Automate",
    "section": "Scope of the possible",
    "text": "Scope of the possible\n\nPower Automate is an extremely useful tool for H&SC\nbut you should be aware of some complicating factors for people like us:\n\n\nmassive and confusing range of different templates and use-cases, often with a business-focus\na thick layer of promotional AI talk over everything at present (late 2024)\nunexpected cost/IG barriers to using parts of the platform\nglitchy, and often requiring more coding skills than you might expect\ngenerally shockingly poor documentation"
  },
  {
    "objectID": "bi_training/power_automate_for_health_care.html#this-session-honest-application-focused-introduction",
    "href": "bi_training/power_automate_for_health_care.html#this-session-honest-application-focused-introduction",
    "title": "Scope of the possible with Power Automate",
    "section": "This session = honest, application-focused, introduction",
    "text": "This session = honest, application-focused, introduction\n\nwe’ll build three example flows that will:\n\ntake an Excel workbook, extract some parts of it, and save as a new Excel file\nturn a response to Microsoft Forms into a Teams post\nturn an Excel workbook into a simple mailing list"
  },
  {
    "objectID": "bi_training/power_automate_for_health_care.html#subset-an-excel-file",
    "href": "bi_training/power_automate_for_health_care.html#subset-an-excel-file",
    "title": "Scope of the possible with Power Automate",
    "section": "Subset an Excel file",
    "text": "Subset an Excel file\n\nyou’ll need a sample data file - I used this open data about council assets from Falkirk\n\nI converted the data to a table, then saved the workbook to OneDrive\n\nNew flow &gt; Instant cloud flow \n\n\nManually trigger a flow \n\nAdd a step \n\n\nExcel online &gt; List rows present in a table and populate \n\nthere are several ways we could subset the data \n\nwe’ll demonstrate by taking the first 20 rows \n\n\nCreate csv table  \n\n\nCreate file"
  },
  {
    "objectID": "bi_training/power_automate_for_health_care.html#microsoft-forms-to-teams",
    "href": "bi_training/power_automate_for_health_care.html#microsoft-forms-to-teams",
    "title": "Scope of the possible with Power Automate",
    "section": "Microsoft Forms to Teams",
    "text": "Microsoft Forms to Teams\n\nhere’s an overview\n\ncreate a simple form (ours is at https://forms.office.com/e/8Zds2aTS5c)\n\ngrab the form id \n\ncreate an Build an automated cloud flow - \n\nEnter your form ID (veDvEDCgykuAnLXmdF5Jmn79kl25VpJIq3eErXXCYKBUMU9LWURaUUhUT0xYOUtNQVY1UFpURTQ1Vi4u)\n\nGet response details \n\nPopulate with the form and step details \n\n\nPost message in a chat or channel"
  },
  {
    "objectID": "bi_training/power_automate_for_health_care.html#excel-workbook-to-mailing-list",
    "href": "bi_training/power_automate_for_health_care.html#excel-workbook-to-mailing-list",
    "title": "Scope of the possible with Power Automate",
    "section": "Excel workbook to mailing list",
    "text": "Excel workbook to mailing list\n\nhere’s an overview \n\nstart with a simple .xlsx. Again, that will need to be on Sharepoint or Onedrive \n\n\nList rows present in a table \n\n\nApply to each \n\n\nSend an email notification (V3) nested inside the Apply to each\n\nadd the expression items('For_each')?['email'] \n\nenjoy the result"
  },
  {
    "objectID": "bi_training/measures_in_power_bi.html",
    "href": "bi_training/measures_in_power_bi.html",
    "title": "Measures in Power BI",
    "section": "",
    "text": "3 previous attendees have left feedback\n100% would recommend this session to a colleague\n67% said that this session was pitched correctly\n\n\n\n\n\n\n\n\n\n\n\nThree random comments from previous attendees\n\n\n\n\nI liked the link to the excel formula context, it helps my confidence to know I am building on my knowledge rather than learning something totally new\ngood intro to measures - possibly could have had some more complex examples for an intermediate course\nGreat session and good explanation of keep filters and when to use, thank you."
  },
  {
    "objectID": "bi_training/measures_in_power_bi.html#previous-attendees-have-said",
    "href": "bi_training/measures_in_power_bi.html#previous-attendees-have-said",
    "title": "Measures in Power BI",
    "section": "",
    "text": "3 previous attendees have left feedback\n100% would recommend this session to a colleague\n67% said that this session was pitched correctly\n\n\n\n\n\n\n\n\n\n\n\nThree random comments from previous attendees\n\n\n\n\nI liked the link to the excel formula context, it helps my confidence to know I am building on my knowledge rather than learning something totally new\ngood intro to measures - possibly could have had some more complex examples for an intermediate course\nGreat session and good explanation of keep filters and when to use, thank you."
  },
  {
    "objectID": "bi_training/measures_in_power_bi.html#welcome",
    "href": "bi_training/measures_in_power_bi.html#welcome",
    "title": "Measures in Power BI",
    "section": "Welcome",
    "text": "Welcome\n\nthis session is for 🌶🌶 intermediate users\nthis session can be followed practically - you’ll need Power BI desktop (plus the sample file) to do that"
  },
  {
    "objectID": "bi_training/measures_in_power_bi.html#session-outline",
    "href": "bi_training/measures_in_power_bi.html#session-outline",
    "title": "Measures in Power BI",
    "section": "Session outline",
    "text": "Session outline\n\nDAX\nmeasures\n\nExcel measures\nmeasures vs calculated columns\n\n\nbasic measures for data summary\nmore complex measures for re-filtering"
  },
  {
    "objectID": "bi_training/measures_in_power_bi.html#dax",
    "href": "bi_training/measures_in_power_bi.html#dax",
    "title": "Measures in Power BI",
    "section": "DAX",
    "text": "DAX\n\n\ndata analysis expressions\nbased on Excel formula language\nbeen in use for about 15 years, initially in Excel"
  },
  {
    "objectID": "bi_training/measures_in_power_bi.html#lets-try-one-in-excel",
    "href": "bi_training/measures_in_power_bi.html#lets-try-one-in-excel",
    "title": "Measures in Power BI",
    "section": "Let’s try one in Excel",
    "text": "Let’s try one in Excel\n\nsample Excel\nPivotTable plus data model needed\nMeasures live in tables\nwritten in DAX: =CONCATENATEX(VALUES(Table134[Fluid spilled on patients]), Table134[Fluid spilled on patients], \",\")"
  },
  {
    "objectID": "bi_training/measures_in_power_bi.html#into-power-bi",
    "href": "bi_training/measures_in_power_bi.html#into-power-bi",
    "title": "Measures in Power BI",
    "section": "Into Power BI",
    "text": "Into Power BI\n\nsample file\nconfusingly, we find DAX in two different places…"
  },
  {
    "objectID": "bi_training/measures_in_power_bi.html#calculated-columns",
    "href": "bi_training/measures_in_power_bi.html#calculated-columns",
    "title": "Measures in Power BI",
    "section": "Calculated columns",
    "text": "Calculated columns\n\nLet’s calculate an average\naver_att = AVERAGE(ae_activity[att])"
  },
  {
    "objectID": "bi_training/measures_in_power_bi.html#measures",
    "href": "bi_training/measures_in_power_bi.html#measures",
    "title": "Measures in Power BI",
    "section": "Measures",
    "text": "Measures\n\ndynamically recalculate depending on filter context\n\nso need to live on a card\n\n\nso same DAX = different result\naver_att_meas = AVERAGE(ae_activity[att])"
  },
  {
    "objectID": "bi_training/measures_in_power_bi.html#basic-functions-for-measures",
    "href": "bi_training/measures_in_power_bi.html#basic-functions-for-measures",
    "title": "Measures in Power BI",
    "section": "Basic functions for measures",
    "text": "Basic functions for measures\n\n\nSUM, AVERAGE, COUNT, MAX\n\nmeasure-in-measure\n\n& and ROUND"
  },
  {
    "objectID": "bi_training/measures_in_power_bi.html#row-wise-operations",
    "href": "bi_training/measures_in_power_bi.html#row-wise-operations",
    "title": "Measures in Power BI",
    "section": "Row-wise operations",
    "text": "Row-wise operations\n\nSUMX\n\nCONCATENATEX (from Excel example)"
  },
  {
    "objectID": "bi_training/measures_in_power_bi.html#more-interesting-measures-filter",
    "href": "bi_training/measures_in_power_bi.html#more-interesting-measures-filter",
    "title": "Measures in Power BI",
    "section": "More interesting measures: filter",
    "text": "More interesting measures: filter\n\ncount_12 = COUNTROWS(FILTER(ae_activity, ae_activity[over12] &gt; 20))\n\nFILTER allows us to look at how parts of our data change"
  },
  {
    "objectID": "bi_training/measures_in_power_bi.html#more-interesting-measures-calculate",
    "href": "bi_training/measures_in_power_bi.html#more-interesting-measures-calculate",
    "title": "Measures in Power BI",
    "section": "More interesting measures: calculate",
    "text": "More interesting measures: calculate\n\ncount_12_calc = CALCULATE(COUNT([att]), ae_activity[over12] &gt; 20)\n\nCALCULATE changes the default filter context"
  },
  {
    "objectID": "bi_training/measures_in_power_bi.html#more-interesting-measures-keepfilters",
    "href": "bi_training/measures_in_power_bi.html#more-interesting-measures-keepfilters",
    "title": "Measures in Power BI",
    "section": "More interesting measures: keepfilters",
    "text": "More interesting measures: keepfilters\n\ncount_12_calc_kf = CALCULATE(COUNT([att]), KEEPFILTERS(ae_activity[over12] &gt; 20))\nKEEPFILTERS pokes the default filter context through into a CALCULATE\nDefinitive Guide to DAX\nSQLBI CALCULATE\nSQLBI KEEPFILTERS"
  },
  {
    "objectID": "bi_training/BI_intermediate_session_04.html",
    "href": "bi_training/BI_intermediate_session_04.html",
    "title": "Intermediate Power BI Session 4",
    "section": "",
    "text": "This is part of our intermediate-level Power BI desktop course. The course structure is as follows:\nNo feedback found for this session"
  },
  {
    "objectID": "bi_training/BI_intermediate_session_04.html#session-aim",
    "href": "bi_training/BI_intermediate_session_04.html#session-aim",
    "title": "Intermediate Power BI Session 4",
    "section": "Session aim",
    "text": "Session aim\n\nto introduce the PowerQuery M language"
  },
  {
    "objectID": "bi_training/BI_intermediate_session_04.html#where-does-this-fit-in",
    "href": "bi_training/BI_intermediate_session_04.html#where-does-this-fit-in",
    "title": "Intermediate Power BI Session 4",
    "section": "Where does this fit in?",
    "text": "Where does this fit in?\n\nsession 1: a simple build-a-dashboard session as a warmup, reminder about core Power BI techniques, and sharing some suggestions for good workflow practices\nsession 2: DAX language foundations, including FILTER and CALCULATE\nsession 3: core PowerQuery functions to manage sources, join data sets, pivot, and tidy values\nsession 4: PowerQuery M language foundations, including a basic overview of syntax, a core function toolkit, advanced mode, and reproducibility\nsession 5: a second, more ambitious, build-a-dashboard session to put all that PowerQuery and DAX knowledge into practice"
  },
  {
    "objectID": "bi_training/BI_intermediate_session_04.html#session-outline",
    "href": "bi_training/BI_intermediate_session_04.html#session-outline",
    "title": "Intermediate Power BI Session 4",
    "section": "Session outline",
    "text": "Session outline\n\nwhat’s PQM?\nsetting values and creating lists\nthe Advanced Editor\nbasic syntax: let/in\n\ndefining and using functions"
  },
  {
    "objectID": "bi_training/BI_intermediate_session_04.html#whats-pqm",
    "href": "bi_training/BI_intermediate_session_04.html#whats-pqm",
    "title": "Intermediate Power BI Session 4",
    "section": "What’s PQM?",
    "text": "What’s PQM?\n\nformula language used in Power Query\nsimilar to Excel formulas"
  },
  {
    "objectID": "bi_training/BI_intermediate_session_04.html#getting-started",
    "href": "bi_training/BI_intermediate_session_04.html#getting-started",
    "title": "Intermediate Power BI Session 4",
    "section": "Getting started",
    "text": "Getting started\n\nopen Power BI\ncreate a blank report\nthen click Tranform data to open PQ\nadd a blank query"
  },
  {
    "objectID": "bi_training/BI_intermediate_session_04.html#add-a-value-to-that-query",
    "href": "bi_training/BI_intermediate_session_04.html#add-a-value-to-that-query",
    "title": "Intermediate Power BI Session 4",
    "section": "Add a value to that query",
    "text": "Add a value to that query\n\nyou can edit PQM in the formula bar\nlet’s start with the traditional expression: Hello world!\n\nyou don’t need quotes\n\n\ncall this a primitive value\n\n\n\n\n\n\n\n\nTask\n\n\n\n\n\n\nadd \"Hello world\" to the formula bar"
  },
  {
    "objectID": "bi_training/BI_intermediate_session_04.html#lists",
    "href": "bi_training/BI_intermediate_session_04.html#lists",
    "title": "Intermediate Power BI Session 4",
    "section": "Lists",
    "text": "Lists\n\nan especially-useful kind of value: the list\n\n\n\n\n\n\n\n\nNote\n\n\n\n\n\n\nmake a new blank query\nin the formula bar, after the equals-sign, type a {, then some comma-separated numbers, then a closing }"
  },
  {
    "objectID": "bi_training/BI_intermediate_session_04.html#functions",
    "href": "bi_training/BI_intermediate_session_04.html#functions",
    "title": "Intermediate Power BI Session 4",
    "section": "Functions",
    "text": "Functions\n\nPQM has 700+ functions\nsome can be used directly on values\n\n\n\n\n\n\n\nTask\n\n\n\n\n\n\nupdate your hello world to = Text.Lower(\"Hello world\") in the formula bar"
  },
  {
    "objectID": "bi_training/BI_intermediate_session_04.html#warning",
    "href": "bi_training/BI_intermediate_session_04.html#warning",
    "title": "Intermediate Power BI Session 4",
    "section": "Warning",
    "text": "Warning\n\nPQM is case-sensitive, unlike basically all the other Microsoft formula languages:"
  },
  {
    "objectID": "bi_training/BI_intermediate_session_04.html#query-steps",
    "href": "bi_training/BI_intermediate_session_04.html#query-steps",
    "title": "Intermediate Power BI Session 4",
    "section": "Query steps",
    "text": "Query steps\n\nyou can add query steps using the Add Step (\\(fx\\)) button: \n\n\n\n\n\n\n\n\nTask\n\n\n\n\n\n\nAdd a step, and insert the formula = Text.Proper(Source)  \n\n\n\n\n\n\n\nSource in the formula is the name of your first step\nThat should create a new step named Custom1"
  },
  {
    "objectID": "bi_training/BI_intermediate_session_04.html#advanced-editor",
    "href": "bi_training/BI_intermediate_session_04.html#advanced-editor",
    "title": "Intermediate Power BI Session 4",
    "section": "Advanced editor",
    "text": "Advanced editor\n\nyou can do more interesting work in PQM using the Advanced Editor  \n\n\n\n\n\n\n\n\nTask\n\n\n\n\n\n\nplease open the Advanced Editor now"
  },
  {
    "objectID": "bi_training/BI_intermediate_session_04.html#advanced-editor-1",
    "href": "bi_training/BI_intermediate_session_04.html#advanced-editor-1",
    "title": "Intermediate Power BI Session 4",
    "section": "Advanced editor",
    "text": "Advanced editor\n\nthe advanced editor should contain your two query steps:\n\nlet\n    Source = Text.Lower(\"Hello world!\"),\n    Custom1 = Text.Proper(Source)\nin\n    Custom1"
  },
  {
    "objectID": "bi_training/BI_intermediate_session_04.html#letin",
    "href": "bi_training/BI_intermediate_session_04.html#letin",
    "title": "Intermediate Power BI Session 4",
    "section": "\nlet/in\n",
    "text": "let/in\n\n\nlet statements are the basic structural building-block of PQM\nthe let part contains a series of steps\nthe in part returns the result of those steps"
  },
  {
    "objectID": "bi_training/BI_intermediate_session_04.html#let",
    "href": "bi_training/BI_intermediate_session_04.html#let",
    "title": "Intermediate Power BI Session 4",
    "section": "let",
    "text": "let\n\neach line of the let has a step name, and an expression:\n\nname = expression\n\n\neach expression (apart from the source) refers to a previous step\nin our example, we make a step named Source, which contains our lowercase \"hello world\"\n\nwe then pass it to a second step named Custom1 where we transform it into Proper Case\n\n\n\n\n\n\n\nTask\n\n\n\n\n\n\nrename the second step to proper_case"
  },
  {
    "objectID": "bi_training/BI_intermediate_session_04.html#in",
    "href": "bi_training/BI_intermediate_session_04.html#in",
    "title": "Intermediate Power BI Session 4",
    "section": "in",
    "text": "in\n\nthe in section is where we return a result from our query\nyou’ll need to match the name in in to the correct stage of your query - almost always the last value\n\n\n\n\n\n\n\nTask\n\n\n\n\n\n\nupdate line 5 (after the in) to use your new name for Custom1\n\nthen select Done to return to Power Query - you should see your new step name in the Applied Steps menu"
  },
  {
    "objectID": "bi_training/BI_intermediate_session_04.html#query-steps-1",
    "href": "bi_training/BI_intermediate_session_04.html#query-steps-1",
    "title": "Intermediate Power BI Session 4",
    "section": "Query steps",
    "text": "Query steps\n\nwe can use the Advanced Editor to change the sequence of query steps\n\n\n\n\n\n\n\nTask\n\n\n\n\n\n\nopen the advanced editor\n\nbreak down your source step into two steps:\n\na Source step, where we input the “Hello world” primitive value\na lower_case step, where we use the Text.Lower function on Source\n\n\n\nmake sure your lines end with , (except the final line of let and in)\nmake sure your names link up correctly, and then apply the changes.\nyou should see the change in your Applied Steps pane"
  },
  {
    "objectID": "bi_training/BI_intermediate_session_04.html#query-steps-2",
    "href": "bi_training/BI_intermediate_session_04.html#query-steps-2",
    "title": "Intermediate Power BI Session 4",
    "section": "Query steps",
    "text": "Query steps\n\nyour query should now read: \n\nthose names should be reflected in the query steps view:"
  },
  {
    "objectID": "bi_training/BI_intermediate_session_04.html#nested-let",
    "href": "bi_training/BI_intermediate_session_04.html#nested-let",
    "title": "Intermediate Power BI Session 4",
    "section": "Nested let",
    "text": "Nested let\n\nwe could re-arrange our expression to use nested lets\nthis is helpful when things grow more complex\n\nlet \n    lower_case = \n        let \n            Source = \"Hello world!\"\n        in \n            Text.Lower(Source), \n            proper_case = Text.Proper(lower_case)\nin \n    proper_case"
  },
  {
    "objectID": "bi_training/BI_intermediate_session_04.html#defining-functions",
    "href": "bi_training/BI_intermediate_session_04.html#defining-functions",
    "title": "Intermediate Power BI Session 4",
    "section": "Defining functions",
    "text": "Defining functions\n\nwe can define functions of our own\nlet’s make one now that prints “Hello world!” for us\n\n\n\n\n\n\n\nTask\n\n\n\n\n\n\nmake a new blank query and open it in the advanced editor populate with the code below\n\n\n\n\nlet\n    hw = () =&gt; \"Hello world!\"\nin\n    hw\n\n\nhw here is an ordinary step name\n\n() will contain our parameters\n\n=&gt; defines this as containing a function"
  },
  {
    "objectID": "bi_training/BI_intermediate_session_04.html#naming-functions",
    "href": "bi_training/BI_intermediate_session_04.html#naming-functions",
    "title": "Intermediate Power BI Session 4",
    "section": "Naming functions",
    "text": "Naming functions\n\nthat creates a new function\nnote that the function name will correspond with our query name (it’s not the step name): \n\nwe could use that function as-is: \n\nbut properly-named functions are much more useful: do that by renaming the query as a whole to hw"
  },
  {
    "objectID": "bi_training/BI_intermediate_session_04.html#using-functions",
    "href": "bi_training/BI_intermediate_session_04.html#using-functions",
    "title": "Intermediate Power BI Session 4",
    "section": "Using functions",
    "text": "Using functions\n\nfunctions defined in this way are global: we can use them in any other query\n\nso hw() will work in Query1 to generate our Hello world! text: Source = hw()\n\nthe order of queries (Query1, Query2, etc) doesn’t affect function definitions and use\n\n\nbut within a query, you’ll need to define a function before you can use it"
  },
  {
    "objectID": "bi_training/BI_intermediate_session_04.html#defining-functions-within-queries",
    "href": "bi_training/BI_intermediate_session_04.html#defining-functions-within-queries",
    "title": "Intermediate Power BI Session 4",
    "section": "Defining functions within queries",
    "text": "Defining functions within queries\nlet \n    hw2 = () =&gt; \"Hello world!\",\n    Source = hw2(),\n    lower_case = Text.Lower(Source),\n    proper_case = Text.Proper(lower_case)\nin \n    proper_case\n\n\nhw2() has local scope: you can’t use it in other queries"
  },
  {
    "objectID": "bi_training/BI_intermediate_session_04.html#add-a-parameter",
    "href": "bi_training/BI_intermediate_session_04.html#add-a-parameter",
    "title": "Intermediate Power BI Session 4",
    "section": "Add a parameter",
    "text": "Add a parameter\n\n\n\n\n\n\nNote\n\n\n\n\n\n\nmake a new blank query and name it lower_proper\n\nin the formula bar, define the function = (x) =&gt; Text.Proper(Text.Lower(x))\n\ncheck the parameter option that should appear below the formula bar:"
  },
  {
    "objectID": "bi_training/BI_intermediate_session_04.html#re-edit-your-original-query",
    "href": "bi_training/BI_intermediate_session_04.html#re-edit-your-original-query",
    "title": "Intermediate Power BI Session 4",
    "section": "Re-edit your original query",
    "text": "Re-edit your original query\n\nto use lower_proper instead of Text.Lower etc\n\nlet\n    Source = hw(),\n    proper_case = lower_proper(Source)\nin \n    proper_case"
  },
  {
    "objectID": "bi_training/BI_intermediate_session_04.html#bonus-types",
    "href": "bi_training/BI_intermediate_session_04.html#bonus-types",
    "title": "Intermediate Power BI Session 4",
    "section": "Bonus: types",
    "text": "Bonus: types\n\nyou can specify types in your function:\n\n= (x as text) as text =&gt; Text.Proper(Text.Lower(x))"
  },
  {
    "objectID": "bi_training/BI_intermediate_session_04.html#resources",
    "href": "bi_training/BI_intermediate_session_04.html#resources",
    "title": "Intermediate Power BI Session 4",
    "section": "Resources",
    "text": "Resources\n\nan especially-helpful introduction to PQM"
  },
  {
    "objectID": "bi_training/BI_intermediate_session_02.html",
    "href": "bi_training/BI_intermediate_session_02.html",
    "title": "Intermediate Power BI Session 2",
    "section": "",
    "text": "This is part of our intermediate-level Power BI desktop course. The course structure is as follows:"
  },
  {
    "objectID": "bi_training/BI_intermediate_session_02.html#previous-attendees-have-said",
    "href": "bi_training/BI_intermediate_session_02.html#previous-attendees-have-said",
    "title": "Intermediate Power BI Session 2",
    "section": "Previous attendees have said…",
    "text": "Previous attendees have said…\n\n60 previous attendees have left feedback\n100% would recommend this session to a colleague\n97% said that this session was pitched correctly\n\n\n\n\n\n\n\n\n\n\n\nThree random comments from previous attendees\n\n\n\n\nHandy refresher\nIt was really helpful thank you very much!\nthought the session was well run and informative. clear frustration to all around the different IT infrastructure in existence across NHS Scotland, but demonstrated power of Power Query and Power BI. not an expert in field, but just about kept up"
  },
  {
    "objectID": "bi_training/BI_intermediate_session_02.html#session-outline",
    "href": "bi_training/BI_intermediate_session_02.html#session-outline",
    "title": "Intermediate Power BI Session 2",
    "section": "Session outline",
    "text": "Session outline\n\nlook at the foundations of DAX\niterator functions\nfilter context\n\nFILTER()\nCALCULATE()\n\n\nvariables\ncalculation groups"
  },
  {
    "objectID": "bi_training/BI_intermediate_session_02.html#data",
    "href": "bi_training/BI_intermediate_session_02.html#data",
    "title": "Intermediate Power BI Session 2",
    "section": "Data",
    "text": "Data\n\nthis session uses a bit of synthetic data extending the Dundee traffic dataset from the previous session  \n\nplease download the data from this link, and import into Power BI"
  },
  {
    "objectID": "bi_training/BI_intermediate_session_02.html#dax-reminders",
    "href": "bi_training/BI_intermediate_session_02.html#dax-reminders",
    "title": "Intermediate Power BI Session 2",
    "section": "DAX reminders",
    "text": "DAX reminders\n\nfunctions vs formulas\narguments and return values\nreferences\ncolumns vs measures"
  },
  {
    "objectID": "bi_training/BI_intermediate_session_02.html#column-functions",
    "href": "bi_training/BI_intermediate_session_02.html#column-functions",
    "title": "Intermediate Power BI Session 2",
    "section": "Column functions",
    "text": "Column functions\n\nMany DAX functions can return either columns or measures\nlet’s try a practical example:\n\n\n\n\n\n\n\nTask\n\n\n\n\nin the traffic data, select New column then add the DAX formula temp_col = 66\n\nnow repeat with New measure then temp_measure = 66\n\nnow add temp_measure to a card on a new report page"
  },
  {
    "objectID": "bi_training/BI_intermediate_session_02.html#column-vs-measure",
    "href": "bi_training/BI_intermediate_session_02.html#column-vs-measure",
    "title": "Intermediate Power BI Session 2",
    "section": "Column vs measure",
    "text": "Column vs measure\n\nyour temp_xxx functions will be identical: the value of temp_measure will be the same as each row of the temp_col in your data\nthe values are the same\nthe filter context is also the same"
  },
  {
    "objectID": "bi_training/BI_intermediate_session_02.html#dax-defaults",
    "href": "bi_training/BI_intermediate_session_02.html#dax-defaults",
    "title": "Intermediate Power BI Session 2",
    "section": "DAX defaults",
    "text": "DAX defaults\n\n\n\n\n\n\nTask\n\n\n\n\nnow tweak your temp_col formula to use the UPPER function on the [Detail] column: temp = UPPER(traffic[Detail])\n\ninspect the result\n\n\n\n\nan important result: DAX column functions default to row-wise filter context\nif you try the same formula in temp_measure you’ll cause an error: Power BI won’t know which row you want to change the case of"
  },
  {
    "objectID": "bi_training/BI_intermediate_session_02.html#filter",
    "href": "bi_training/BI_intermediate_session_02.html#filter",
    "title": "Intermediate Power BI Session 2",
    "section": "FILTER()",
    "text": "FILTER()\n\n\n\n\n\n\nTask\n\n\n\n\nnow update temp_col = COUNTROWS(filter(traffic, traffic[number] = 3))\n\n\n\n\n\nnote that this function now isn’t working row-by-row, but across the entire table\n\nFILTER() has changed the default row-by-row context"
  },
  {
    "objectID": "bi_training/BI_intermediate_session_02.html#filter-context",
    "href": "bi_training/BI_intermediate_session_02.html#filter-context",
    "title": "Intermediate Power BI Session 2",
    "section": "Filter context",
    "text": "Filter context\n\n\n\n\n\n\nTask\n\n\n\n\nto illustrate, please build a simple dashboard with:\n\na card containing the minimum value of traffic[temp_col]\n\na slicer containing traffic[time]  \n\n\n\n\n\n\n\nnote that the value of temp seems to be incorrect - it’s the same no matter how the slicer is set"
  },
  {
    "objectID": "bi_training/BI_intermediate_session_02.html#iterator-functions",
    "href": "bi_training/BI_intermediate_session_02.html#iterator-functions",
    "title": "Intermediate Power BI Session 2",
    "section": "Iterator functions",
    "text": "Iterator functions\n\n\n\n\n\n\nTask\n\n\n\n\nadd two new columns:\n\ncol_sum = SUM(traffic[number])\ncol_sumx = SUMX(traffic, traffic[number])\n\n\nadd two new measures\n\nmeas_sum = SUM(traffic[number])\nmeas_sumx = SUMX(traffic, traffic[number])\n\n\nfinally, add all 4 to cards, summarising by min when necessary"
  },
  {
    "objectID": "bi_training/BI_intermediate_session_02.html#whats-the-difference",
    "href": "bi_training/BI_intermediate_session_02.html#whats-the-difference",
    "title": "Intermediate Power BI Session 2",
    "section": "What’s the difference?",
    "text": "What’s the difference?\n\nin the measure, SUM() takes the report filter context, and sums for that time of day\nin the column, SUM() calculates the total for an entire column\nin both cases, SUMX() gives the same result, but it calculates it in a different way…"
  },
  {
    "objectID": "bi_training/BI_intermediate_session_02.html#sumx",
    "href": "bi_training/BI_intermediate_session_02.html#sumx",
    "title": "Intermediate Power BI Session 2",
    "section": "SUMX()",
    "text": "SUMX()\n\n\n\n\n\n\nTask\n\n\n\n\nto illustrate, change both SUMX calculations to SUMX(filter(traffic, traffic[number] &lt; 15), traffic[number])\n\n\n\n\n\nall four values will now disagree:  …\ncol_sum is showing the total for the entire column\nmeas_sum is showing the total for the filtered column (so traffic[time] = morning)\ncol_sumx is showing the total for the filtered column (values of traffic[number] &gt; 15 only)\nmeas_sumx is showing the total for the doubly-filtered column (values of traffic[number] &gt; 15 where traffic[time] = morning)"
  },
  {
    "objectID": "bi_training/BI_intermediate_session_02.html#sumx-is-an-iterator",
    "href": "bi_training/BI_intermediate_session_02.html#sumx-is-an-iterator",
    "title": "Intermediate Power BI Session 2",
    "section": "\nSUMX() is an iterator",
    "text": "SUMX() is an iterator\n\n\nSUMX() calculates row-by-row\nin our initial case, it was calculating row-by-row, and then aggregating all the rows\nwhen we added a filter, SUMX() included rows meeting the filter condition"
  },
  {
    "objectID": "bi_training/BI_intermediate_session_02.html#all",
    "href": "bi_training/BI_intermediate_session_02.html#all",
    "title": "Intermediate Power BI Session 2",
    "section": "ALL()",
    "text": "ALL()\n\nstrictly, SUM(x[y]) is a sweetened form of SUMX(ALL(x), x[y])\n\n\nALL() removes any filter context to include every row of a table"
  },
  {
    "objectID": "bi_training/BI_intermediate_session_02.html#all-and-calculate",
    "href": "bi_training/BI_intermediate_session_02.html#all-and-calculate",
    "title": "Intermediate Power BI Session 2",
    "section": "\nALL() and CALCULATE()\n",
    "text": "ALL() and CALCULATE()\n\n\nmuch of the power of DAX lies in that ability to alter the filter context. Let’s tweak meas_sum to show that:\n\n\n\n\n\n\n\nTask\n\n\n\n\nmeas_sum = CALCULATE(SUM(traffic[number]), ALL())\ncompare and contrast col_sum and meas_sum\n\n\n\n\n\nCALCULATE() is a generic function that changes the filter context\n\nALL(), as we’ve already seen, removes any filtering from the current filter context"
  },
  {
    "objectID": "bi_training/BI_intermediate_session_02.html#allexcept",
    "href": "bi_training/BI_intermediate_session_02.html#allexcept",
    "title": "Intermediate Power BI Session 2",
    "section": "ALLEXCEPT()",
    "text": "ALLEXCEPT()\n\n\nALLEXCEPT() allows you to remove part of the filter context\n\n\n\n\n\n\n\nTask\n\n\n\n\nadd an additional slicer to your report slicing on traffic[Type]\n\nadd a new measure with meas_sum_time = CALCULATE(SUM(traffic[number]), ALLEXCEPT(traffic, traffic[time])) and add to a card\n\n\n\n\nthat should give you a measure that reponds to time, but not to Type\n\nthis could be extended - e.g. to meas_sum_type_time = CALCULATE(SUM(traffic[number]), ALLEXCEPT (traffic, traffic[Type], traffic[time]))"
  },
  {
    "objectID": "bi_training/BI_intermediate_session_02.html#variables",
    "href": "bi_training/BI_intermediate_session_02.html#variables",
    "title": "Intermediate Power BI Session 2",
    "section": "Variables",
    "text": "Variables\n\nDAX formulas get horrid quickly. In this section, we’ll demonstrate the use of variables\nadd a new measure:\n\ntemp_var = \n  VAR my_var = 66\n  RETURN my_var"
  },
  {
    "objectID": "bi_training/BI_intermediate_session_02.html#variable-considerations",
    "href": "bi_training/BI_intermediate_session_02.html#variable-considerations",
    "title": "Intermediate Power BI Session 2",
    "section": "Variable considerations",
    "text": "Variable considerations\n\nuseful to avoid repeating yourself\nalso useful for avoiding clutter (e.g. component measures)\nlocal scope - you can’t refer to variables in other expressions\npotentially improve performance"
  },
  {
    "objectID": "bi_training/BI_intermediate_session_02.html#calculation-groups",
    "href": "bi_training/BI_intermediate_session_02.html#calculation-groups",
    "title": "Intermediate Power BI Session 2",
    "section": "Calculation groups",
    "text": "Calculation groups\n\ncalculation groups are a way of applying functions to many measures at once\n\n\n\n\n\n\n\nTask\n\n\n\n\nin the model view, select Calculation group \n\nselect Yes when warned about implicit measures \n\nthat will add a new section to your model \n\nselect Calculation item in the Model sidebar \n\nadd the formula round_10 = ROUND(SELECTEDMEASURE(), -1) to the formula bar\nback on the report page, add a slicer and populate with your Calculation group"
  },
  {
    "objectID": "bi_training/BI_for_beginners_session_04.html",
    "href": "bi_training/BI_for_beginners_session_04.html",
    "title": "BI for Beginners Session 4",
    "section": "",
    "text": "Session materials\n\n\n\n\n\nIdeally, you’ll use the data that you wrangled during the previous session. But if that’s not suitable, use this data:\n\n.xlsx session data\n\nThere’s also a starting-point pbix file which you might prefer to use instead:\n\n.pbix starting file"
  },
  {
    "objectID": "bi_training/BI_for_beginners_session_04.html#previous-attendees-have-said",
    "href": "bi_training/BI_for_beginners_session_04.html#previous-attendees-have-said",
    "title": "BI for Beginners Session 4",
    "section": "Previous attendees have said…",
    "text": "Previous attendees have said…\n\n60 previous attendees have left feedback\n100% would recommend this session to a colleague\n97% said that this session was pitched correctly\n\n\n\n\n\n\n\n\n\n\n\nThree random comments from previous attendees\n\n\n\n\nGreat introduction to a powerful tool.\nHandy refresher\nI enjoyed it"
  },
  {
    "objectID": "bi_training/BI_for_beginners_session_04.html#session-outline",
    "href": "bi_training/BI_for_beginners_session_04.html#session-outline",
    "title": "BI for Beginners Session 4",
    "section": "Session outline",
    "text": "Session outline\n\n\n\n\n\nIn this session, we’re going to build out the GP practice size dashboard from last time\nwe’re going to use some new features of Power BI to help us with that\n\nwe’ll spend a little bit of time looking at the model\nbut most of the session is about DAX and measures"
  },
  {
    "objectID": "bi_training/BI_for_beginners_session_04.html#session-files",
    "href": "bi_training/BI_for_beginners_session_04.html#session-files",
    "title": "BI for Beginners Session 4",
    "section": "Session files",
    "text": "Session files\n\n\nBfB_s03.pbix as a starting point (or in case you’ve lost your file from last week)"
  },
  {
    "objectID": "bi_training/BI_for_beginners_session_04.html#recap",
    "href": "bi_training/BI_for_beginners_session_04.html#recap",
    "title": "BI for Beginners Session 4",
    "section": "Recap",
    "text": "Recap\n\nwe did lots of data wrangling last week using Power Query\nthat’s designed to do data loading and tidying - so we tried removing some data, reshaping data, and joining data,…\nbut there’s another whole language in Power BI to let us do things with that tidy data: DAX (annoyingly, Data Analysis eXpressions)\nsimilar to Excel formulas"
  },
  {
    "objectID": "bi_training/BI_for_beginners_session_04.html#major-differences-between-dax-and-excel-formulas",
    "href": "bi_training/BI_for_beginners_session_04.html#major-differences-between-dax-and-excel-formulas",
    "title": "BI for Beginners Session 4",
    "section": "Major differences between DAX and Excel formulas",
    "text": "Major differences between DAX and Excel formulas\n\nExcel takes a cell or range of cells (like A4)\n\nDAX functions take a column or table as reference, and cannot use e.g. cell ranges\n\n\nExcel formulas show their results directly in the cell\n\nDAX formulas need to be added to a card (or similar)\n\n\nalso a grab-bag of minor differences (no mixed columns data type, date and time functions, different lookup mechanics)"
  },
  {
    "objectID": "bi_training/BI_for_beginners_session_04.html#set-up",
    "href": "bi_training/BI_for_beginners_session_04.html#set-up",
    "title": "BI for Beginners Session 4",
    "section": "Set up",
    "text": "Set up\n\n\n\n\n\n\nTask\n\n\n\n\nopen your dashboard from the last session (or you can use BfB_s03.pbix)\nadd a new report page, and name it measures\n\nremind yourself about the data we’re working with"
  },
  {
    "objectID": "bi_training/BI_for_beginners_session_04.html#the-model",
    "href": "bi_training/BI_for_beginners_session_04.html#the-model",
    "title": "BI for Beginners Session 4",
    "section": "The model",
    "text": "The model\n\nlet’s start by looking at the model view\nwe should see our data tables as blocks in the model\nthre are also connections between some of those blocks\n\n\n\n\n\n\n\nTask\n\n\n\n\nMouse-over the relationships in the model view\nWhat’s the difference between  and ?\nNow expand the Properties pane"
  },
  {
    "objectID": "bi_training/BI_for_beginners_session_04.html#dax-first-steps",
    "href": "bi_training/BI_for_beginners_session_04.html#dax-first-steps",
    "title": "BI for Beginners Session 4",
    "section": "DAX first steps",
    "text": "DAX first steps\n\n\n\n\n\n\nTask\n\n\n\n\nin either the report or the data views, click New measure\n\nin the formula bar, add largest_practice = MAX(practices[PracticeListSize])"
  },
  {
    "objectID": "bi_training/BI_for_beginners_session_04.html#dax-queries",
    "href": "bi_training/BI_for_beginners_session_04.html#dax-queries",
    "title": "BI for Beginners Session 4",
    "section": "DAX queries",
    "text": "DAX queries\nThe general way of building a DAX formula is as follows:\n\nmeasure = FUNCTION(table[column])\n\n\nnote the [square brackets] for column names\nwe wrote a simple DAX formula in the first session, when we calculated a column using the formula AvailableBeds = [BedComp] - [ClosedBed]\n\nin this session, we’re going to concentrate on using DAX to write measures"
  },
  {
    "objectID": "bi_training/BI_for_beginners_session_04.html#wth-are-measures",
    "href": "bi_training/BI_for_beginners_session_04.html#wth-are-measures",
    "title": "BI for Beginners Session 4",
    "section": "WTH are measures?",
    "text": "WTH are measures?\n\n\nmeasures are Power BI lingo for calculated data summaries\ncalculated columns, as we’ve seen before, let you make new columns from existing data\nmeasures allow you to make non-column summaries of your data - like an average"
  },
  {
    "objectID": "bi_training/BI_for_beginners_session_04.html#dax-queries-1",
    "href": "bi_training/BI_for_beginners_session_04.html#dax-queries-1",
    "title": "BI for Beginners Session 4",
    "section": "DAX queries",
    "text": "DAX queries\nFor our example, our measure is called largest_practice, and we want it to report the largest practice in each health board. Our DAX-based measure works as follows:\n\nour data table is called practices\n\nour column is PracticeListSize\n\nwe’re using the MAX() function to find the largest value (exactly like Excel)\n\n\nlargest_practice = MAX(practices[PracticeListSize])"
  },
  {
    "objectID": "bi_training/BI_for_beginners_session_04.html#adding-our-measure-to-our-report",
    "href": "bi_training/BI_for_beginners_session_04.html#adding-our-measure-to-our-report",
    "title": "BI for Beginners Session 4",
    "section": "Adding our measure to our report",
    "text": "Adding our measure to our report\n\nwe should be able to add our largest_practice measure to our report\ngo back to the report view, and refresh\nyou should see the largest_practice measure appear in the data pane"
  },
  {
    "objectID": "bi_training/BI_for_beginners_session_04.html#adding-our-measure-to-our-report-1",
    "href": "bi_training/BI_for_beginners_session_04.html#adding-our-measure-to-our-report-1",
    "title": "BI for Beginners Session 4",
    "section": "Adding our measure to our report",
    "text": "Adding our measure to our report\n\n\n\n\n\n\nTask\n\n\n\n\nin our new measures page, drag the largest_practice measure into a new card\nwe also want to be able to look at different boards, so add a slicer using the HBnames from the practices table\nwe’ll then play with the interactions to make sure that this measure gives us a sensible result"
  },
  {
    "objectID": "bi_training/BI_for_beginners_session_04.html#making-a-measures-table",
    "href": "bi_training/BI_for_beginners_session_04.html#making-a-measures-table",
    "title": "BI for Beginners Session 4",
    "section": "Making a measures table",
    "text": "Making a measures table\n\nit’s helpful to keep your measures in a stand-alone measures table - but requires a bit of creativity\n\n\n\n\n\n\n\nTask\n\n\n\n\nmanually create an empty table using Enter data  \n\nselect your largest_practice measure, go to the data view, and use the Home table menu to move it to your new measures table\nthen delete the blank column from your measures table"
  },
  {
    "objectID": "bi_training/BI_for_beginners_session_04.html#concatenating",
    "href": "bi_training/BI_for_beginners_session_04.html#concatenating",
    "title": "BI for Beginners Session 4",
    "section": "Concatenating",
    "text": "Concatenating\n\nso far, our largest_practice measure is ugly-but-functional\nwe can use the concatenate operator (&) to beautify it\n\n\n\n\n\n\n\nTask\n\n\n\n\nedit your largest_practice measure\nyou can insert text by “quoting” it, and using & to join it to the result of your MAX()\n\nfor instance, largest_practice = \"Largest practice: \" & max(practices[PracticeListSize]) & \" patients\"\n\n\n\nfeel free to experiment - make sure you go back to the report view and refresh to see changes\nyou can also use the format visual section to change the font size, and drop/alter the category label"
  },
  {
    "objectID": "bi_training/BI_for_beginners_session_04.html#core-dax-functions",
    "href": "bi_training/BI_for_beginners_session_04.html#core-dax-functions",
    "title": "BI for Beginners Session 4",
    "section": "Core DAX functions",
    "text": "Core DAX functions\n\nseveral useful DAX functions work in basically the same way as MAX()\n\nlet’s try them out now\n\n\n\n\n\n\n\nTask\n\n\n\n\nin your measures table, make a new measure called average_practice\n\ntry average_practice = AVERAGE(practices[PracticeListSize])\n\nadd this to a new card to test it\nnow tweak with concatenated text\n\nCOUNT(), and MIN() should also work in the same way"
  },
  {
    "objectID": "bi_training/BI_for_beginners_session_04.html#combining-functions",
    "href": "bi_training/BI_for_beginners_session_04.html#combining-functions",
    "title": "BI for Beginners Session 4",
    "section": "Combining functions",
    "text": "Combining functions\n\nmost measures will need more than one DAX function\nwe combine functions just like Excel, by bracketing them together\n\nfunction1(function2(data)) does function 2 on the data, then function 1 on that result\nwhen you’re reading/building formulas with many functions, two top-tips:\n\nmake sure you match your brackets\nread from the inside out"
  },
  {
    "objectID": "bi_training/BI_for_beginners_session_04.html#combining-functions-1",
    "href": "bi_training/BI_for_beginners_session_04.html#combining-functions-1",
    "title": "BI for Beginners Session 4",
    "section": "Combining functions",
    "text": "Combining functions\n\nour average_practice measure is pretty ugly\na whole number value would be more suitable\n\n\n\n\n\n\n\nTask\n\n\n\n\nclick on the average_practice measure, which should read average_practice = AVERAGE(practices[PracticeListSize])\n\nadd the INT() function, which converts a number to an integer (whole number)\n\nwe want INT() to wrap around the AVERAGE() function\naverage_practice = INT(AVERAGE(practices[PracticeListSize]))"
  },
  {
    "objectID": "bi_training/BI_for_beginners_session_04.html#combining-functions-2",
    "href": "bi_training/BI_for_beginners_session_04.html#combining-functions-2",
    "title": "BI for Beginners Session 4",
    "section": "Combining functions",
    "text": "Combining functions\n\nwe can keep combining functions together in the same way\ne.g. we could round that result to the nearest hundred using round(..., -2)\n\nthe -2 specifies the number of decimal places, so 3 here would give us 3 decimal places (say 444.444).\naverage_practice = ROUND(INT(AVERAGE(practices[PracticeListSize])), -2)\n\n\ncare with the brackets!\nyou might prefer to do simple rounding in the format visual area ){height=“150px”}"
  },
  {
    "objectID": "bi_training/BI_for_beginners_session_04.html#filter",
    "href": "bi_training/BI_for_beginners_session_04.html#filter",
    "title": "BI for Beginners Session 4",
    "section": "Filter",
    "text": "Filter\n\n\nFILTER() is the last DAX function we’re going to look at\nit lets us filter our data based on conditions\nsay we want to count how many big practices (more than 10000 patients) we have…\nbig_practices = countrows(filter(practices, practices[PracticeListSize] &gt; 10000))"
  },
  {
    "objectID": "bi_training/BI_for_beginners_session_04.html#filter-1",
    "href": "bi_training/BI_for_beginners_session_04.html#filter-1",
    "title": "BI for Beginners Session 4",
    "section": "Filter",
    "text": "Filter\n\nbig_practices = countrows(filter(practices, practices[PracticeListSize] &gt; 10000))\nlet’s read this from the inside-out\n\nfilter(practices, practices[PracticeListSize] &gt; 10000) applies the filter function over the whole practices table\nit finds all the rows where PracticeListSize is greater than (&gt;) 10000\nthose rows are then counted by countrows()\n\nfinally, we save that number into our measure named big_practices"
  },
  {
    "objectID": "bi_training/BI_for_beginners_session_04.html#filter-2",
    "href": "bi_training/BI_for_beginners_session_04.html#filter-2",
    "title": "BI for Beginners Session 4",
    "section": "Filter",
    "text": "Filter\n\nthat’ll be another ugly-but-functional measure\nwe’ll use an alternative way of beautifying this one, to avoid making the formula too complicated\nmeasures can contain measures\ninstead of the table[column] format we’ve been using, we refer to measures by wrapping them in single square-brackets: [measure]"
  },
  {
    "objectID": "bi_training/BI_for_beginners_session_04.html#filter-3",
    "href": "bi_training/BI_for_beginners_session_04.html#filter-3",
    "title": "BI for Beginners Session 4",
    "section": "Filter",
    "text": "Filter\n\nlet’s create this now\n\n\n\n\n\n\n\nTask\n\n\n\n\nadd a new measure to your measures table\nuse the formula big_practices = countrows(filter(practices, practices[PracticeListSize] &gt; 10000)) to obtain the filtered count of big practices\ncreate a second new measure\nnice_big_practices = [big_practices] & \" practices with more than 10000 patients\"\nadd nice_big_practices to a new card"
  },
  {
    "objectID": "bi_training/BI_for_beginners_session_04.html#beautifying-average_practice",
    "href": "bi_training/BI_for_beginners_session_04.html#beautifying-average_practice",
    "title": "BI for Beginners Session 4",
    "section": "Beautifying average_practice\n",
    "text": "Beautifying average_practice\n\n\n\n\n\n\n\nTask\n\n\n\n\nPlease make a new meaure named nice_average_practice\n\nUse concatenation to make the average_practice measure nicer to read\nUpdate your average measure card in the report"
  },
  {
    "objectID": "bi_training/BI_for_beginners_session_04.html#more-interesting-filters",
    "href": "bi_training/BI_for_beginners_session_04.html#more-interesting-filters",
    "title": "BI for Beginners Session 4",
    "section": "More interesting filters",
    "text": "More interesting filters\n\n\nFILTER() is one of the big building-blocks of Power BI\nwe can use it as a way of looking up matching data\nfor example, to find the name of the largest practice, we can:\n\nlargest_practice_name = CALCULATE (\n    VALUES (practices[Practice Name]),\n    FILTER (\n      ALL(practices[PracticeListSize]), \n      practices[PracticeListSize] = MAX (practices[PracticeListSize]\n            )\n            )\n)\n\n\nFILTER() finds the largest practice\n\nVALUES() returns the corresponding value from the Practice Name column\n\nCALCULATE() joins the FILTER() and VALUES() parts of the expression"
  },
  {
    "objectID": "bi_training/BI_for_beginners_session_04.html#dax-resources-beginners",
    "href": "bi_training/BI_for_beginners_session_04.html#dax-resources-beginners",
    "title": "BI for Beginners Session 4",
    "section": "DAX resources (beginners)",
    "text": "DAX resources (beginners)\n\nDAX sandbox - dax.do\n\nDAX introduction on the Microsoft site\n\n\ncheat sheet from Pragmatic Works - good as an introduction\n\nintroduction to DAX from Data Flair is particularly useful if you have a bit of prior experience\nSaurabh dasgupta’s DAX cheat sheet"
  },
  {
    "objectID": "bi_training/BI_for_beginners_session_04.html#dax-resources-advanced",
    "href": "bi_training/BI_for_beginners_session_04.html#dax-resources-advanced",
    "title": "BI for Beginners Session 4",
    "section": "DAX resources (advanced)",
    "text": "DAX resources (advanced)\n\nDAX reference\nDAX formatting utility\nHelpful tutorial on DAX variables\nMarco Russo and Alberto Ferrari’s book The Definitive Guide to DAX: Business intelligence for Microsoft Power BI, SQL Server Analysis Services, and Excel is the standard big reference book\nI’ve also heard good things about DAX Studio as a helper for writing more complex DAX functions - broadly analogous to an IDE for DAX"
  },
  {
    "objectID": "bi_training/BI_for_beginners_session_02.html",
    "href": "bi_training/BI_for_beginners_session_02.html",
    "title": "BI for Beginners Session 2",
    "section": "",
    "text": "Session materials\n\n\n\n\n\n\n.xlsx session data"
  },
  {
    "objectID": "bi_training/BI_for_beginners_session_02.html#previous-attendees-have-said",
    "href": "bi_training/BI_for_beginners_session_02.html#previous-attendees-have-said",
    "title": "BI for Beginners Session 2",
    "section": "Previous attendees have said…",
    "text": "Previous attendees have said…\n\n60 previous attendees have left feedback\n100% would recommend this session to a colleague\n97% said that this session was pitched correctly\n\n\n\n\n\n\n\n\n\n\n\nThree random comments from previous attendees\n\n\n\n\nVery clear and like the materials that go with it. Very professional delivery and very quick response to any queries throughout. very useful course.\nReally useful to go to for getting started in PowerBI\nI have always wanted to take courses on Power BI and when I saw this opportunity, i grabbed it. It was quite practical and having to go step by step hands-on with Brendan made it easier to appreciate."
  },
  {
    "objectID": "bi_training/BI_for_beginners_session_02.html#session-outline",
    "href": "bi_training/BI_for_beginners_session_02.html#session-outline",
    "title": "BI for Beginners Session 2",
    "section": "Session outline",
    "text": "Session outline\nIf you’d like to get a sense of the core content, you might have a look at the video outline for this session:\n\n\n\n\nVisualisation overload!\n\nwe’re going to build several visualisations\nwe’ll use some tidied data for this - today is all about using data to do interesting things\nnext time, we’ll get into the data wrangling needed to sort that data out"
  },
  {
    "objectID": "bi_training/BI_for_beginners_session_02.html#etl",
    "href": "bi_training/BI_for_beginners_session_02.html#etl",
    "title": "BI for Beginners Session 2",
    "section": "ETL",
    "text": "ETL\n(as a preview of the next session)\n\nextract\ntransform\nload"
  },
  {
    "objectID": "bi_training/BI_for_beginners_session_02.html#todays-visualisations",
    "href": "bi_training/BI_for_beginners_session_02.html#todays-visualisations",
    "title": "BI for Beginners Session 2",
    "section": "Today’s visualisations",
    "text": "Today’s visualisations\n\nmaps\ncolumn charts\nline graphs\nnumeric summaries of data\nfiltering and slicing tools"
  },
  {
    "objectID": "bi_training/BI_for_beginners_session_02.html#the-goal",
    "href": "bi_training/BI_for_beginners_session_02.html#the-goal",
    "title": "BI for Beginners Session 2",
    "section": "The goal",
    "text": "The goal\n\n\n\n\n\n\nTask\n\n\n\nOpen BfB_s02.pbix to have a look"
  },
  {
    "objectID": "bi_training/BI_for_beginners_session_02.html#todays-data",
    "href": "bi_training/BI_for_beginners_session_02.html#todays-data",
    "title": "BI for Beginners Session 2",
    "section": "Today’s data",
    "text": "Today’s data\n\n\n\n\n\n\nTask\n\n\n\n\nStart a new report in Power BI\nOpen data/s02_data.xlsx\n\nSelect the two tables (gp_size and weekend_service) and have a look at the preview\n\nLoad those tables"
  },
  {
    "objectID": "bi_training/BI_for_beginners_session_02.html#visualising-service-use",
    "href": "bi_training/BI_for_beginners_session_02.html#visualising-service-use",
    "title": "BI for Beginners Session 2",
    "section": "Visualising service use",
    "text": "Visualising service use\n\n\nService use dashboard"
  },
  {
    "objectID": "bi_training/BI_for_beginners_session_02.html#finding-our-data",
    "href": "bi_training/BI_for_beginners_session_02.html#finding-our-data",
    "title": "BI for Beginners Session 2",
    "section": "Finding our data",
    "text": "Finding our data\n\n\n\n\n\n\nTask\n\n\n\n\nGo to the data view\nOpen the weekend_service table and inspect the data"
  },
  {
    "objectID": "bi_training/BI_for_beginners_session_02.html#add-a-line-chart",
    "href": "bi_training/BI_for_beginners_session_02.html#add-a-line-chart",
    "title": "BI for Beginners Session 2",
    "section": "Add a line chart",
    "text": "Add a line chart\n\n\n\n\n\n\nTask\n\n\n\n\nGo to the report view\nGo to the visualisation pane, and add a line chart\nExpand it to fill the bottom three-quarters of the visualisation area"
  },
  {
    "objectID": "bi_training/BI_for_beginners_session_02.html#add-data",
    "href": "bi_training/BI_for_beginners_session_02.html#add-data",
    "title": "BI for Beginners Session 2",
    "section": "Add data",
    "text": "Add data\n\n\n\n\n\n\nTask\n\n\n\n\nClick the date column in the data pane, and drag the Date Hierarchy to the X-axis field\nDrag the three site columns to the Y-axis field"
  },
  {
    "objectID": "bi_training/BI_for_beginners_session_02.html#add-a-slicer",
    "href": "bi_training/BI_for_beginners_session_02.html#add-a-slicer",
    "title": "BI for Beginners Session 2",
    "section": "Add a slicer",
    "text": "Add a slicer\n\n\n\n\n\n\nTask\n\n\n\n\nClick off your line graph, then add a slicer\n\nDrag the year field from the Date Hierarchy into the slicer Field\nAdd a second slicer in the same way\nThis time, drag the weekend column into the Field\nSelect the Format your visual menu\n\nFormat the slicer to use a dropdown"
  },
  {
    "objectID": "bi_training/BI_for_beginners_session_02.html#add-some-cards",
    "href": "bi_training/BI_for_beginners_session_02.html#add-some-cards",
    "title": "BI for Beginners Session 2",
    "section": "Add some cards",
    "text": "Add some cards\n\n\n\n\n\n\nTask\n\n\n\n\nAdd a card\n\nDrag site_a into the Field\nUse the dropdown on Sum of site_a to select average\nRepeat for site_b and site_c\n\nAdjust the decimal places via the Callout value section of the format menu"
  },
  {
    "objectID": "bi_training/BI_for_beginners_session_02.html#tidy-up-the-names",
    "href": "bi_training/BI_for_beginners_session_02.html#tidy-up-the-names",
    "title": "BI for Beginners Session 2",
    "section": "Tidy up the names",
    "text": "Tidy up the names\n\n\n\n\n\n\nTask\n\n\n\n\nGo round using Rename for this visual to tidy up the names\n\nName the page of the report appropriately"
  },
  {
    "objectID": "bi_training/BI_for_beginners_session_02.html#end-result",
    "href": "bi_training/BI_for_beginners_session_02.html#end-result",
    "title": "BI for Beginners Session 2",
    "section": "End result",
    "text": "End result\n\n\nFinal dashboard"
  },
  {
    "objectID": "bi_training/BI_for_beginners_session_02.html#gp-practice-size",
    "href": "bi_training/BI_for_beginners_session_02.html#gp-practice-size",
    "title": "BI for Beginners Session 2",
    "section": "GP practice size",
    "text": "GP practice size\n\n\nGP practices map dashboard"
  },
  {
    "objectID": "bi_training/BI_for_beginners_session_02.html#add-a-map",
    "href": "bi_training/BI_for_beginners_session_02.html#add-a-map",
    "title": "BI for Beginners Session 2",
    "section": "Add a map",
    "text": "Add a map\n\n\n\n\n\n\nTask\n\n\n\n\nAdd a new page to your report\nAdd a map and expand to fill the left-hand half of the visualisation area\n\nFrom the gp_size table, drag the Postcode column to the Location field\nNow drag the ListSize column to the Bubble size field"
  },
  {
    "objectID": "bi_training/BI_for_beginners_session_02.html#format-the-map",
    "href": "bi_training/BI_for_beginners_session_02.html#format-the-map",
    "title": "BI for Beginners Session 2",
    "section": "Format the map",
    "text": "Format the map\n\n\n\n\n\n\nTask\n\n\n\n\nFrom the Format visual menu, change the map style to greyscale\n\n(feel free to play around with the bubble size too)"
  },
  {
    "objectID": "bi_training/BI_for_beginners_session_02.html#colour-the-bubbles-by-health-board",
    "href": "bi_training/BI_for_beginners_session_02.html#colour-the-bubbles-by-health-board",
    "title": "BI for Beginners Session 2",
    "section": "Colour the bubbles by health board",
    "text": "Colour the bubbles by health board\n\n\n\n\n\n\nTask\n\n\n\n\nCan you find a way of colouring the bubbles by health board?  \n\n\n\n\n(add the HBName to the Legend field)"
  },
  {
    "objectID": "bi_training/BI_for_beginners_session_02.html#add-a-slicer-1",
    "href": "bi_training/BI_for_beginners_session_02.html#add-a-slicer-1",
    "title": "BI for Beginners Session 2",
    "section": "Add a slicer",
    "text": "Add a slicer\n\n\n\n\n\n\nTask\n\n\n\n\nAdd a slicer for health board\nUse the Format visual options to change this to a dropdown\nTest what happens when you change this"
  },
  {
    "objectID": "bi_training/BI_for_beginners_session_02.html#add-a-practice-details-card",
    "href": "bi_training/BI_for_beginners_session_02.html#add-a-practice-details-card",
    "title": "BI for Beginners Session 2",
    "section": "Add a practice details card",
    "text": "Add a practice details card\n\n\n\n\n\n\nTask\n\n\n\n\nAdd a card (new)\nDrag the ListSize and SIMD2020v2 columns to the Fields area\nMake sure that the SIMD2020v2 value is set to Min\nAdd a title showing the practice name via the Format Visual options\nFormat to suit"
  },
  {
    "objectID": "bi_training/BI_for_beginners_session_02.html#add-a-column-chart",
    "href": "bi_training/BI_for_beginners_session_02.html#add-a-column-chart",
    "title": "BI for Beginners Session 2",
    "section": "Add a column chart",
    "text": "Add a column chart\n\n\n\n\n\n\nTask\n\n\n\n\nAdd a column chart\nAdd the Name on the X-axis, the ListSize on the Y-axis, and the HBName in the legend"
  },
  {
    "objectID": "bi_training/BI_for_beginners_session_02.html#tidy-up-the-names-1",
    "href": "bi_training/BI_for_beginners_session_02.html#tidy-up-the-names-1",
    "title": "BI for Beginners Session 2",
    "section": "Tidy up the names",
    "text": "Tidy up the names\n\n\n\n\n\n\nTask\n\n\n\n\nGo round using Rename for this visual to tidy up the names\nName the page of the report appropriately"
  },
  {
    "objectID": "bi_training/BI_for_beginners_session_02.html#end-result-1",
    "href": "bi_training/BI_for_beginners_session_02.html#end-result-1",
    "title": "BI for Beginners Session 2",
    "section": "End result",
    "text": "End result\n\n\nFinal dashboard"
  },
  {
    "objectID": "bi_training/BI_for_beginners_session_02.html#homework-tasks",
    "href": "bi_training/BI_for_beginners_session_02.html#homework-tasks",
    "title": "BI for Beginners Session 2",
    "section": "Homework tasks",
    "text": "Homework tasks\n\nIs there any relationship between practice size and SIMD2020 deprivation scores in the GP data? How could you show that relationship in a visual?\nIs there any month-to-month or seasonal change in the weekend service use data? How could you show that relationship in a visual?"
  },
  {
    "objectID": "bi_training/BI_for_beginners_service_session_04.html",
    "href": "bi_training/BI_for_beginners_service_session_04.html",
    "title": "BI for Beginners (service version) Session 4",
    "section": "",
    "text": "Session materials\n\n\n\n\n\nIdeally, you’ll use the data that you wrangled during the previous session. But if that’s not suitable, use this data instead:\n\n.xlsx session data\nNo feedback found for this session"
  },
  {
    "objectID": "bi_training/BI_for_beginners_service_session_04.html#session-outline",
    "href": "bi_training/BI_for_beginners_service_session_04.html#session-outline",
    "title": "BI for Beginners (service version) Session 4",
    "section": "Session outline",
    "text": "Session outline\n\nIn this session, we’re going to build out the GP practice size dashboard from last time\nwe’re going to use some new features of Power BI to help us with that\n\nwe’ll spend a little bit of time looking at the model\nbut most of the session is about DAX and measures"
  },
  {
    "objectID": "bi_training/BI_for_beginners_service_session_04.html#recap",
    "href": "bi_training/BI_for_beginners_service_session_04.html#recap",
    "title": "BI for Beginners (service version) Session 4",
    "section": "Recap",
    "text": "Recap\n\nwe did lots of data wrangling last week using Power Query\nthat’s designed to do data loading and tidying - so we tried removing some data, reshaping data, and joining data,…\nbut there’s another whole language in Power BI to let us do things with that tidy data: DAX (annoyingly, Data Analysis eXpressions)\nsimilar to Excel formulas"
  },
  {
    "objectID": "bi_training/BI_for_beginners_service_session_04.html#major-differences-between-dax-and-excel-formulas",
    "href": "bi_training/BI_for_beginners_service_session_04.html#major-differences-between-dax-and-excel-formulas",
    "title": "BI for Beginners (service version) Session 4",
    "section": "Major differences between DAX and Excel formulas",
    "text": "Major differences between DAX and Excel formulas\n\nExcel takes a cell or range of cells (like A4)\n\nDAX functions take a column or table as reference, and cannot use e.g. cell ranges\n\n\nExcel formulas show their results directly in the cell\n\nDAX formulas need to be added to a card (or similar)\n\n\nalso a grab-bag of minor differences (no mixed columns data type, date and time functions, different lookup mechanics)"
  },
  {
    "objectID": "bi_training/BI_for_beginners_service_session_04.html#set-up",
    "href": "bi_training/BI_for_beginners_service_session_04.html#set-up",
    "title": "BI for Beginners (service version) Session 4",
    "section": "Set up",
    "text": "Set up\n\n\n\n\n\n\nTask\n\n\n\n\nopen your dashboard from the last session\nadd a new report page, and name it measures\n\nremind yourself about the data we’re working with"
  },
  {
    "objectID": "bi_training/BI_for_beginners_service_session_04.html#the-model",
    "href": "bi_training/BI_for_beginners_service_session_04.html#the-model",
    "title": "BI for Beginners (service version) Session 4",
    "section": "The model",
    "text": "The model\n\nlet’s start by looking at the model view\nwe should see our data tables as blocks in the model\nthere are also connections between some of those blocks\n\n\n\n\n\n\n\nTask\n\n\n\n\nClick Open data model \n\nThat should open the data model in a new tab  \n\nTry expanding the Properties pane"
  },
  {
    "objectID": "bi_training/BI_for_beginners_service_session_04.html#dax-first-steps",
    "href": "bi_training/BI_for_beginners_service_session_04.html#dax-first-steps",
    "title": "BI for Beginners (service version) Session 4",
    "section": "DAX first steps",
    "text": "DAX first steps\n\n\n\n\n\n\nTask\n\n\n\n\nin the model view, click New measure\n\nin the formula bar, add largest_practice = MAX(practices[PracticeListSize])"
  },
  {
    "objectID": "bi_training/BI_for_beginners_service_session_04.html#dax-queries",
    "href": "bi_training/BI_for_beginners_service_session_04.html#dax-queries",
    "title": "BI for Beginners (service version) Session 4",
    "section": "DAX queries",
    "text": "DAX queries\nThe general way of building a DAX formula is as follows:\n\nmeasure = FUNCTION(table[column])\n\n\nnote the [square brackets] for column names\nwe wrote a simple DAX formula in the first session, when we calculated a column using the formula AvailableBeds = [BedComp] - [ClosedBed]\n\nin this session, we’re going to concentrate on using DAX to write measures"
  },
  {
    "objectID": "bi_training/BI_for_beginners_service_session_04.html#wth-are-measures",
    "href": "bi_training/BI_for_beginners_service_session_04.html#wth-are-measures",
    "title": "BI for Beginners (service version) Session 4",
    "section": "WTH are measures?",
    "text": "WTH are measures?\n\n\nmeasures are Power BI lingo for calculated data summaries\ncalculated columns, as we’ve seen before, let you make new columns from existing data\nmeasures allow you to make non-column summaries of your data - like an average"
  },
  {
    "objectID": "bi_training/BI_for_beginners_service_session_04.html#dax-queries-1",
    "href": "bi_training/BI_for_beginners_service_session_04.html#dax-queries-1",
    "title": "BI for Beginners (service version) Session 4",
    "section": "DAX queries",
    "text": "DAX queries\nFor our example, our measure is called largest_practice, and we want it to report the largest practice in each health board. Our DAX-based measure works as follows:\n\nour data table is called practices\n\nour column is PracticeListSize\n\nwe’re using the MAX() function to find the largest value (exactly like Excel)\n\nlargest_practice = MAX(practices[PracticeListSize])"
  },
  {
    "objectID": "bi_training/BI_for_beginners_service_session_04.html#adding-our-measure-to-our-report",
    "href": "bi_training/BI_for_beginners_service_session_04.html#adding-our-measure-to-our-report",
    "title": "BI for Beginners (service version) Session 4",
    "section": "Adding our measure to our report",
    "text": "Adding our measure to our report\n\nwe should be able to add our largest_practice measure to our report\nswitch back to the report tab\nyou should see the largest_practice measure appear in your practices data \n\n\n\n\n\n\n\n\nTask\n\n\n\n\nadd a new card \n\nin our new measures page, drag the largest_practice measure into that card\nwe also want to be able to look at different boards, so add a slicer  using the HBnames from the practices table"
  },
  {
    "objectID": "bi_training/BI_for_beginners_service_session_04.html#concatenating",
    "href": "bi_training/BI_for_beginners_service_session_04.html#concatenating",
    "title": "BI for Beginners (service version) Session 4",
    "section": "Concatenating",
    "text": "Concatenating\n\nso far, our largest_practice measure is ugly-but-functional\nwe can use the concatenate operator (&) to beautify it\n\n\n\n\n\n\n\nTask\n\n\n\n\nedit your largest_practice measure (go to the model view and select the measure in the data pane)\n\nyou can insert text by “quoting” it, and using & to join it to the result of your MAX()\n\nfor instance, largest_practice = \"Largest practice: \" & max(practices[PracticeListSize]) & \" patients\"\n\n\n\ngo back to the report, and refresh the report \n\nyou can also use the format visual section to change the font size, and drop/alter the category label"
  },
  {
    "objectID": "bi_training/BI_for_beginners_service_session_04.html#core-dax-functions",
    "href": "bi_training/BI_for_beginners_service_session_04.html#core-dax-functions",
    "title": "BI for Beginners (service version) Session 4",
    "section": "Core DAX functions",
    "text": "Core DAX functions\n\nseveral useful DAX functions work in basically the same way as MAX()\n\nlet’s try them out now\n\n\n\n\n\n\n\nTask\n\n\n\n\nmake a new measure called average_practice\n\ntry average_practice = AVERAGE(practices[PracticeListSize])\n\nadd this to a new card to test it\nnow tweak with concatenated text\n\nCOUNT(), and MIN() should also work in the same way"
  },
  {
    "objectID": "bi_training/BI_for_beginners_service_session_04.html#combining-functions",
    "href": "bi_training/BI_for_beginners_service_session_04.html#combining-functions",
    "title": "BI for Beginners (service version) Session 4",
    "section": "Combining functions",
    "text": "Combining functions\n\nmost measures will need more than one DAX function\nwe combine functions just like Excel, by bracketing them together\n\nfunction1(function2(data)) does function 2 on the data, then function 1 on that result\nwhen you’re reading/building formulas with many functions, two top-tips:\n\nmake sure you match your brackets\nread from the inside out"
  },
  {
    "objectID": "bi_training/BI_for_beginners_service_session_04.html#beautifying-measures",
    "href": "bi_training/BI_for_beginners_service_session_04.html#beautifying-measures",
    "title": "BI for Beginners (service version) Session 4",
    "section": "Beautifying measures",
    "text": "Beautifying measures\n\nour average_practice measure is pretty ugly\na whole number value would be more suitable\n\n\n\n\n\n\n\nTask\n\n\n\n\nclick on the average_practice measure, which should read average_practice = AVERAGE(practices[PracticeListSize])\n\nadd the INT() function, which converts a number to an integer (whole number)\n\nwe want INT() to wrap around the AVERAGE() function\naverage_practice = INT(AVERAGE(practices[PracticeListSize]))"
  },
  {
    "objectID": "bi_training/BI_for_beginners_service_session_04.html#combining-functions-for-number-formatting",
    "href": "bi_training/BI_for_beginners_service_session_04.html#combining-functions-for-number-formatting",
    "title": "BI for Beginners (service version) Session 4",
    "section": "Combining functions for number formatting",
    "text": "Combining functions for number formatting\n\nalternatively, we could round that result using round\n\n\naverage_practice = ROUND(AVERAGE(practices[PracticeListSize]), -2)\n\nthe -2 specifies the number of decimal places\n\n\ncare with the brackets!\nyou might prefer to do simple rounding in the format visual area"
  },
  {
    "objectID": "bi_training/BI_for_beginners_service_session_04.html#filter",
    "href": "bi_training/BI_for_beginners_service_session_04.html#filter",
    "title": "BI for Beginners (service version) Session 4",
    "section": "Filter",
    "text": "Filter\n\n\nFILTER() is the last DAX function we’re going to look at\nit lets us filter our data based on conditions\nsay we want to count how many big practices (more than 10000 patients) we have…\nbig_practices = countrows(filter(practices, practices[PracticeListSize] &gt; 10000))\nlet’s read this from the inside-out\n\n\nfilter(practices, practices[PracticeListSize] &gt; 10000) applies the filter function over the whole practices table\nit finds all the rows where PracticeListSize is greater than (&gt;) 10000\nthose rows are then counted by countrows()\n\nfinally, we save that number into our measure named big_practices"
  },
  {
    "objectID": "bi_training/BI_for_beginners_service_session_04.html#beautifying-our-measures",
    "href": "bi_training/BI_for_beginners_service_session_04.html#beautifying-our-measures",
    "title": "BI for Beginners (service version) Session 4",
    "section": "Beautifying our measures",
    "text": "Beautifying our measures\n\nthat’ll be another ugly-but-functional measure\nwe’ll use an alternative way of beautifying this one, to avoid making the formula too complicated\nmeasures can contain measures\ninstead of the table[column] format we’ve been using, we refer to measures by wrapping them in single square-brackets: [measure]\n\nlet’s create this now\n\n\n\n\n\n\n\nTask\n\n\n\n\nadd a new measure with the formula big_practices = countrows(filter(practices, practices[PracticeListSize] &gt; 10000)) to obtain the filtered count of big practices\ncreate a second new measure\nnice_big_practices = [big_practices] & \" practices with more than 10000 patients\"\nadd nice_big_practices to a new card\n\n\n\n\n\n\n\n\n\nTask\n\n\n\n\nPlease make a new measure named nice_average_practice\n\nUse concatenation to make the average_practice measure nicer to read\nUpdate your average measure card in the report"
  },
  {
    "objectID": "bi_training/BI_for_beginners_service_session_04.html#more-interesting-filters",
    "href": "bi_training/BI_for_beginners_service_session_04.html#more-interesting-filters",
    "title": "BI for Beginners (service version) Session 4",
    "section": "More interesting filters",
    "text": "More interesting filters\n\n\nFILTER() is one of the big building-blocks of Power BI\nwe can use it as a way of looking up matching data\nfor example, to find the name of the largest practice, we can:\n\nlargest_practice_name = CALCULATE (\n    VALUES (practices[Practice Name]),\n    FILTER (\n      ALL(practices[PracticeListSize]), \n      practices[PracticeListSize] = MAX (practices[PracticeListSize]\n            )\n            )\n)\n\n\nFILTER() finds the largest practice\n\nVALUES() returns the corresponding value from the Practice Name column\n\nCALCULATE() joins the FILTER() and VALUES() parts of the expression"
  },
  {
    "objectID": "bi_training/BI_for_beginners_service_session_04.html#dax-resources-beginners",
    "href": "bi_training/BI_for_beginners_service_session_04.html#dax-resources-beginners",
    "title": "BI for Beginners (service version) Session 4",
    "section": "DAX resources (beginners)",
    "text": "DAX resources (beginners)\n\nDAX sandbox - dax.do\n\nDAX introduction on the Microsoft site\n\n\nintroduction to DAX from Data Flair is particularly useful if you have a bit of prior experience\nSaurabh dasgupta’s DAX cheat sheet"
  },
  {
    "objectID": "bi_training/BI_for_beginners_service_session_04.html#dax-resources-advanced",
    "href": "bi_training/BI_for_beginners_service_session_04.html#dax-resources-advanced",
    "title": "BI for Beginners (service version) Session 4",
    "section": "DAX resources (advanced)",
    "text": "DAX resources (advanced)\n\nDAX reference\nDAX formatting utility\nHelpful tutorial on DAX variables\nMarco Russo and Alberto Ferrari’s book The Definitive Guide to DAX: Business intelligence for Microsoft Power BI, SQL Server Analysis Services, and Excel is the standard big reference book\nI’ve also heard good things about DAX Studio as a helper for writing more complex DAX functions - broadly analogous to an IDE for DAX"
  },
  {
    "objectID": "bi_training/BI_for_beginners_service_session_02.html",
    "href": "bi_training/BI_for_beginners_service_session_02.html",
    "title": "BI for Beginners (service version) Session 2",
    "section": "",
    "text": "Session materials\n\n\n\n\n\n\n.xlsx session data\nNo feedback found for this session"
  },
  {
    "objectID": "bi_training/BI_for_beginners_service_session_02.html#session-outline",
    "href": "bi_training/BI_for_beginners_service_session_02.html#session-outline",
    "title": "BI for Beginners (service version) Session 2",
    "section": "Session outline",
    "text": "Session outline\nVisualisation overload!\n\nwe’re going to build several visualisations\nwe’ll use some tidied data for this - today is all about using data to do interesting things\nnext time, we’ll get into the data wrangling needed to sort that data out"
  },
  {
    "objectID": "bi_training/BI_for_beginners_service_session_02.html#todays-visualisations",
    "href": "bi_training/BI_for_beginners_service_session_02.html#todays-visualisations",
    "title": "BI for Beginners (service version) Session 2",
    "section": "Today’s visualisations",
    "text": "Today’s visualisations\n\nmaps\ncolumn charts\nline graphs\nnumeric summaries of data\nfiltering and slicing tools"
  },
  {
    "objectID": "bi_training/BI_for_beginners_service_session_02.html#todays-data",
    "href": "bi_training/BI_for_beginners_service_session_02.html#todays-data",
    "title": "BI for Beginners (service version) Session 2",
    "section": "Today’s data",
    "text": "Today’s data\n\n\n\n\n\n\nTask\n\n\n\n\nStart a new report in Power BI\nOpen and load the two tables (gp_size and weekend_service) in data/s02_data.xlsx"
  },
  {
    "objectID": "bi_training/BI_for_beginners_service_session_02.html#loading-data-reminder",
    "href": "bi_training/BI_for_beginners_service_session_02.html#loading-data-reminder",
    "title": "BI for Beginners (service version) Session 2",
    "section": "Loading data reminder",
    "text": "Loading data reminder\n\n\n\n\n\n\nTask\n\n\n\n\nselect Excel (preview)\n\nselect Upload file\n\nnow drag your Excel workbook into the Power BI window"
  },
  {
    "objectID": "bi_training/BI_for_beginners_service_session_02.html#visualising-service-use",
    "href": "bi_training/BI_for_beginners_service_session_02.html#visualising-service-use",
    "title": "BI for Beginners (service version) Session 2",
    "section": "Visualising service use",
    "text": "Visualising service use\n\n\nFinal service use data report page"
  },
  {
    "objectID": "bi_training/BI_for_beginners_service_session_02.html#add-a-line-chart",
    "href": "bi_training/BI_for_beginners_service_session_02.html#add-a-line-chart",
    "title": "BI for Beginners (service version) Session 2",
    "section": "Add a line chart",
    "text": "Add a line chart\n\n\n\n\n\n\nTask\n\n\n\n\nGo to the report view\nGo to the visualisation pane, and add a line chart\nExpand it to fill the bottom three-quarters of the visualisation area"
  },
  {
    "objectID": "bi_training/BI_for_beginners_service_session_02.html#add-data",
    "href": "bi_training/BI_for_beginners_service_session_02.html#add-data",
    "title": "BI for Beginners (service version) Session 2",
    "section": "Add data",
    "text": "Add data\n\n\n\n\n\n\nTask\n\n\n\n\nClick the date column in the data pane, and drag the Date Hierarchy to the X-axis field\nDrag the three site columns to the Y-axis field"
  },
  {
    "objectID": "bi_training/BI_for_beginners_service_session_02.html#add-a-slicer",
    "href": "bi_training/BI_for_beginners_service_session_02.html#add-a-slicer",
    "title": "BI for Beginners (service version) Session 2",
    "section": "Add a slicer",
    "text": "Add a slicer\n\n\n\n\n\n\nTask\n\n\n\n\nClick off your line graph, then add a slicer\n\nDrag the year field from the Date Hierarchy into the slicer Field\n\n\n\n\n\n\n\n\n\nTask\n\n\n\n\nAdd a second slicer in the same way\nThis time, drag the weekend column into the Field\nSelect the Format your visual menu\n\nFormat the slicer to use a dropdown"
  },
  {
    "objectID": "bi_training/BI_for_beginners_service_session_02.html#add-some-cards",
    "href": "bi_training/BI_for_beginners_service_session_02.html#add-some-cards",
    "title": "BI for Beginners (service version) Session 2",
    "section": "Add some cards",
    "text": "Add some cards\n\n\n\n\n\n\nTask\n\n\n\n\nAdd a card\n\nDrag site_a into the Field\nUse the dropdown on Sum of site_a to select average\nRepeat for site_b and site_c\n\nAdjust the decimal places via the Callout value section of the format menu"
  },
  {
    "objectID": "bi_training/BI_for_beginners_service_session_02.html#tidy-up-the-names",
    "href": "bi_training/BI_for_beginners_service_session_02.html#tidy-up-the-names",
    "title": "BI for Beginners (service version) Session 2",
    "section": "Tidy up the names",
    "text": "Tidy up the names\n\n\n\n\n\n\nTask\n\n\n\n\nGo round using Rename for this visual to tidy up the names\n\nName the page of the report appropriately"
  },
  {
    "objectID": "bi_training/BI_for_beginners_service_session_02.html#end-result",
    "href": "bi_training/BI_for_beginners_service_session_02.html#end-result",
    "title": "BI for Beginners (service version) Session 2",
    "section": "End result",
    "text": "End result\n\n\nFinal service use data report page"
  },
  {
    "objectID": "bi_training/BI_for_beginners_service_session_02.html#gp-practice-size",
    "href": "bi_training/BI_for_beginners_service_session_02.html#gp-practice-size",
    "title": "BI for Beginners (service version) Session 2",
    "section": "GP practice size",
    "text": "GP practice size\n\n\nFinal GP practice size report page"
  },
  {
    "objectID": "bi_training/BI_for_beginners_service_session_02.html#add-a-map",
    "href": "bi_training/BI_for_beginners_service_session_02.html#add-a-map",
    "title": "BI for Beginners (service version) Session 2",
    "section": "Add a map",
    "text": "Add a map\n\n\n\n\n\n\nTask\n\n\n\n\nAdd a new page to your report\nAdd a map and expand to fill the left-hand half of the visualisation area\n\nFrom the gp_size table, drag the Postcode column to the Location field\nNow drag the ListSize column to the Bubble size field"
  },
  {
    "objectID": "bi_training/BI_for_beginners_service_session_02.html#format-the-map",
    "href": "bi_training/BI_for_beginners_service_session_02.html#format-the-map",
    "title": "BI for Beginners (service version) Session 2",
    "section": "Format the map",
    "text": "Format the map\n\n\n\n\n\n\nTask\n\n\n\n\nFrom the Format visual menu, change the map style to greyscale\n\n(feel free to play around with the bubble size too)"
  },
  {
    "objectID": "bi_training/BI_for_beginners_service_session_02.html#colour-the-bubbles-by-health-board",
    "href": "bi_training/BI_for_beginners_service_session_02.html#colour-the-bubbles-by-health-board",
    "title": "BI for Beginners (service version) Session 2",
    "section": "Colour the bubbles by health board",
    "text": "Colour the bubbles by health board\n\n\n\n\n\n\nTask\n\n\n\n\nCan you find a way of colouring the bubbles by health board?  \n\n\n\n\n(add the HBName to the Legend field)"
  },
  {
    "objectID": "bi_training/BI_for_beginners_service_session_02.html#add-a-slicer-1",
    "href": "bi_training/BI_for_beginners_service_session_02.html#add-a-slicer-1",
    "title": "BI for Beginners (service version) Session 2",
    "section": "Add a slicer",
    "text": "Add a slicer\n\n\n\n\n\n\nTask\n\n\n\n\nAdd a slicer for health board\nUse the Format visual options to change this to a dropdown\nTest what happens when you change this"
  },
  {
    "objectID": "bi_training/BI_for_beginners_service_session_02.html#add-a-population-summary-card",
    "href": "bi_training/BI_for_beginners_service_session_02.html#add-a-population-summary-card",
    "title": "BI for Beginners (service version) Session 2",
    "section": "Add a population summary card",
    "text": "Add a population summary card\n\n\n\n\n\n\nTask\n\n\n\n\nAdd a card, and drag the ListSize column to the Fields area\nMake sure that the SIMD2020v2 value is set to Min\nAdd a suitable title and format to suit"
  },
  {
    "objectID": "bi_training/BI_for_beginners_service_session_02.html#add-a-column-chart",
    "href": "bi_training/BI_for_beginners_service_session_02.html#add-a-column-chart",
    "title": "BI for Beginners (service version) Session 2",
    "section": "Add a column chart",
    "text": "Add a column chart\n\n\n\n\n\n\nTask\n\n\n\n\nAdd a stacked column chart\nAdd the Name on the X-axis, the ListSize on the Y-axis, and the HBName in the legend"
  },
  {
    "objectID": "bi_training/BI_for_beginners_service_session_02.html#add-a-column-chart-showing-deprivation-scores",
    "href": "bi_training/BI_for_beginners_service_session_02.html#add-a-column-chart-showing-deprivation-scores",
    "title": "BI for Beginners (service version) Session 2",
    "section": "Add a column chart showing deprivation scores",
    "text": "Add a column chart showing deprivation scores\n\n\n\n\n\n\nTask\n\n\n\n\nAdd another stacked column chart\nAdd the SIMD2020v2_quantile on the X-axis, and the Name on the Y-axis. Make sure the Name field is set to count"
  },
  {
    "objectID": "bi_training/BI_for_beginners_service_session_02.html#tidy-up-the-names-1",
    "href": "bi_training/BI_for_beginners_service_session_02.html#tidy-up-the-names-1",
    "title": "BI for Beginners (service version) Session 2",
    "section": "Tidy up the names",
    "text": "Tidy up the names\n\n\n\n\n\n\nTask\n\n\n\n\nGo round using Rename for this visual to tidy up the names\nName the page of the report appropriately"
  },
  {
    "objectID": "bi_training/BI_for_beginners_service_session_02.html#end-result-1",
    "href": "bi_training/BI_for_beginners_service_session_02.html#end-result-1",
    "title": "BI for Beginners (service version) Session 2",
    "section": "End result",
    "text": "End result\n\n\nFinal report page"
  },
  {
    "objectID": "bi_training/BI_for_beginners_service_session_02.html#homework-tasks",
    "href": "bi_training/BI_for_beginners_service_session_02.html#homework-tasks",
    "title": "BI for Beginners (service version) Session 2",
    "section": "Homework tasks",
    "text": "Homework tasks\n\nIs there any relationship between practice size and SIMD2020 deprivation scores in the GP data? How could you show that relationship in a visual?\nIs there any month-to-month or seasonal change in the weekend service use data? How could you show that relationship in a visual?"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "These pages contain links and resources for our one-off training sessions. You can also find links to our main multi-session training courses via our TURAS page. All our sessions are:\n\nlive and practical/interactive. They aren’t scripted, and they prioritise Q&A, working through the material, and collective problem-solving\nfree to attend\nopen to all\naimed at members of the KIND workforce across Scotland’s health, social care, and housing sector"
  },
  {
    "objectID": "about.html#about-these-pages",
    "href": "about.html#about-these-pages",
    "title": "About",
    "section": "",
    "text": "These pages contain links and resources for our one-off training sessions. You can also find links to our main multi-session training courses via our TURAS page. All our sessions are:\n\nlive and practical/interactive. They aren’t scripted, and they prioritise Q&A, working through the material, and collective problem-solving\nfree to attend\nopen to all\naimed at members of the KIND workforce across Scotland’s health, social care, and housing sector"
  },
  {
    "objectID": "about.html#about-the-kind-learning-network",
    "href": "about.html#about-the-kind-learning-network",
    "title": "About",
    "section": "About the KIND learning network",
    "text": "About the KIND learning network\nThe KIND learning network is an inclusive and supportive community of practice for staff across the knowledge, information, and data workforce. It exists to further the leading role of the community in the digital transformation of health and care by supporting learning, sharing of best practice, and developing interdisciplinary collaborations."
  },
  {
    "objectID": "about.html#what-does-kind-stand-for",
    "href": "about.html#what-does-kind-stand-for",
    "title": "About",
    "section": "What does KIND stand for?",
    "text": "What does KIND stand for?\nKIND = Knowledge, Information, and Data.\nThese topics roughly correspond to three main professional groups:\n\nthose who work with data and/or information\nthose working in knowledge management, research & development, and libraries\nthose working in records"
  },
  {
    "objectID": "about.html#who-is-the-kind-network-for",
    "href": "about.html#who-is-the-kind-network-for",
    "title": "About",
    "section": "Who is the KIND network for?",
    "text": "Who is the KIND network for?\nThe KIND network is open to everyone, but is particularly aimed at staff from Scotland’s health, social care, and housing workforce who are interested in developing their knowledge, information, and data skills."
  },
  {
    "objectID": "about.html#what-does-the-kind-network-do",
    "href": "about.html#what-does-the-kind-network-do",
    "title": "About",
    "section": "What does the KIND network do?",
    "text": "What does the KIND network do?\nThe KIND network does three main things:\n\nWe provide a range of training courses aimed at developing specialist professional skills. For example, we run Excel, Power BI, and R training courses at a range of levels. All our courses are free to access.\nWe provide a social learning space in the Teams channel, with a range of events aimed at different aspects of this area of work. For example, we run a weekly topic-based community meetup session and a mentoring scheme.\nWe work with key national stakeholders to support and champion these training and learning activities. For example, we are currently developing resources to support analysts transitioning to R.\n\nAll these activities are responsive to your needs. If you feel there’s an important area of relevant work where we are not contributing, please get in touch."
  },
  {
    "objectID": "about.html#who-runsownsfunds-the-kind-network",
    "href": "about.html#who-runsownsfunds-the-kind-network",
    "title": "About",
    "section": "Who runs/owns/funds the KIND network?",
    "text": "Who runs/owns/funds the KIND network?\nThe KIND Learning Network is based at NHS Education for Scotland, as part of the Digitally Enabled Workforce programme. That’s a programme that builds foundational resources to support digital skills and leadership at all levels. You might have heard about our Professional Development Award in Technology Enabled Care programme, used the M365 Skills Hub, or been involved with the Digital Leadership Programme. This work is all funded through Scottish Government via the Digital Health and Care Portfolio Board."
  },
  {
    "objectID": "about.html#why-does-the-kind-network-exist",
    "href": "about.html#why-does-the-kind-network-exist",
    "title": "About",
    "section": "Why does the KIND network exist?",
    "text": "Why does the KIND network exist?\nThis network exists to support people who work with knowledge, information, and data as they work to transform health and social care. There’s a large (and growing) workforce responsible for this work in Scotland. However, this workforce is really diverse. It’s not like e.g. nursing or other NMHAP professions where there are fixed entry and promotion criteria. Professional development is more complicated and messy than that. A good example is the lack of standardised job titles for KIND workers. We currently have something like 350 different job titles in the Teams channel. That splitting up of job families contributes to KIND workers being less visible than I think they should be. Kathleen Grey and colleagues called them “ghosts in the machine”"
  },
  {
    "objectID": "about.html#where-does-kind-work-happen",
    "href": "about.html#where-does-kind-work-happen",
    "title": "About",
    "section": "Where does KIND work happen?",
    "text": "Where does KIND work happen?\nKIND work happens in many places across health and social care in Scotland. For example, you might find KIND workers in NHS Boards (national or territorial), other governmental health bodies, Local Authorities, social care care organisations, higher education, in the private sector, professional associations, or in health and social care partnerships"
  },
  {
    "objectID": "about.html#help-i-have-an-unmet-query",
    "href": "about.html#help-i-have-an-unmet-query",
    "title": "About",
    "section": "Help! I have an unmet query…",
    "text": "Help! I have an unmet query…\n\n\nTeams channel link = Mailing list link\n\nFor anything, please contact Brendan Clarke (brendan.clarke2@nhs.scot)."
  },
  {
    "objectID": "BI_main.html",
    "href": "BI_main.html",
    "title": "Power Platform training",
    "section": "",
    "text": "Session\nDate\nArea\nLevel\n\n\n\nBI for beginners (session 3)\n10:00-11:30 Tue 10th June 2025\nPower BI\n🌶\n\n:beginner-level\n\n\nBI for beginners (session 4)\n10:00-11:30 Tue 17th June 2025\nPower BI\n🌶\n\n:beginner-level\n\n\nPower BI errors\n12:30-13:30 Wed 2nd July 2025\nPower Platform\n🌶\n\n:beginner-level"
  },
  {
    "objectID": "BI_main.html#power-platform-training-schedule",
    "href": "BI_main.html#power-platform-training-schedule",
    "title": "Power Platform training",
    "section": "",
    "text": "Session\nDate\nArea\nLevel\n\n\n\nBI for beginners (session 3)\n10:00-11:30 Tue 10th June 2025\nPower BI\n🌶\n\n:beginner-level\n\n\nBI for beginners (session 4)\n10:00-11:30 Tue 17th June 2025\nPower BI\n🌶\n\n:beginner-level\n\n\nPower BI errors\n12:30-13:30 Wed 2nd July 2025\nPower Platform\n🌶\n\n:beginner-level"
  },
  {
    "objectID": "BI_main.html#power-platform-session-materials",
    "href": "BI_main.html#power-platform-session-materials",
    "title": "Power Platform training",
    "section": "Power Platform session materials",
    "text": "Power Platform session materials"
  },
  {
    "objectID": "bi_training/BI_for_beginners_service_session_01.html",
    "href": "bi_training/BI_for_beginners_service_session_01.html",
    "title": "BI for Beginners (service version) Session 1",
    "section": "",
    "text": "Session materials\n\n\n\n\n\n\n.xlsx session data\nNo feedback found for this session"
  },
  {
    "objectID": "bi_training/BI_for_beginners_service_session_01.html#session-outline",
    "href": "bi_training/BI_for_beginners_service_session_01.html#session-outline",
    "title": "BI for Beginners (service version) Session 1",
    "section": "Session outline",
    "text": "Session outline\n\npractical first\n\nloading data\nmaking visualizations\nmanipulating data\n\n\nthen some explanation and examples\n\nwhat is it for?\nhow does it work?"
  },
  {
    "objectID": "bi_training/BI_for_beginners_service_session_01.html#two-words-of-warning",
    "href": "bi_training/BI_for_beginners_service_session_01.html#two-words-of-warning",
    "title": "BI for Beginners (service version) Session 1",
    "section": "Two words of warning…",
    "text": "Two words of warning…\n\nThis course uses Power BI Service. Most of the skills here are transferable to other versions of Power BI, but you’ll need Service to follow the examples\nLicencing and publication can be complicated in Power BI. We don’t discuss that much here, but it’s important to understand the implications if you’re planning to use it in practice. The KIND Network is a good resource for those kinds of questions."
  },
  {
    "objectID": "bi_training/BI_for_beginners_service_session_01.html#hospital-occupancy-data",
    "href": "bi_training/BI_for_beginners_service_session_01.html#hospital-occupancy-data",
    "title": "BI for Beginners (service version) Session 1",
    "section": "Hospital occupancy data",
    "text": "Hospital occupancy data\n\n\n\n\n\n\nTask\n\n\n\n\ndownload, and open the sample s01_data.xlsx workbook in Excel\nhave a look at the two sheets, called occupancy_sh and wards_sh\n\neach contains a table, which are named occupancy and wards\n\nclose the Excel file"
  },
  {
    "objectID": "bi_training/BI_for_beginners_service_session_01.html#open-power-bi-service",
    "href": "bi_training/BI_for_beginners_service_session_01.html#open-power-bi-service",
    "title": "BI for Beginners (service version) Session 1",
    "section": "Open Power BI service",
    "text": "Open Power BI service\n\n\n\n\n\n\nTask\n\n\n\n\nNavigate to https://app.powerbi.com/\n\nSelect New Report"
  },
  {
    "objectID": "bi_training/BI_for_beginners_service_session_01.html#loading-data",
    "href": "bi_training/BI_for_beginners_service_session_01.html#loading-data",
    "title": "BI for Beginners (service version) Session 1",
    "section": "Loading data",
    "text": "Loading data\n\n\n\n\n\n\nTask\n\n\n\n\nselect Excel (preview) \n\nselect Upload file \n\nnow drag your Excel workbook into the Power BI window"
  },
  {
    "objectID": "bi_training/BI_for_beginners_service_session_01.html#hospital-occupancy-data-1",
    "href": "bi_training/BI_for_beginners_service_session_01.html#hospital-occupancy-data-1",
    "title": "BI for Beginners (service version) Session 1",
    "section": "Hospital occupancy data",
    "text": "Hospital occupancy data\n\n\n\n\n\n\nTask\n\n\n\n\nwe can either load the worksheets or the tables from the Excel file\n\nif you’re planning to work with data from Excel, we’d strongly advise you to work with tables rather than worksheets\n\n\nselect the two tables in the preview and select Create"
  },
  {
    "objectID": "bi_training/BI_for_beginners_service_session_01.html#the-report-view",
    "href": "bi_training/BI_for_beginners_service_session_01.html#the-report-view",
    "title": "BI for Beginners (service version) Session 1",
    "section": "The Report View",
    "text": "The Report View\n\n\nReport view\n\n\nthis is where we’ll build our dashboard\ntake a minute to look round - particularly noting the three panes (Filters, Visualizations, and Data) on the right of the screen\nyou should also save your report at this point"
  },
  {
    "objectID": "bi_training/BI_for_beginners_service_session_01.html#a-note-on-data-loading",
    "href": "bi_training/BI_for_beginners_service_session_01.html#a-note-on-data-loading",
    "title": "BI for Beginners (service version) Session 1",
    "section": "A note on data loading",
    "text": "A note on data loading\n\ndata loading is one-way\n\nwhat we do in Power BI won’t change the underlying files\nbut if our files change, our dashboard will change\n\nwe’ll usually need to refresh our data to see that"
  },
  {
    "objectID": "bi_training/BI_for_beginners_service_session_01.html#a-first-visual",
    "href": "bi_training/BI_for_beginners_service_session_01.html#a-first-visual",
    "title": "BI for Beginners (service version) Session 1",
    "section": "A first visual",
    "text": "A first visual\n\nfor now, let’s use this data to build a simple visualization\n\n\n\n\n\n\n\nTask\n\n\n\n\nmake sure you select Edit from the menu  \n\nSelect Line chart from the visualizations pane  \n\nEnlarge the visualisation to fill the page by dragging the corners of the new line chart to fill the report area\nAdd some data:\n\nDrag the OccupiedBeds column from the occupancy table to the Y-axis field\nDrag the date column from the occupancy table to the X-axis field \n\n\n\n\n\n\n\nyou should have a nice, craggy, time series graph of bed occupancy  \n\ndon’t panic if you have a straight-line graph\n\nPower BI will usually aggregate your data. This straight line graph comes from Power BI adding all the values for the years 2022 and 2023 together, and plotting a graph between those two points\nyou control aggregation from the drop-down menu on the data in your field \n\nwe can do similar aggregations on our other data too. Swap Sum for Average in your OccupiedBeds field"
  },
  {
    "objectID": "bi_training/BI_for_beginners_service_session_01.html#making-our-chart-more-useful",
    "href": "bi_training/BI_for_beginners_service_session_01.html#making-our-chart-more-useful",
    "title": "BI for Beginners (service version) Session 1",
    "section": "Making our chart more useful",
    "text": "Making our chart more useful\n\n\n\n\n\n\nTask\n\n\n\n\nTry dragging the WardName column to the Legend field  \n\n\n\n\nor to the Small multiples field:"
  },
  {
    "objectID": "bi_training/BI_for_beginners_service_session_01.html#formatting",
    "href": "bi_training/BI_for_beginners_service_session_01.html#formatting",
    "title": "BI for Beginners (service version) Session 1",
    "section": "Formatting",
    "text": "Formatting\n\n\nformatting options live in the paintbrush tab above the grid of visualisations\nthere are lots of options there\na good homework project would be to experiment with re-styling your graph"
  },
  {
    "objectID": "bi_training/BI_for_beginners_service_session_01.html#changing-our-chart-type",
    "href": "bi_training/BI_for_beginners_service_session_01.html#changing-our-chart-type",
    "title": "BI for Beginners (service version) Session 1",
    "section": "Changing our chart type",
    "text": "Changing our chart type\n\nthis is easy: just make sure your chart is selected (look for the tiny grey corners ), and click a new graph icon (liked stacked columns )\nthat will change the type of graph you’re building - in this case, to a stacked column chart"
  },
  {
    "objectID": "bi_training/BI_for_beginners_service_session_01.html#whats-happening-behind-the-scenes",
    "href": "bi_training/BI_for_beginners_service_session_01.html#whats-happening-behind-the-scenes",
    "title": "BI for Beginners (service version) Session 1",
    "section": "What’s happening behind the scenes?",
    "text": "What’s happening behind the scenes?\n\nto to your workspace \nyou should see a graph for your dashboard \nnow follow the ... menu from the Semantic model to Open data model"
  },
  {
    "objectID": "bi_training/BI_for_beginners_service_session_01.html#the-data-model",
    "href": "bi_training/BI_for_beginners_service_session_01.html#the-data-model",
    "title": "BI for Beginners (service version) Session 1",
    "section": "The data model",
    "text": "The data model\n\nthe data model gives you an overview of your data \n\nwe can also modify aspects of the data from here (data types, relationships, …)"
  },
  {
    "objectID": "bi_training/BI_for_beginners_service_session_01.html#calculated-columns",
    "href": "bi_training/BI_for_beginners_service_session_01.html#calculated-columns",
    "title": "BI for Beginners (service version) Session 1",
    "section": "Calculated columns",
    "text": "Calculated columns\n\n\nCalculated columns are how we describe columns calculated from other values\nHere, we could calculate something simple for each ward - how about the number of non-closed beds available?\n\n\n\n\n\n\n\nTask\n\n\n\n\nselect New column from the ribbon  \n\nnow we write a formula in the formula bar: AvailableBeds = [BedComp] - [ClosedBed]  \n\nAvailableBeds = our new column name\n\n[BedComp] and [ClosedBed] are the existing column names that we’re subtracting\nnow return to your report. You should see your new calculated column available for use\n\n\n\n\nCongratulations! You’ve just written your first DAX formula."
  },
  {
    "objectID": "bi_training/BI_for_beginners_service_session_01.html#what-is-dax",
    "href": "bi_training/BI_for_beginners_service_session_01.html#what-is-dax",
    "title": "BI for Beginners (service version) Session 1",
    "section": "What is DAX?",
    "text": "What is DAX?\nDAX (Data Analysis eXpressions) is the formula language used in Power BI, Power Pivot, and across various MS SQL tools…\n\nsimilar to Excel formulas\n\nfunctions have similar names and similar behaviours\nDAX is more ‘fussy’ than Excel\n\n\nwe’ll talk about DAX more in session 4"
  },
  {
    "objectID": "bi_training/BI_for_beginners_service_session_01.html#what-is-power-bi-for",
    "href": "bi_training/BI_for_beginners_service_session_01.html#what-is-power-bi-for",
    "title": "BI for Beginners (service version) Session 1",
    "section": "What is Power BI for?",
    "text": "What is Power BI for?\n\nNHS Scotland TURAS intelligence\n\nNHS Digital Adult Social Care dashboard - particularly great for showing how Power BI can be used as a hub for data. I imagine how many Excel files on shared network drives this might have required before…\n\nNorthern Ireland Department of Health COVID dashboard - an object lesson in scale, and I’d be keen to use Power BI if a service potentially was going to be very busy, or experience highly variable load\n\nQI project dashboard from NHS England’s East London NHS Foundation Trust - some useful thoughts about implementing a project in Power BI"
  },
  {
    "objectID": "bi_training/BI_for_beginners_service_session_01.html#power-bi-has-attractive-features",
    "href": "bi_training/BI_for_beginners_service_session_01.html#power-bi-has-attractive-features",
    "title": "BI for Beginners (service version) Session 1",
    "section": "Power BI has attractive features",
    "text": "Power BI has attractive features\n\nInteractive\nDynamic\nPresenting data from many sources\nScalable\nSeparates data from analysis/presentation"
  },
  {
    "objectID": "bi_training/BI_for_beginners_service_session_01.html#homework-tasks",
    "href": "bi_training/BI_for_beginners_service_session_01.html#homework-tasks",
    "title": "BI for Beginners (service version) Session 1",
    "section": "Homework tasks",
    "text": "Homework tasks\n\nTry using the filters pane to play with your dashboard. How do filters change your visual?\nCould you use the data from this session to find out how often a ward is overcrowded?\nCan you plot the AvailableBeds column?"
  },
  {
    "objectID": "bi_training/BI_for_beginners_service_session_03.html",
    "href": "bi_training/BI_for_beginners_service_session_03.html",
    "title": "BI for Beginners (service version) Session 3",
    "section": "",
    "text": "No feedback found for this session"
  },
  {
    "objectID": "bi_training/BI_for_beginners_service_session_03.html#session-outline",
    "href": "bi_training/BI_for_beginners_service_session_03.html#session-outline",
    "title": "BI for Beginners (service version) Session 3",
    "section": "Session outline",
    "text": "Session outline\n\nIn this session, we’re going to build part of the GP practice size dashboard from last time\nBut we’ll do this from raw data, rather than the play data we used last time\nWe’ll bring that data in directly from the web\nWe’ll need to wrangle that data to get it to behave"
  },
  {
    "objectID": "bi_training/BI_for_beginners_service_session_03.html#a-word-of-warning",
    "href": "bi_training/BI_for_beginners_service_session_03.html#a-word-of-warning",
    "title": "BI for Beginners (service version) Session 3",
    "section": "A word of warning",
    "text": "A word of warning\n\ndata wrangling is one area where the web version of Power BI is much less capable than the desktop version\nthat means that we’re going to use Excel/PowerQuery to do most of the heavy lifing for us here\nif the desktop version of Power BI is any guide, I’d hope that these tools will eventually be integrated into the web version of Power BI before too long"
  },
  {
    "objectID": "bi_training/BI_for_beginners_service_session_03.html#data-wrangling",
    "href": "bi_training/BI_for_beginners_service_session_03.html#data-wrangling",
    "title": "BI for Beginners (service version) Session 3",
    "section": "Data wrangling",
    "text": "Data wrangling\n\nseveral different sources needed\n\nsome real open data about GP practices 🔗\n\nHealth board names 🔗\nDemographic data for GP practices 🔗"
  },
  {
    "objectID": "bi_training/BI_for_beginners_service_session_03.html#load-our-data",
    "href": "bi_training/BI_for_beginners_service_session_03.html#load-our-data",
    "title": "BI for Beginners (service version) Session 3",
    "section": "Load our data",
    "text": "Load our data\n\n\n\n\n\n\nTask\n\n\n\n\nOpen Excel and create a blank workbook\n\nIn the Data tab of the ribbon menu, select the From Web option  \n\nSupply the first URL \n\nSelect Load \n\nRepeat with the remaining URLs\nSave your workbook"
  },
  {
    "objectID": "bi_training/BI_for_beginners_service_session_03.html#inspect-our-data",
    "href": "bi_training/BI_for_beginners_service_session_03.html#inspect-our-data",
    "title": "BI for Beginners (service version) Session 3",
    "section": "Inspect our data",
    "text": "Inspect our data\n\nYou should be able to see each of your datasets in Excel as separate worksheets (with pretty horrible names)"
  },
  {
    "objectID": "bi_training/BI_for_beginners_service_session_03.html#powerquery",
    "href": "bi_training/BI_for_beginners_service_session_03.html#powerquery",
    "title": "BI for Beginners (service version) Session 3",
    "section": "PowerQuery",
    "text": "PowerQuery\nNext, we’ll open these three sets of data in PowerQuery by selecting Launch Power Query Editor... from the Get Data menu:"
  },
  {
    "objectID": "bi_training/BI_for_beginners_service_session_03.html#navigating-powerquery",
    "href": "bi_training/BI_for_beginners_service_session_03.html#navigating-powerquery",
    "title": "BI for Beginners (service version) Session 3",
    "section": "Navigating PowerQuery",
    "text": "Navigating PowerQuery\n\n\nPowerQuery interface\n\n\non the left, you’ll see three queries, corresponding to the three datasets you loaded from the web\nin the centre of the page, you’ll see an Excel-like preview of your data\nabove the data, you’ll see an Excel-like ribbon menu and formula area\non the right, you’ll see the details of your query"
  },
  {
    "objectID": "bi_training/BI_for_beginners_service_session_03.html#renaming-our-data",
    "href": "bi_training/BI_for_beginners_service_session_03.html#renaming-our-data",
    "title": "BI for Beginners (service version) Session 3",
    "section": "Renaming our data",
    "text": "Renaming our data\n\nTo make life easier, we’ll rename each query by right-clicking the query title on the left-hand side of the screen :\n\ncall the GP practice details practices\n\ncall the NHS boards data practices\n\ncall the demographic data demographics"
  },
  {
    "objectID": "bi_training/BI_for_beginners_service_session_03.html#task-list",
    "href": "bi_training/BI_for_beginners_service_session_03.html#task-list",
    "title": "BI for Beginners (service version) Session 3",
    "section": "Task list",
    "text": "Task list\n\nwe can discard some of the practices data\nwe’ll need to join boards and practices to get nice health board names in our dashboard\nwe’ll need to re-shape demographics\n\nand we’ll need to send our wrangled data to Power BI"
  },
  {
    "objectID": "bi_training/BI_for_beginners_service_session_03.html#first-steps-in-powerquery",
    "href": "bi_training/BI_for_beginners_service_session_03.html#first-steps-in-powerquery",
    "title": "BI for Beginners (service version) Session 3",
    "section": "First steps in PowerQuery",
    "text": "First steps in PowerQuery\n\nfind your boards data\n(reminder about the duty of data minimization)\nwe can safely lose several columns:\n\n\n_id, HBDateEnacted, HBDateArchived and Country are all spare\nright click the column header to Remove"
  },
  {
    "objectID": "bi_training/BI_for_beginners_service_session_03.html#the-big-idea",
    "href": "bi_training/BI_for_beginners_service_session_03.html#the-big-idea",
    "title": "BI for Beginners (service version) Session 3",
    "section": "The big idea",
    "text": "The big idea\n\nonce you’ve removed a column, you’ll see a change to the Applied Steps area:  \n\nwe’ve gained an extra step, showing that we’ve removed a column"
  },
  {
    "objectID": "bi_training/BI_for_beginners_service_session_03.html#steps",
    "href": "bi_training/BI_for_beginners_service_session_03.html#steps",
    "title": "BI for Beginners (service version) Session 3",
    "section": "Steps",
    "text": "Steps\n\nif you click an earlier step, you can see the state of your data at that point\nif you click the X to the left of the step, you can delete (effectively undo) that step\nif you click the gearwheel to the right of the step name, you can alter the way that step worked\n\nif you’re code-confident, you can also tweak the PowerQuery M formula that appears in the formula bar"
  },
  {
    "objectID": "bi_training/BI_for_beginners_service_session_03.html#powerquery---excel",
    "href": "bi_training/BI_for_beginners_service_session_03.html#powerquery---excel",
    "title": "BI for Beginners (service version) Session 3",
    "section": "PowerQuery -> Excel",
    "text": "PowerQuery -&gt; Excel\n\nOnce you’ve removed the unnecessary columns, click Close & Load to commit your changes \n\nthat will return your data to Excel"
  },
  {
    "objectID": "bi_training/BI_for_beginners_service_session_03.html#excel---power-bi",
    "href": "bi_training/BI_for_beginners_service_session_03.html#excel---power-bi",
    "title": "BI for Beginners (service version) Session 3",
    "section": "Excel -> Power BI",
    "text": "Excel -&gt; Power BI\n\nfrom Excel, rename your tables\n\ncall the GP practice details practices\n\ncall the NHS boards data practices\n\ncall the demographic data demographics\n\n\n\nensure the .xlsx is saved\nconnect to Power BI as before"
  },
  {
    "objectID": "bi_training/BI_for_beginners_service_session_03.html#service-vs-desktop",
    "href": "bi_training/BI_for_beginners_service_session_03.html#service-vs-desktop",
    "title": "BI for Beginners (service version) Session 3",
    "section": "Service vs Desktop",
    "text": "Service vs Desktop\n\nwe’ll need to do this slighly ungainly Excel -&gt; PowerQuery -&gt; Excel -&gt; PowerBI route whenever we tweak our data\non the desktop, PowerQuery is integrated into Power BI, which makes things much smoother\nthis might be a good point to explore setting up a connection between your OneDrive and Power BI service as it’ll reduce the messiness of re-re-uploading data as you tweak it"
  },
  {
    "objectID": "bi_training/BI_for_beginners_service_session_03.html#joining-data",
    "href": "bi_training/BI_for_beginners_service_session_03.html#joining-data",
    "title": "BI for Beginners (service version) Session 3",
    "section": "Joining data",
    "text": "Joining data\n\nthere’s an HB column in both the boards and practices data\nwe can link these up so that we can use the actual proper health board names in our dashboard\n\n\n\n\n\n\n\nTask\n\n\n\n\nselect the HB column and select Merge Queries  \n\nfill in the options in the merge pop-up  \n\nnote that this gives us lots of information about how the join is likely to work\n\n\n\n\na slight puzzle: the join initially looks pretty unpromising \n\nhere, Power Query is effectively telling you that there are several columns packed into this new column\nwe can unpack all or some of the columns from each row using the menu in the column header.\nI think we only want HBName - but feel free to experiment as you can always backtrack from the query settings pane\n\n\n\n\n\n\n\nTask\n\n\n\n\nselect the column(s) you want to keep from the column header  \n\n\n\n\n\nyou can also access lots of other Excel-ish options by right-clicking the column\nsomething we can do there is to rename this column to give a nicer name (which we’ll need to use later while building our visualisation)\n\n\n\n\n\n\n\nTask\n\n\n\n\nplease rename your new column to “HBName”\n\nnote that you can also do this inside the formula bar at the top of the screen   This formula is written in Power Query M, which we’ll discuss later\ncheck that you now have nice board names in the practices data\nremember to close & apply"
  },
  {
    "objectID": "bi_training/BI_for_beginners_service_session_03.html#re-shaping-data",
    "href": "bi_training/BI_for_beginners_service_session_03.html#re-shaping-data",
    "title": "BI for Beginners (service version) Session 3",
    "section": "Re-shaping data",
    "text": "Re-shaping data\n\nour demographics data is going to be hard to plot\nPower BI generally expects data with one variable per column\nin this data, our useful variables (like the count of patients in particular age or sex brackets) are spread across several columns\nwe’ll reshape it using Power Query to make our life easier\n\n\n\n\n\n\n\nTask\n\n\n\n\nAs before, please Transform Data\n\nUse the Select columns tool (or delete as before) to remove the id, Date, HSPC, HB, and SexQF columns\nYou can do this in Power Query directly with = Table.RemoveColumns(#\"Changed Type\",{\"_id\", \"Date\", \"HB\", \"HSCP\", \"SexQF\"})\n\nSelect the PracticeCode and Sex columns, then select Unpivot Other Columns\n\n\n\n\n\nThat should give us our data in long form, so that it looks like this:  \n\nthis will make it easier to plot in Power BI as we usually need to have one variable (like number of patients in an age/sex bracket) in a single column\nwe can now remove unwanted values by filtering \n\n\n\n\n\n\n\n\nTask\n\n\n\n\nFrom the Attribute column, please remove the QF rows,\nFrom the Attribute column, please remove the AllAges rows\nFrom the Sex column, please remove the All rows"
  },
  {
    "objectID": "bi_training/BI_for_beginners_service_session_03.html#transforming-values",
    "href": "bi_training/BI_for_beginners_service_session_03.html#transforming-values",
    "title": "BI for Beginners (service version) Session 3",
    "section": "Transforming values",
    "text": "Transforming values\n\nthe last type of reshaping to show off is about transforming values\n\n\n\n\n\n\n\nTask\n\n\n\n\nSplit the Attribute column by Digit to Non-digit\n\nreplace values in the new Attribute.1 column to remove the “Ages”\nthen in Attribute.2, two replacements to remove the “to”s and replace the “plus” with 99\n\nthen rename the columns to age_upper and age_lower\n\nfinally, change the data type to whole number for each of those new columns"
  },
  {
    "objectID": "bi_training/BI_for_beginners_service_session_03.html#tidying-up",
    "href": "bi_training/BI_for_beginners_service_session_03.html#tidying-up",
    "title": "BI for Beginners (service version) Session 3",
    "section": "Tidying up",
    "text": "Tidying up\n\nwe should now be able to use this data to re-make our GP bubble map from last time.\nthere are some minor bits of tidying up that need to happen first\nthere are a few duplicate practice names, which might cause us problems \n\n\n\n\n\n\n\n\nTask\n\n\n\n\nselect Transform data\n\nadd a Custom column called Practice Name \n\nuse & to concatenate values: [GPPracticeName] & \" (\" & [Postcode] & \")\"\n\nclose and apply\n\n\n\n\nPower BI likes to summarize data wherever possible\nthis can cause problems (although I don’t think there’s anything in this example that suffers from it)\n\n\n\n\n\n\n\nTask\n\n\n\n\nGo to the data view\nIn the practices table, note that you can change the summary options for the PracticeListSize column"
  },
  {
    "objectID": "bi_training/BI_for_beginners_service_session_03.html#re-making-our-visualisation",
    "href": "bi_training/BI_for_beginners_service_session_03.html#re-making-our-visualisation",
    "title": "BI for Beginners (service version) Session 3",
    "section": "Re-making our visualisation",
    "text": "Re-making our visualisation\n\n\n\n\n\n\nTask\n\n\n\n\nAdd a map, and set the Postcode to Location, boards.HBName to Legend, PracticeListSize to Bubble Size\nFormat the map to greyscale\nRename for this visual to suit\nadd a slicer for Health board\nadd cards for the list size and practice name\nadd a stacked column chart for practice sizes"
  },
  {
    "objectID": "bi_training/BI_for_beginners_service_session_03.html#finishing-up",
    "href": "bi_training/BI_for_beginners_service_session_03.html#finishing-up",
    "title": "BI for Beginners (service version) Session 3",
    "section": "Finishing up",
    "text": "Finishing up\n\nnext time, we’ll use some of that data we wrangled today to extend our GP dashboard\nplease save your files from today somewhere safe\nif you have time during the week, come back to the visualizations that we sketched today, and play. What would you like to add to the dashboard?\n\nthere’s a lot of demographic data to play with\n\n\nLet me know, and we’ll try adding those things next time"
  },
  {
    "objectID": "bi_training/BI_for_beginners_session_01.html",
    "href": "bi_training/BI_for_beginners_session_01.html",
    "title": "BI for Beginners Session 1",
    "section": "",
    "text": "Session materials\n\n\n\n\n\n\n.xlsx session data"
  },
  {
    "objectID": "bi_training/BI_for_beginners_session_01.html#previous-attendees-have-said",
    "href": "bi_training/BI_for_beginners_session_01.html#previous-attendees-have-said",
    "title": "BI for Beginners Session 1",
    "section": "Previous attendees have said…",
    "text": "Previous attendees have said…\n\n60 previous attendees have left feedback\n100% would recommend this session to a colleague\n97% said that this session was pitched correctly\n\n\n\n\n\n\n\n\n\n\n\nThree random comments from previous attendees\n\n\n\n\nHandy refresher\nReally interesting session, and much easier than the data wrangling session :)\nVery good, but it would be useful to have instructions about how to access chat, downloading data etc prior to the training session rather than being informed during the training session itself."
  },
  {
    "objectID": "bi_training/BI_for_beginners_session_01.html#session-outline",
    "href": "bi_training/BI_for_beginners_session_01.html#session-outline",
    "title": "BI for Beginners Session 1",
    "section": "Session outline",
    "text": "Session outline\nIf you’d like to get a sense of the core content, you might have a look at the video outline for this session:\n\n\n\n\n\npractical first\n\nloading data\nmaking visualizations\nmanipulating data\n\n\nthen some explanation and examples\n\nwhat is it for?\nhow does it work?"
  },
  {
    "objectID": "bi_training/BI_for_beginners_session_01.html#two-words-of-warning",
    "href": "bi_training/BI_for_beginners_session_01.html#two-words-of-warning",
    "title": "BI for Beginners Session 1",
    "section": "Two words of warning…",
    "text": "Two words of warning…\n\nThis course uses Power BI Desktop. Most of the skills here are transferable to other versions of Power BI, but you’ll need Desktop to follow the examples\nLicencing and publication can be complicated in Power BI. We don’t discuss that much here, but it’s important to understand the implications if you’re planning to use it in practice. The KIND Network is a good resource for those kinds of questions."
  },
  {
    "objectID": "bi_training/BI_for_beginners_session_01.html#hospital-occupancy-data",
    "href": "bi_training/BI_for_beginners_session_01.html#hospital-occupancy-data",
    "title": "BI for Beginners Session 1",
    "section": "Hospital occupancy data",
    "text": "Hospital occupancy data\n\n\n\n\n\n\nTask\n\n\n\n\ndownload, and open the sample s01_data.xlsx workbook in Excel\nhave a look at the two sheets, called occupancy_sh and wards_sh\n\neach contains a table, which are named occupancy and wards\n\nclose the Excel file"
  },
  {
    "objectID": "bi_training/BI_for_beginners_session_01.html#open-power-bi-desktop",
    "href": "bi_training/BI_for_beginners_session_01.html#open-power-bi-desktop",
    "title": "BI for Beginners Session 1",
    "section": "Open Power BI desktop",
    "text": "Open Power BI desktop\n\n\n\n\n\n\nTask\n\n\n\n\nOpen Power BI desktop"
  },
  {
    "objectID": "bi_training/BI_for_beginners_session_01.html#loading-data",
    "href": "bi_training/BI_for_beginners_session_01.html#loading-data",
    "title": "BI for Beginners Session 1",
    "section": "Loading data",
    "text": "Loading data\n\n\n\n\n\n\nTask\n\n\n\n\ngo to the data view\ngo to the Get data dropdown on the ribbon, and select Excel workbook"
  },
  {
    "objectID": "bi_training/BI_for_beginners_session_01.html#hospital-occupancy-data-1",
    "href": "bi_training/BI_for_beginners_session_01.html#hospital-occupancy-data-1",
    "title": "BI for Beginners Session 1",
    "section": "Hospital occupancy data",
    "text": "Hospital occupancy data\n\n\n\n\n\n\nTask\n\n\n\n\nwe want data/s01_data.xlsx\n\nselect the two tables in the preview and select load"
  },
  {
    "objectID": "bi_training/BI_for_beginners_session_01.html#three-views",
    "href": "bi_training/BI_for_beginners_session_01.html#three-views",
    "title": "BI for Beginners Session 1",
    "section": "Three views",
    "text": "Three views\n\n\n\n\n\n\n\n\n\n\n\nReport view, where you’ll build your dashboard\n\nData view, where you’ll manage your data sources\n\nModel view, where you’ll manage the model\n\n\n\n\n\n\n\n\n\nTask\n\n\n\n\nHave a look at each of the three views"
  },
  {
    "objectID": "bi_training/BI_for_beginners_session_01.html#hospital-occupancy-data-2",
    "href": "bi_training/BI_for_beginners_session_01.html#hospital-occupancy-data-2",
    "title": "BI for Beginners Session 1",
    "section": "Hospital occupancy data",
    "text": "Hospital occupancy data\n\nonce loaded, we can access this data in lots of different ways:\n\nin report view, via the data pane\nin data view\nin model view as the relationship blocks\n\n\ndata loading is one-way\n\nwhat we do in Power BI won’t change the underlying files\nbut if our files change, we’ll need to refresh our data"
  },
  {
    "objectID": "bi_training/BI_for_beginners_session_01.html#what-does-the-model-do",
    "href": "bi_training/BI_for_beginners_session_01.html#what-does-the-model-do",
    "title": "BI for Beginners Session 1",
    "section": "What does the model do?",
    "text": "What does the model do?\n\nThe model shows (and controls) how the elements of your data fit together\nPower BI should have guessed a couple of relationships in this data\nwe’ll talk about these relationships more in session 4"
  },
  {
    "objectID": "bi_training/BI_for_beginners_session_01.html#investigating-our-data",
    "href": "bi_training/BI_for_beginners_session_01.html#investigating-our-data",
    "title": "BI for Beginners Session 1",
    "section": "Investigating our data",
    "text": "Investigating our data\n\nfor now, let’s use this data to build a simple visualisation\n\n\n\n\n\n\n\nTask\n\n\n\n\nGo to the data view\nLook at each of tables\nIn the occupancy table, select the OccupiedBeds column\nLook through the ribbon’s Column tools to see what options are available"
  },
  {
    "objectID": "bi_training/BI_for_beginners_session_01.html#time-to-add-a-visualization",
    "href": "bi_training/BI_for_beginners_session_01.html#time-to-add-a-visualization",
    "title": "BI for Beginners Session 1",
    "section": "Time to add a visualization",
    "text": "Time to add a visualization\n\n\n\n\n\n\nTask\n\n\n\n\nGo to the report view\nSelect Line chart from the visualizations pane  \n\nEnlarge the visualisation to fill the page\nAdd some data:\n\nDrag the OccupiedBeds column from the occupancy table to the Y-axis field\nDrag the Date column from the occupancy table to the X-axis field"
  },
  {
    "objectID": "bi_training/BI_for_beginners_session_01.html#making-our-chart-more-useful",
    "href": "bi_training/BI_for_beginners_session_01.html#making-our-chart-more-useful",
    "title": "BI for Beginners Session 1",
    "section": "Making our chart more useful",
    "text": "Making our chart more useful\n\n\n\n\n\n\nTask\n\n\n\n\nTry dragging the WardName column to the Legend field"
  },
  {
    "objectID": "bi_training/BI_for_beginners_session_01.html#changing-the-data",
    "href": "bi_training/BI_for_beginners_session_01.html#changing-the-data",
    "title": "BI for Beginners Session 1",
    "section": "Changing the data",
    "text": "Changing the data\n\n\n\n\n\n\nTask\n\n\n\n\nopen data/s01_data.xlsx in Excel (again)\nchange some of the values\nclose Excel (essential) and return to Power BI\nrefresh the data"
  },
  {
    "objectID": "bi_training/BI_for_beginners_session_01.html#calculated-columns",
    "href": "bi_training/BI_for_beginners_session_01.html#calculated-columns",
    "title": "BI for Beginners Session 1",
    "section": "Calculated columns",
    "text": "Calculated columns\n\n\nCalculated columns are how we describe columns calculated from other values\nHere, we could calculate something simple for each ward - how about the number of non-closed beds available?\n\n\n\n\n\n\n\nTask\n\n\n\n\ngo to the data view and select the occupancy table\nselect New column from the ribbon  \n\nnow we write a formula in the formula bar: AvailableBeds = [BedComp] - [ClosedBed]  \n\nAvailableBeds = our new column name\n\n[BedComp] and [ClosedBed] are the existing column names that we’re subtracting\n\n\n\n\nCongratulations! You’ve just written your first DAX formula."
  },
  {
    "objectID": "bi_training/BI_for_beginners_session_01.html#what-is-dax",
    "href": "bi_training/BI_for_beginners_session_01.html#what-is-dax",
    "title": "BI for Beginners Session 1",
    "section": "What is DAX?",
    "text": "What is DAX?\nDAX (Data Analysis eXpressions) is the formula language used in Power BI, Power Pivot…\n\nsimilar to Excel formulas\n\nfunctions have similar names and similar behaviours\nDAX is more ‘fussy’ than Excel\n\n\nwe’ll talk about DAX more in session 4"
  },
  {
    "objectID": "bi_training/BI_for_beginners_session_01.html#what-is-power-bi-for",
    "href": "bi_training/BI_for_beginners_session_01.html#what-is-power-bi-for",
    "title": "BI for Beginners Session 1",
    "section": "What is Power BI for?",
    "text": "What is Power BI for?\n\nNHS Scotland TURAS intelligence\n\nNHS Digital Adult Social Care dashboard - particularly great for showing how Power BI can be used as a hub for data. I imagine how many Excel files on shared network drives this might have required before…\n\nNorthern Ireland Department of Health COVID dashboard - an object lesson in scale, and I’d be keen to use Power BI if a service potentially was going to be very busy, or experience highly variable load\n\nQI project dashboard from NHS England’s East London NHS Foundation Trust - some useful thoughts about implementing a project in Power BI"
  },
  {
    "objectID": "bi_training/BI_for_beginners_session_01.html#power-bi-has-attractive-features",
    "href": "bi_training/BI_for_beginners_session_01.html#power-bi-has-attractive-features",
    "title": "BI for Beginners Session 1",
    "section": "Power BI has attractive features",
    "text": "Power BI has attractive features\n\nInteractive\nDynamic\nPresenting data from many sources\nScalable\nSeparates data from analysis/presentation"
  },
  {
    "objectID": "bi_training/BI_for_beginners_session_01.html#homework-tasks",
    "href": "bi_training/BI_for_beginners_session_01.html#homework-tasks",
    "title": "BI for Beginners Session 1",
    "section": "Homework tasks",
    "text": "Homework tasks\n\nTry using the filters pane to play with your dashboard. How do filters change your visual?\nCould you use the data from this session to find out how often a ward is overcrowded?\nCan you plot the AvailableBeds column?"
  },
  {
    "objectID": "bi_training/BI_for_beginners_session_03.html",
    "href": "bi_training/BI_for_beginners_session_03.html",
    "title": "BI for Beginners Session 3",
    "section": "",
    "text": "60 previous attendees have left feedback\n100% would recommend this session to a colleague\n97% said that this session was pitched correctly\n\n\n\n\n\n\n\n\n\n\n\nThree random comments from previous attendees\n\n\n\n\nVery informative introduction to Power BI, it was easy to keep up with the session and a safe space to share any issues.\nReally useful and as a beginner I now have a level of understanding and skill that can be built on\nVery well planned and oven ready files were very useful. Would maybe recommend assigning “homework” for folk to ensure we actually practice as this is where the success will lie. My main issue is with getting data into a format that is suitable - working across Board boundaries means the data I receive is different from each Board and wrangling is very manual and time consuming."
  },
  {
    "objectID": "bi_training/BI_for_beginners_session_03.html#previous-attendees-have-said",
    "href": "bi_training/BI_for_beginners_session_03.html#previous-attendees-have-said",
    "title": "BI for Beginners Session 3",
    "section": "",
    "text": "60 previous attendees have left feedback\n100% would recommend this session to a colleague\n97% said that this session was pitched correctly\n\n\n\n\n\n\n\n\n\n\n\nThree random comments from previous attendees\n\n\n\n\nVery informative introduction to Power BI, it was easy to keep up with the session and a safe space to share any issues.\nReally useful and as a beginner I now have a level of understanding and skill that can be built on\nVery well planned and oven ready files were very useful. Would maybe recommend assigning “homework” for folk to ensure we actually practice as this is where the success will lie. My main issue is with getting data into a format that is suitable - working across Board boundaries means the data I receive is different from each Board and wrangling is very manual and time consuming."
  },
  {
    "objectID": "bi_training/BI_for_beginners_session_03.html#session-outline",
    "href": "bi_training/BI_for_beginners_session_03.html#session-outline",
    "title": "BI for Beginners Session 3",
    "section": "Session outline",
    "text": "Session outline\nIf you’d like to get a sense of the core content, you might have a look at the video outline for this session:\n\n\n\n\n\nIn this session, we’re going to build part of the GP practice size dashboard from last time\nBut we’ll do this from raw data, rather than the play data we used last time\nWe’ll bring that data in directly from the web\nWe’ll need to wrangle that data to get it to behave"
  },
  {
    "objectID": "bi_training/BI_for_beginners_session_03.html#data-wrangling",
    "href": "bi_training/BI_for_beginners_session_03.html#data-wrangling",
    "title": "BI for Beginners Session 3",
    "section": "Data wrangling",
    "text": "Data wrangling\n\nseveral different sources needed\n\nsome real open data about GP practices 🔗\n\nHealth board names 🔗\nDemographic data for GP practices 🔗"
  },
  {
    "objectID": "bi_training/BI_for_beginners_session_03.html#load-our-data",
    "href": "bi_training/BI_for_beginners_session_03.html#load-our-data",
    "title": "BI for Beginners Session 3",
    "section": "Load our data",
    "text": "Load our data\n\n\n\n\n\n\nTask\n\n\n\n\nOpen Power BI and start a new report\nUse the Get data menu to load data from the web\n\nLoad each of the three URLs supplied in the chat"
  },
  {
    "objectID": "bi_training/BI_for_beginners_session_03.html#inspect-our-data",
    "href": "bi_training/BI_for_beginners_session_03.html#inspect-our-data",
    "title": "BI for Beginners Session 3",
    "section": "Inspect our data",
    "text": "Inspect our data\n\nYou should have seen a preview during data loading, but you should now inspect each of the data sets via the data view\nWhat will we need to do to use them to reproduce the dashboard from last time?"
  },
  {
    "objectID": "bi_training/BI_for_beginners_session_03.html#task-list",
    "href": "bi_training/BI_for_beginners_session_03.html#task-list",
    "title": "BI for Beginners Session 3",
    "section": "Task list",
    "text": "Task list\n\nMy data came across with horrible names. Let’s rename to practices, boards, and demographics\n\nwe can discard some of the practices data\nwe’ll need to join boards and practices to get nice health board names in our dashboard\nwe’ll need to re-shape demographics"
  },
  {
    "objectID": "bi_training/BI_for_beginners_session_03.html#wrangling",
    "href": "bi_training/BI_for_beginners_session_03.html#wrangling",
    "title": "BI for Beginners Session 3",
    "section": "Wrangling",
    "text": "Wrangling\n\nwe’ll do our data wrangling using Power Query\n\n\n\n\n\n\n\nTask\n\n\n\n\nIn the data view, select Transform data"
  },
  {
    "objectID": "bi_training/BI_for_beginners_session_03.html#discarding-data",
    "href": "bi_training/BI_for_beginners_session_03.html#discarding-data",
    "title": "BI for Beginners Session 3",
    "section": "Discarding data",
    "text": "Discarding data\n\n(duty of data minimization)  \n\nwe can safely lose several columns:\n\n\nTelephoneNumber, PracticeType, Dispensing are all spare\n\nHSPC and DataZone are more directly useful, although we actually won’t use them\n\n\nyou can use the applied steps box in Query Settings to review (or undo) changes to your data"
  },
  {
    "objectID": "bi_training/BI_for_beginners_session_03.html#joining-data",
    "href": "bi_training/BI_for_beginners_session_03.html#joining-data",
    "title": "BI for Beginners Session 3",
    "section": "Joining data",
    "text": "Joining data\n\nthere’s an HB column in both the boards and practices data\nwe can link these up so that we can use the actual proper health board names in our dashboard\n\n\n\n\n\n\n\nTask\n\n\n\n\nselect the HB column and select Merge Queries  \n\nfill in the options in the merge pop-up  \n\nnote that this gives us lots of information about how the join is likely to work\n\n\n\n\na slight puzzle: the join initially looks pretty unpromising \n\nhere, Power Query is effectively telling you that there’s a table row packed into each of these cells. That row is the matching row from the boards data that matched our HB column in the practices data\nwe can unpack all or some of the columns from each row using the menu in the column header.\nI think we only want HBName - but feel free to experiment as you can always backtrack from the query settings pane\n\n\n\n\n\n\n\nTask\n\n\n\n\nselect the column(s) you want to keep from the column header  \n\n\n\n\n\nyou can also access lots of other Excel-ish options by right-clicking the column\nsomething we can do there is to rename this column to give a nicer name (which we’ll need to use later while building our visualisation)\n\n\n\n\n\n\n\nTask\n\n\n\n\nplease rename your new column to “HBName”\n\nnote that you can also do this inside the formula bar at the top of the screen  This formula is written in Power Query M, which we’ll discuss later\ncheck that you now have nice board names in the practices data\nremember to close & apply"
  },
  {
    "objectID": "bi_training/BI_for_beginners_session_03.html#re-shaping-data",
    "href": "bi_training/BI_for_beginners_session_03.html#re-shaping-data",
    "title": "BI for Beginners Session 3",
    "section": "Re-shaping data",
    "text": "Re-shaping data\n\nour demographics data is going to be hard to plot\nwe’ll reshape it using Power Query to make our life easier\n\n\n\n\n\n\n\nTask\n\n\n\n\nAs before, please Transform Data\n\nUse the Select columns tool (or delete as before) to remove the id, Date, HSPC, HB, and SexQF columns\nYou can do this in Power Query directly with = Table.RemoveColumns(#\"Changed Type\",{\"_id\", \"Date\", \"HB\", \"HSCP\", \"SexQF\"})\n\nSelect the PracticeCode and Sex columns, then select Unpivot Other Columns\n\n\n\n\n\nThat should give us something that looks like this:  \n\nwe can now remove unwanted values by filtering \n\n\n\n\n\n\n\n\nTask\n\n\n\n\nFrom the Attribute column, please remove the QF rows,\nFrom the Attribute column, please remove the AllAges rows\nFrom the Sex column, please remove the All rows\n\n\n\n\nthe last type of reshaping to show off is about transforming values\n\n\n\n\n\n\n\nTask\n\n\n\n\nSplit the Attribute column by Digit to Non-digit\n\nreplace values in the new Attribute.1 column to remove the “Ages”\nthen in Attribute.2, two replacements to remove the “to”s and replace the “plus” with 99\n\nthen rename the columns to age_upper and age_lower\n\nfinally, change the data type to whole number for each of those new columns"
  },
  {
    "objectID": "bi_training/BI_for_beginners_session_03.html#tidying-up",
    "href": "bi_training/BI_for_beginners_session_03.html#tidying-up",
    "title": "BI for Beginners Session 3",
    "section": "Tidying up",
    "text": "Tidying up\n\nwe should now be able to use this data to re-make our GP bubble map from last time.\nthere are some minor bits of tidying up that need to happen first\nthere are a few duplicate practice names, which might cause us problems \n\nso we’ll transform each name to include the postcode to avoid this happening\n\n\n\n\n\n\n\nTask\n\n\n\n\nselect Transform data\n\nadd a Custom column called Practice Name \n\nuse & to concatenate values: [GPPracticeName] & \" (\" & [Postcode] & \")\"\n\nclose and apply\n\n\n\n\nPower BI likes to summarise data wherever possible\nthis can cause problems (although I don’t think there’s anything in this example that suffers from it)\n\n\n\n\n\n\n\nTask\n\n\n\n\nGo to the data view\nIn the practices table, note that you can change the summary options for the PracticeListSize column"
  },
  {
    "objectID": "bi_training/BI_for_beginners_session_03.html#re-making-our-visualisation",
    "href": "bi_training/BI_for_beginners_session_03.html#re-making-our-visualisation",
    "title": "BI for Beginners Session 3",
    "section": "Re-making our visualisation",
    "text": "Re-making our visualisation\n\n\n\n\n\n\nTask\n\n\n\n\nAdd a map, and set the Postcode to Location, boards.HBName to Legend, PracticeListSize to Bubble Size\nFormat the map to greyscale\nRename for this visual to suit\nadd a slicer for Health board\nadd cards for the list size and practice name\nadd a stacked column chart for practice sizes"
  },
  {
    "objectID": "bi_training/BI_for_beginners_session_03.html#finishing-up",
    "href": "bi_training/BI_for_beginners_session_03.html#finishing-up",
    "title": "BI for Beginners Session 3",
    "section": "Finishing up",
    "text": "Finishing up\n\nnext time, we’ll use some of that data we wrangled today to extend our GP dashboard\nplease save your file somewhere safe\nif you have time during the week, come back to the visualisations that we sketched today, and play. What would you like to add to the dashboard?\n\nthere’s a lot of demographic data to play with\n\n\nLet me know, and we’ll try adding those things next time"
  },
  {
    "objectID": "bi_training/BI_intermediate_session_01.html",
    "href": "bi_training/BI_intermediate_session_01.html",
    "title": "Intermediate Power BI Session 1",
    "section": "",
    "text": "This is part of our intermediate-level Power BI desktop course. The course structure is as follows:\nNo feedback found for this session"
  },
  {
    "objectID": "bi_training/BI_intermediate_session_01.html#session-outline",
    "href": "bi_training/BI_intermediate_session_01.html#session-outline",
    "title": "Intermediate Power BI Session 1",
    "section": "Session outline",
    "text": "Session outline\n\nload some data\nwrangle it with PowerQuery\nwrite some DAX and think about the filter context\nbuild some visuals and assemble them into a dashboard"
  },
  {
    "objectID": "bi_training/BI_intermediate_session_01.html#session-aim",
    "href": "bi_training/BI_intermediate_session_01.html#session-aim",
    "title": "Intermediate Power BI Session 1",
    "section": "Session aim",
    "text": "Session aim\n\nrecap and reminder about core Power BI workflows"
  },
  {
    "objectID": "bi_training/BI_intermediate_session_01.html#data",
    "href": "bi_training/BI_intermediate_session_01.html#data",
    "title": "Intermediate Power BI Session 1",
    "section": "Data",
    "text": "Data\n\nCCTV data from Dundee\nhourly machine-classified counts of bikes, people, road vehicles\npreview\ndownload link: https://data.dundeecity.gov.uk/api/download/v1/items/90ce515ccc9a496f8f61c84d2eb01488/csv?layers=0"
  },
  {
    "objectID": "bi_training/BI_intermediate_session_01.html#please-import-the-dataset-into-power-bi",
    "href": "bi_training/BI_intermediate_session_01.html#please-import-the-dataset-into-power-bi",
    "title": "Intermediate Power BI Session 1",
    "section": "Please import the dataset into Power BI",
    "text": "Please import the dataset into Power BI\n\nGet data &gt; From web\nrename csv?layers=0 to cctv \n\nthen Transform Data"
  },
  {
    "objectID": "bi_training/BI_intermediate_session_01.html#powerquery-reminder",
    "href": "bi_training/BI_intermediate_session_01.html#powerquery-reminder",
    "title": "Intermediate Power BI Session 1",
    "section": "PowerQuery reminder",
    "text": "PowerQuery reminder\n\naimed at data wrangling\nthe right place to do any one-off calculations and transformations\nreminder about terminology:\n\nquery = dataset\nquery steps = steps in wrangling from loading to final data\nPowerQuery M (PQM) language"
  },
  {
    "objectID": "bi_training/BI_intermediate_session_01.html#fix-the-dates",
    "href": "bi_training/BI_intermediate_session_01.html#fix-the-dates",
    "title": "Intermediate Power BI Session 1",
    "section": "Fix the dates",
    "text": "Fix the dates\n\nsplit [Hour] on “-”, then rename to give [start_hour] and [end_hour] cols\nmake sure [Date] is a date, rather than a date/time\ncustom columns to make [start_time] by appending with &\n\n[Date] & [start_hour]\nduplicate and tweak to make [end_time]"
  },
  {
    "objectID": "bi_training/BI_intermediate_session_01.html#rename-and-pivot-the-counts",
    "href": "bi_training/BI_intermediate_session_01.html#rename-and-pivot-the-counts",
    "title": "Intermediate Power BI Session 1",
    "section": "Rename and pivot the counts",
    "text": "Rename and pivot the counts\n\nunpivot the three Number_of_xxx columns\nthen replace values to remove Number_of_ to leave Bicycles, People and Vehicles\n\nyou could also tidy Road vehicles\n\nrename to Type and Count"
  },
  {
    "objectID": "bi_training/BI_intermediate_session_01.html#duplicate-query",
    "href": "bi_training/BI_intermediate_session_01.html#duplicate-query",
    "title": "Intermediate Power BI Session 1",
    "section": "Duplicate query",
    "text": "Duplicate query\n\njust to see what happens\nthen close and apply"
  },
  {
    "objectID": "bi_training/BI_intermediate_session_01.html#new-query-in-powerquery",
    "href": "bi_training/BI_intermediate_session_01.html#new-query-in-powerquery",
    "title": "Intermediate Power BI Session 1",
    "section": "New query in PowerQuery",
    "text": "New query in PowerQuery\n\nsubsidiary data: CCTV camera locations data\n\nsave and close back to Power BI"
  },
  {
    "objectID": "bi_training/BI_intermediate_session_01.html#relationships",
    "href": "bi_training/BI_intermediate_session_01.html#relationships",
    "title": "Intermediate Power BI Session 1",
    "section": "Relationships",
    "text": "Relationships\n\ngo to model view\ndrag dundee_cctv_locations[Source] to cctv[Source]\n\nand cross-filter direction set to both"
  },
  {
    "objectID": "bi_training/BI_intermediate_session_01.html#sorting-days",
    "href": "bi_training/BI_intermediate_session_01.html#sorting-days",
    "title": "Intermediate Power BI Session 1",
    "section": "Sorting days",
    "text": "Sorting days\n\nstill in model view, use DAX to make a [weekday] column with weekday = WEEKDAY(cctv[Date], 2)\n\nn.b. quirky return value argument\nthen, in the model, sort [Day] by [weekday] in Properties  &gt; Advanced"
  },
  {
    "objectID": "bi_training/BI_intermediate_session_01.html#date-table",
    "href": "bi_training/BI_intermediate_session_01.html#date-table",
    "title": "Intermediate Power BI Session 1",
    "section": "Date table",
    "text": "Date table\n\nPower BI does lots of helpful inference about dates\n\ne.g. the .[Year], .[Month], etc values that pop up when writing functions about a date column in DAX\n\n\nthose work best when the dates are continuous. We have some missing data here, so we’ll add a proper date table\n\nNew Table, then date_table = CALENDAR(min(cctv[Date]), max(cctv[Date])) - creates a row per day in the range of dates"
  },
  {
    "objectID": "bi_training/BI_intermediate_session_01.html#dax-query-view",
    "href": "bi_training/BI_intermediate_session_01.html#dax-query-view",
    "title": "Intermediate Power BI Session 1",
    "section": "DAX query view",
    "text": "DAX query view\n\nEVALUATE()\n\nF5 to run\n\n.[Year] syntax\nSUMMARIZECOLUMNS(group, name, expression)"
  },
  {
    "objectID": "bi_training/BI_intermediate_session_01.html#summary-tables",
    "href": "bi_training/BI_intermediate_session_01.html#summary-tables",
    "title": "Intermediate Power BI Session 1",
    "section": "Summary tables",
    "text": "Summary tables\n\ntotal counts by day, and by type\nSUMMARIZECOLUMNS(cctv[Date].[Date], \"Total count\", SUM(cctv[Count]))\nSUMMARIZECOLUMNS(cctv[Type], \"Total count\", SUM(cctv[Count]))\nplease now translate each to new summary tables"
  },
  {
    "objectID": "bi_training/BI_intermediate_session_01.html#dashboard-build-out",
    "href": "bi_training/BI_intermediate_session_01.html#dashboard-build-out",
    "title": "Intermediate Power BI Session 1",
    "section": "Dashboard build out",
    "text": "Dashboard build out\n\n\nCompleted dashboard"
  },
  {
    "objectID": "bi_training/BI_intermediate_session_01.html#dashboard-build-out-1",
    "href": "bi_training/BI_intermediate_session_01.html#dashboard-build-out-1",
    "title": "Intermediate Power BI Session 1",
    "section": "Dashboard build out",
    "text": "Dashboard build out\n\n2 x filters\n1 x map\n1 x header text box however you like\n1 x column graph showing traffic by day: you should link the date table here to show missing data\n1 x alluvial showing sites against time\n1 x matrix showing days of the week and type and average count. Turn off subtotals, and Format&gt;General&gt;Data format to round values\n1 x pie showing type against count\n1 x line showing diurnal change"
  },
  {
    "objectID": "bi_training/BI_intermediate_session_01.html#tidying",
    "href": "bi_training/BI_intermediate_session_01.html#tidying",
    "title": "Intermediate Power BI Session 1",
    "section": "Tidying",
    "text": "Tidying\n\nsort out the values to make sure the cctv map links properly (especially for the Murraygate and Seagate cameras)"
  },
  {
    "objectID": "bi_training/BI_intermediate_session_03.html",
    "href": "bi_training/BI_intermediate_session_03.html",
    "title": "Intermediate Power BI Session 3",
    "section": "",
    "text": "This is part of our intermediate-level Power BI desktop course. The course structure is as follows:\nNo feedback found for this session"
  },
  {
    "objectID": "bi_training/BI_intermediate_session_03.html#session-aim",
    "href": "bi_training/BI_intermediate_session_03.html#session-aim",
    "title": "Intermediate Power BI Session 3",
    "section": "Session aim",
    "text": "Session aim\n\nto cover core Power Query (PQ) functions and techniques"
  },
  {
    "objectID": "bi_training/BI_intermediate_session_03.html#where-does-this-fit-in",
    "href": "bi_training/BI_intermediate_session_03.html#where-does-this-fit-in",
    "title": "Intermediate Power BI Session 3",
    "section": "Where does this fit in?",
    "text": "Where does this fit in?\n\nsession 1: a simple build-a-dashboard session as a warmup, reminder about core Power BI techniques, and sharing some suggestions for good workflow practices\nsession 2: DAX language foundations, including FILTER and CALCULATE\nsession 3: core PowerQuery functions to manage sources, join data sets, pivot, and tidy values\nsession 4: PowerQuery M language foundations, including a basic overview of syntax, a core function toolkit, advanced mode, and reproducibility\nsession 5: a second, more ambitious, build-a-dashboard session to put all that PowerQuery and DAX knowledge into practice"
  },
  {
    "objectID": "bi_training/BI_intermediate_session_03.html#session-outline",
    "href": "bi_training/BI_intermediate_session_03.html#session-outline",
    "title": "Intermediate Power BI Session 3",
    "section": "Session outline",
    "text": "Session outline\n\nthinking about queries - sources, connections, code folding, duplicating/referencing\ndata formats for Power BI - tidy data, and key-value pairs, and interconverting with pivots\njoins and relationships\nnormalising and the star schema"
  },
  {
    "objectID": "bi_training/BI_intermediate_session_03.html#data-for-this-session",
    "href": "bi_training/BI_intermediate_session_03.html#data-for-this-session",
    "title": "Intermediate Power BI Session 3",
    "section": "Data for this session",
    "text": "Data for this session\n\nNRS vital events data for Q3 2024"
  },
  {
    "objectID": "bi_training/BI_intermediate_session_03.html#getting-started",
    "href": "bi_training/BI_intermediate_session_03.html#getting-started",
    "title": "Intermediate Power BI Session 3",
    "section": "Getting started",
    "text": "Getting started\n\nopen Power BI\ncreate a blank report\nthen click Tranform data to open PQ"
  },
  {
    "objectID": "bi_training/BI_intermediate_session_03.html#loading-data-from-power-query",
    "href": "bi_training/BI_intermediate_session_03.html#loading-data-from-power-query",
    "title": "Intermediate Power BI Session 3",
    "section": "Loading data from Power Query",
    "text": "Loading data from Power Query\n\nall the Power BI connectors are available in PQ\n\nNew query &gt; Web\n\nsupply the link for the NRS vital events data for Q3 2024: https://www.nrscotland.gov.uk/media/arkfqyyr/q3-2024-data.xlsx"
  },
  {
    "objectID": "bi_training/BI_intermediate_session_03.html#tables-and-sheets",
    "href": "bi_training/BI_intermediate_session_03.html#tables-and-sheets",
    "title": "Intermediate Power BI Session 3",
    "section": "Tables and sheets",
    "text": "Tables and sheets\n\nwe want table 6 (TableQ6_Deaths_by_sex_cause_and_NHS_Board_area) \n\nplease import that from the navigator"
  },
  {
    "objectID": "bi_training/BI_intermediate_session_03.html#tidying-up",
    "href": "bi_training/BI_intermediate_session_03.html#tidying-up",
    "title": "Intermediate Power BI Session 3",
    "section": "Tidying up",
    "text": "Tidying up\n\nremove the three All rows \n\ncheck the data types\nfix the query name to cause_death"
  },
  {
    "objectID": "bi_training/BI_intermediate_session_03.html#this-data-isnt-quite-tidy",
    "href": "bi_training/BI_intermediate_session_03.html#this-data-isnt-quite-tidy",
    "title": "Intermediate Power BI Session 3",
    "section": "This data isn’t quite tidy",
    "text": "This data isn’t quite tidy\n\n\nTidy data"
  },
  {
    "objectID": "bi_training/BI_intermediate_session_03.html#shaping-your-data",
    "href": "bi_training/BI_intermediate_session_03.html#shaping-your-data",
    "title": "Intermediate Power BI Session 3",
    "section": "Shaping your data",
    "text": "Shaping your data\n\ntwo main approaches found in Power BI:\n\nExcel-like tidy data\nSQL-like relational data\n\n\ntidy data is conceptually easier to build\n\njoins/merges\nsplitting columns\n\n\nbut really Power BI prefers relational data\nmore performant\neasier to manage complex datasets"
  },
  {
    "objectID": "bi_training/BI_intermediate_session_03.html#tidy-data",
    "href": "bi_training/BI_intermediate_session_03.html#tidy-data",
    "title": "Intermediate Power BI Session 3",
    "section": "Tidy data",
    "text": "Tidy data\n\nlargely covered in session one, but a quick reminder about splitting and merging"
  },
  {
    "objectID": "bi_training/BI_intermediate_session_03.html#key-value-pair-data",
    "href": "bi_training/BI_intermediate_session_03.html#key-value-pair-data",
    "title": "Intermediate Power BI Session 3",
    "section": "Key-value pair data",
    "text": "Key-value pair data\n\nKey-value pair data\n\nKey\nValue\n\n\n\nPneumonia\n144\n\n\nAsthma\n20\n\n\nInfluenza 3\n2"
  },
  {
    "objectID": "bi_training/BI_intermediate_session_03.html#relational-data-in-two-minutes",
    "href": "bi_training/BI_intermediate_session_03.html#relational-data-in-two-minutes",
    "title": "Intermediate Power BI Session 3",
    "section": "Relational data in two minutes",
    "text": "Relational data in two minutes\n\nbreak your data into multiple tables\ngive each item a key\nbuild relationships between those keys"
  },
  {
    "objectID": "bi_training/BI_intermediate_session_03.html#take-some-wide-data",
    "href": "bi_training/BI_intermediate_session_03.html#take-some-wide-data",
    "title": "Intermediate Power BI Session 3",
    "section": "Take some wide data",
    "text": "Take some wide data\n\n\n\n\n\n\n\n\n\nNHS Board\nAED count\nAED model\nManufacturer\nCost\n\n\n\nNHS A&A\n3\nAED Plus Fully Automatic Defibrillator\nZOLL\n1305\n\n\nNHS A&A\n4\nAED Plus Fully Automatic Defibrillator\nZOLL\n975\n\n\nNHS A&A\n5\nPhilips HeartStart FRx Semi-Automatic Defibrillator with Carry Case\nPhilips\n1200\n\n\n\nData from sja.org.uk"
  },
  {
    "objectID": "bi_training/BI_intermediate_session_03.html#break-into-tables",
    "href": "bi_training/BI_intermediate_session_03.html#break-into-tables",
    "title": "Intermediate Power BI Session 3",
    "section": "Break into tables",
    "text": "Break into tables\n\n\nNHS Board\nAED count\n\n\n\nNHS A&A\n3\n\n\nNHS A&A\n4\n\n\nNHS A&A\n5\n\n\n\n\n\n\n\n\n\n\nAED model\nManufacturer\nCost\n\n\n\nAED Plus Fully Automatic Defibrillator\nZOLL\n1305\n\n\nAED Plus Fully Automatic Defibrillator\nZOLL\n975\n\n\nPhilips HeartStart FRx Semi-Automatic Defibrillator with Carry Case\nPhilips\n1200"
  },
  {
    "objectID": "bi_training/BI_intermediate_session_03.html#add-unique-keys",
    "href": "bi_training/BI_intermediate_session_03.html#add-unique-keys",
    "title": "Intermediate Power BI Session 3",
    "section": "Add unique keys",
    "text": "Add unique keys\n\n\nNHS Board\nAED count\nAED key\n\n\n\nNHS A&A\n3\nZOLL-1\n\n\nNHS A&A\n4\nZOLL-2\n\n\nNHS A&A\n5\nPHIL-1\n\n\n\n\n\n\n\n\n\n\n\nAED key\nAED model\nManufacturer\nCost\n\n\n\nZOLL-1\nAED Plus Fully Automatic Defibrillator\nZOLL\n1305\n\n\nZOLL-2\nAED Plus Fully Automatic Defibrillator\nZOLL\n975\n\n\nPHIL-1\nPhilips HeartStart FRx Semi-Automatic Defibrillator with Carry Case\nPhilips\n1200"
  },
  {
    "objectID": "bi_training/BI_intermediate_session_03.html#star-schema",
    "href": "bi_training/BI_intermediate_session_03.html#star-schema",
    "title": "Intermediate Power BI Session 3",
    "section": "Star schema",
    "text": "Star schema\n\nyou might also see Power BI data described as a star schema  image: Wikimedia"
  },
  {
    "objectID": "bi_training/BI_intermediate_session_03.html#reshaping-our-data",
    "href": "bi_training/BI_intermediate_session_03.html#reshaping-our-data",
    "title": "Intermediate Power BI Session 3",
    "section": "Reshaping our data",
    "text": "Reshaping our data\n\nwe’ll break out the cause of death parts of the data into a new table\nwe’ll use the ICD 10 codes as a key\nduplicate query and rename that query to ICD10\n\nremove anything other than ICD10 data in ICD10 (and a note about Table.SelectColumns)\nremove duplicates via Remove Rows &gt; Remove Duplicates\n\nrename ICD 10 Summary List to ICD10\n\nthen remove the Cause of death column in cause_death, and rename the ICD10 column to link with the new table"
  },
  {
    "objectID": "bi_training/BI_intermediate_session_03.html#duplicating-vs-referencing-queries",
    "href": "bi_training/BI_intermediate_session_03.html#duplicating-vs-referencing-queries",
    "title": "Intermediate Power BI Session 3",
    "section": "Duplicating vs referencing queries",
    "text": "Duplicating vs referencing queries\n\na duplicate query is an independent copy of a query that can be tweaked/extended\na referenced query takes the output of a query, and uses it as the starting-point for additional work"
  },
  {
    "objectID": "bi_training/BI_intermediate_session_03.html#reshape-cause_death-to-key-value",
    "href": "bi_training/BI_intermediate_session_03.html#reshape-cause_death-to-key-value",
    "title": "Intermediate Power BI Session 3",
    "section": "Reshape cause_death to key-value",
    "text": "Reshape cause_death to key-value\n\nremove the Scotland column\nthen unpivot everything but ICD10 and Sex \n\nrename your new Attribute/Value columns to board and n"
  },
  {
    "objectID": "bi_training/BI_intermediate_session_03.html#create-national-data-for-benchmarking",
    "href": "bi_training/BI_intermediate_session_03.html#create-national-data-for-benchmarking",
    "title": "Intermediate Power BI Session 3",
    "section": "Create national data for benchmarking",
    "text": "Create national data for benchmarking\n\nduplicate cause_death\n\nname that new query national\n\nremove everything but the national data with = Table.SelectColumns(#\"Filtered Rows\",{\"ICD 10 Summary List\", \"Scotland\", \"Sex\"})"
  },
  {
    "objectID": "bi_training/BI_intermediate_session_03.html#more-data-same-source",
    "href": "bi_training/BI_intermediate_session_03.html#more-data-same-source",
    "title": "Intermediate Power BI Session 3",
    "section": "More data, same source",
    "text": "More data, same source\n\ngo back to source step of the cause_death query\nfind the table data in the row TableQ2b_Vital_events_by_NHS_Board_area\n\nright-click the Table, and select Add as New Query\n\nrename that new query population"
  },
  {
    "objectID": "bi_training/BI_intermediate_session_03.html#make-a-population-table",
    "href": "bi_training/BI_intermediate_session_03.html#make-a-population-table",
    "title": "Intermediate Power BI Session 3",
    "section": "Make a population table",
    "text": "Make a population table\n\nremove everything but the first three columns  \n\nremove the null row and the SCOTLAND row\nrename NHS Board area to board\n\nclean and trim the board values\nunpivot the population columns to sex and population\n\nreplace values and change case in the sex column to leave Male and Female values"
  },
  {
    "objectID": "bi_training/BI_intermediate_session_03.html#additional-data-sources",
    "href": "bi_training/BI_intermediate_session_03.html#additional-data-sources",
    "title": "Intermediate Power BI Session 3",
    "section": "Additional data sources",
    "text": "Additional data sources\n\nyou might like to add in a second data source at this point for practice\ne.g. population estimates, which could be added as a web source\nor second quarter 2024 NRS vital data as an Excel file"
  },
  {
    "objectID": "bi_training/dax_vs_power_query_m.html",
    "href": "bi_training/dax_vs_power_query_m.html",
    "title": "DAX vs PowerQuery M",
    "section": "",
    "text": "Session materials\n\n\n\n\n\n\nall materials \nslides  html /  pdf\n\nsample files  .pbix / .xlsx"
  },
  {
    "objectID": "bi_training/dax_vs_power_query_m.html#previous-attendees-have-said",
    "href": "bi_training/dax_vs_power_query_m.html#previous-attendees-have-said",
    "title": "DAX vs PowerQuery M",
    "section": "Previous attendees have said…",
    "text": "Previous attendees have said…\n\n9 previous attendees have left feedback\n100% would recommend this session to a colleague\n100% said that this session was pitched correctly\n\n\n\n\n\n\n\n\n\n\n\nThree random comments from previous attendees\n\n\n\n\nStill building my knowledge of power bi so this was both a useful refresher of material covered the the beginners pbi course along with new learning\nGood stuff\ngood session, managed to keep up and good write-up which is very helpful"
  },
  {
    "objectID": "bi_training/dax_vs_power_query_m.html#welcome",
    "href": "bi_training/dax_vs_power_query_m.html#welcome",
    "title": "DAX vs PowerQuery M",
    "section": "Welcome",
    "text": "Welcome\n\n🌶 this session is for Power BI beginners\nyou’ll need Power BI Desktop and this sample dashboard to follow along"
  },
  {
    "objectID": "bi_training/dax_vs_power_query_m.html#session-outline",
    "href": "bi_training/dax_vs_power_query_m.html#session-outline",
    "title": "DAX vs PowerQuery M",
    "section": "Session outline",
    "text": "Session outline\n\nabout DAX and PQM\n\nDAX and PQM vs Excel formulas\n\n\ndistinctive features\n\nquery steps (PQM)\nfilter context (DAX)\n\n\napplications and best practice\nfeedback and resources"
  },
  {
    "objectID": "bi_training/dax_vs_power_query_m.html#setup",
    "href": "bi_training/dax_vs_power_query_m.html#setup",
    "title": "DAX vs PowerQuery M",
    "section": "Setup",
    "text": "Setup\n\nPower BI desktop\ndownload and open this sample dashboard\n\nthree datasets, brought in from the web with PowerQuery\nseveral calculated columns"
  },
  {
    "objectID": "bi_training/dax_vs_power_query_m.html#about-dax-and-pqm",
    "href": "bi_training/dax_vs_power_query_m.html#about-dax-and-pqm",
    "title": "DAX vs PowerQuery M",
    "section": "About DAX and PQM",
    "text": "About DAX and PQM\n\nfound in Excel and Power BI (and in Microsoft’s SQL products)\nDAX (Data Analysis Expressions)\n\nExcel: PowerPivot\nPower BI: Measures and calculated columns\n\n\nPQM (Power Query M)\n\nExcel: PowerQuery and various Get Data tools\nPowerBI: various data loading tools and Tranform data"
  },
  {
    "objectID": "bi_training/dax_vs_power_query_m.html#different-applications",
    "href": "bi_training/dax_vs_power_query_m.html#different-applications",
    "title": "DAX vs PowerQuery M",
    "section": "Different applications",
    "text": "Different applications\n\nDAX = summarising/analysing data\nPQM = loading/transforming data"
  },
  {
    "objectID": "bi_training/dax_vs_power_query_m.html#dax-vs-excel",
    "href": "bi_training/dax_vs_power_query_m.html#dax-vs-excel",
    "title": "DAX vs PowerQuery M",
    "section": "DAX vs Excel",
    "text": "DAX vs Excel\n\nthere are plenty of apparent similarities with Excel\n\nbroadly, functional approach\nsimilar/identical function names\nsimilar syntax in some places\n\n\ncalculate a column overall = SUM(ae_activity[over4]) in DAX\n\nlike Excel, this sums the entire over4 column, rather than each row"
  },
  {
    "objectID": "bi_training/dax_vs_power_query_m.html#pqm-vs-excel",
    "href": "bi_training/dax_vs_power_query_m.html#pqm-vs-excel",
    "title": "DAX vs PowerQuery M",
    "section": "PQM vs Excel",
    "text": "PQM vs Excel\n\nPQ really looks like Excel\n\nfamiliar tools - renaming/removing columns, filtering\nevolved tools - like Split Column\n\n\n\nPQM is much less like Excel formula language than DAX"
  },
  {
    "objectID": "bi_training/dax_vs_power_query_m.html#appearances-mislead",
    "href": "bi_training/dax_vs_power_query_m.html#appearances-mislead",
    "title": "DAX vs PowerQuery M",
    "section": "Appearances mislead",
    "text": "Appearances mislead\n\ntry adding another column to the Excel formula, and to the DAX\n\ne.g. overall = SUM(ae_activity[over4], ae_activity[over12]))\n\n✔️ Excel is perfectly fine with this\n❌ but DAX’s SUM function falls over\n\n\nfor PQM, totally different approach required to Excel"
  },
  {
    "objectID": "bi_training/dax_vs_power_query_m.html#input-in-dax",
    "href": "bi_training/dax_vs_power_query_m.html#input-in-dax",
    "title": "DAX vs PowerQuery M",
    "section": "Input in DAX",
    "text": "Input in DAX\n\nDAX takes structured references to columns and tables (no A3)\n\n\noverall = SUM(ae_activity[over4]) sums all the values in the over4 column\n\ntable[column] - so this is the over4 column in the ae_activity table"
  },
  {
    "objectID": "bi_training/dax_vs_power_query_m.html#input-in-pqm",
    "href": "bi_training/dax_vs_power_query_m.html#input-in-pqm",
    "title": "DAX vs PowerQuery M",
    "section": "Input in PQM",
    "text": "Input in PQM\n\nPQM works on query steps, with the #step name (and columns/tables) as input\n\n\n= List.Sum(#\"Filtered Rows\"[over4]) would sum all the values in the over4 column  \n\ntakes the #Filtered Rowsquery step, and sums its over4 column\nthat new query step will be called #Calculated Sum (but we could edit that)\n\n\nthis is unusual, but gives PQM users a tweak-able history of their data transformation with undo/redo\ntry looking at the advanced editor in PQM to see what PQM really looks like"
  },
  {
    "objectID": "bi_training/dax_vs_power_query_m.html#filter-context",
    "href": "bi_training/dax_vs_power_query_m.html#filter-context",
    "title": "DAX vs PowerQuery M",
    "section": "Filter context",
    "text": "Filter context\n\nthere is considerable overlap between DAX and PQM\n\nexample: DAX’s calculated columns replicates functionality in PQM (and Excel)\n\n\nto show the DAX-specific part of the story, we’ll need to make a measure\nmeasures are responsive summaries of our data - when a user twiddles the dashboard, they’ll change\n\nor, measures respond to the filter context"
  },
  {
    "objectID": "bi_training/dax_vs_power_query_m.html#make-a-measure",
    "href": "bi_training/dax_vs_power_query_m.html#make-a-measure",
    "title": "DAX vs PowerQuery M",
    "section": "Make a measure",
    "text": "Make a measure\n\ntake your calculated column DAX and make a measure using exactly the same code\n\n\noverall_m = SUM(ae_activity[over4])\n\nsame code as the calculated column\ndifferent filter context\n\n\n\n\nthen put overall and overall_m into a table, and play with the filters:"
  },
  {
    "objectID": "bi_training/dax_vs_power_query_m.html#more-on-the-filter-context",
    "href": "bi_training/dax_vs_power_query_m.html#more-on-the-filter-context",
    "title": "DAX vs PowerQuery M",
    "section": "More on the filter context",
    "text": "More on the filter context\n\ndifferent functions interpret the context differently: SUM vs SUMX\n\n\nSUMX evaluates some expression for each row in the context: overall_x = SUMX(ae_activity, ae_activity[over4] + ae_activity[over8])  \n\n\n\n\nCALCULATE as a function specifically for fooling with the filter context in a more detailed way\n\n\noverall_borders = CALCULATE(SUM(ae_activity[over4]), ae_activity[board] = \"NHS Borders\") to restrict to just NHS Borders"
  },
  {
    "objectID": "bi_training/dax_vs_power_query_m.html#applications-and-best-practice",
    "href": "bi_training/dax_vs_power_query_m.html#applications-and-best-practice",
    "title": "DAX vs PowerQuery M",
    "section": "Applications and best practice",
    "text": "Applications and best practice\n\nthere’s lots of overlap, and so you can work to suit your preferences\n\ne.g. not clear whether creating calculated columns is better in DAX or PQM\n\n\nDAX is great when:\n\nyou need your data to respond to the user\nyou need to create lots of calculated values\n\n\nPQM is great when:\n\nyou need to transform/clean your data\nyou need to repeatedly load some data\nyou need to undo/redo"
  },
  {
    "objectID": "bi_training/dax_vs_power_query_m.html#resources",
    "href": "bi_training/dax_vs_power_query_m.html#resources",
    "title": "DAX vs PowerQuery M",
    "section": "Resources",
    "text": "Resources\n\nDAX: Russo and Ferrari 2019 The Definitive Guide to DAX\nPQM: Microsoft’s function reference is useful, but their intro pages are confusing and hard to recommend"
  },
  {
    "objectID": "bi_training/power_automate_conditions.html",
    "href": "bi_training/power_automate_conditions.html",
    "title": "Conditions in Power Automate",
    "section": "",
    "text": "No feedback found for this session"
  },
  {
    "objectID": "bi_training/power_automate_conditions.html#prerequisites-for-this-session",
    "href": "bi_training/power_automate_conditions.html#prerequisites-for-this-session",
    "title": "Conditions in Power Automate",
    "section": "Prerequisites for this session",
    "text": "Prerequisites for this session\n\ngood general digital skills\nprior experience of writing your own Flows in Power Automate\nappropriate M365 access and permissions for Power Automate, Teams, and OneDrive"
  },
  {
    "objectID": "bi_training/power_automate_conditions.html#introduction",
    "href": "bi_training/power_automate_conditions.html#introduction",
    "title": "Conditions in Power Automate",
    "section": "Introduction",
    "text": "Introduction\n\n\nControl flow is the technical term that coders use to describe software that changes its behaviour depending on circumstances.\nThis session looks at using variables and conditions to do control flow in Power Automate"
  },
  {
    "objectID": "bi_training/power_automate_conditions.html#plan",
    "href": "bi_training/power_automate_conditions.html#plan",
    "title": "Conditions in Power Automate",
    "section": "Plan",
    "text": "Plan\n\nWe’ll build a series of H&SC-relevant mini-projects:\n\nconnecting to a OneDrive folder\ncounting files in that folder\nposting a count of those files in a Teams message\nvarying the text of that Teams message by count\nvarying the content of that Teams message by the time of day (or day of week…)"
  },
  {
    "objectID": "bi_training/power_automate_conditions.html#project-one-connect-with-a-onedrive-folder",
    "href": "bi_training/power_automate_conditions.html#project-one-connect-with-a-onedrive-folder",
    "title": "Conditions in Power Automate",
    "section": "Project one: connect with a OneDrive folder",
    "text": "Project one: connect with a OneDrive folder\n\nwe’ll start with a very basic Flow that connects to a directory of files in your OneDrive.\n\n\n\n\n\n\n\nSetup\n\n\n\n\n\n\ndownload the sample files, and extract to your OneDrive\nor, create a directory in your OneDrive containing some text files, labelled 0.txt, 1.txt, 2.txt…9.txt\n\ncreate a new instant flow\nafter the Manually trigger a flow box, add a List files in folder connector  \n\nsupply the address of your directory of text files in the List files in folder connector\nsave and test your flow\n\n\n\n\n\n\n\n\n\n\nTip\n\n\n\n\n\n\ndon’t expect any interesting output, but do run this flow to check for errors and permissions\nin the next project, we’ll collect part of the information that Power Automate makes available about your files\nPower Automate has connectors for most network/cloud file storage platform, so this approach should be adaptable to whatever platform you use"
  },
  {
    "objectID": "bi_training/power_automate_conditions.html#project-two-counting-files",
    "href": "bi_training/power_automate_conditions.html#project-two-counting-files",
    "title": "Conditions in Power Automate",
    "section": "Project two: counting files",
    "text": "Project two: counting files\n\nwe’ll now update that flow to count the number of files in the folder\nwe’ll need to create variables to hold that number\nin later stages, we’ll then pass that count variable into some useful output (like a Teams message)\n\n\n\n\n\n\n\nTask\n\n\n\n\n\n\nadd an Initialize variable block\n\nnow populate the Initialize variable fields as shown below: \ngive your variable a name: file_content\n\nset the type, which tells Power Automate what sort of value to expect: array\n\nfinally, set a starting value: body/value\n\n\n\n\n\n\n\n\nwe now have our file_content variable that contains all our file info\nin a real flow, we’d probably want to put other parts of that to use\nbut in this simple example, we’ll just count the number of entries (= the number of files in our directory)\n\n\n\n\n\n\n\nTask\n\n\n\n\n\n\nadd a second Initialize variable block\npopulate the fields as shown below:\n\ngive your variable a name: file_count\n\nset the type, which tells Power Automate what sort of value to expect: integer\n\nfinally, set a starting value. That’s more involved than the previous variable: you need to write a formula to calculate the length of your file_content - length(variables('file_content'))\n\n\n\n\n\n\n\n\nthat should leave you with a flow like the following, which you should save and test:  \n\nonce run, you should see that the value of file_count is 10"
  },
  {
    "objectID": "bi_training/power_automate_conditions.html#digression-data-types",
    "href": "bi_training/power_automate_conditions.html#digression-data-types",
    "title": "Conditions in Power Automate",
    "section": "Digression: data types",
    "text": "Digression: data types\n\na note on data types: Power Automate has several different built-in data types:  \n\nPower Automate is inflexible about data types: so, for example, if you accidentally try to set an integer to 2.4, your flow will fail\nyou’ll need to think carefully about what sort of value your variable is intended to hold"
  },
  {
    "objectID": "bi_training/power_automate_conditions.html#project-three-posting-a-count-of-those-files-in-a-teams-message",
    "href": "bi_training/power_automate_conditions.html#project-three-posting-a-count-of-those-files-in-a-teams-message",
    "title": "Conditions in Power Automate",
    "section": "Project three: posting a count of those files in a Teams message",
    "text": "Project three: posting a count of those files in a Teams message\nThis one should be easy! At least, once you’ve been added to the KIND test Team…\n\n\n\n\n\n\nTask\n\n\n\n\n\n\nadd a Post message in a chat or channel connector\npopulate the fields - it’s recommended to post as User as this allows you to edit any embarrasing errors in your posts once they’ve been posted\nfor the message, write some suitable text, then include the file_count variable \n\n\n\n\n\n\n\nSample Teams output"
  },
  {
    "objectID": "bi_training/power_automate_conditions.html#project-4-varying-the-text-of-that-teams-message-by-count",
    "href": "bi_training/power_automate_conditions.html#project-4-varying-the-text-of-that-teams-message-by-count",
    "title": "Conditions in Power Automate",
    "section": "Project 4: varying the text of that Teams message by count",
    "text": "Project 4: varying the text of that Teams message by count\n\nso far, our message just repeats the contents of file_count with a bit of static text\nwe can use a Condition to change the text that accompanies that value \n\nwe should be able to adapt our previous flow to use that condition"
  },
  {
    "objectID": "bi_training/power_automate_conditions.html#project-5-varying-text-by-time-of-day",
    "href": "bi_training/power_automate_conditions.html#project-5-varying-text-by-time-of-day",
    "title": "Conditions in Power Automate",
    "section": "Project 5: varying text by time of day",
    "text": "Project 5: varying text by time of day\n\nwe could now add another variable to our flow\nthis will set a value based on the time of day\n\nwe can set our condition to use this variable instead of file_count"
  },
  {
    "objectID": "bi_training/power_automate_mailing_list.html",
    "href": "bi_training/power_automate_mailing_list.html",
    "title": "Mailing lists in Power Automate",
    "section": "",
    "text": "No feedback found for this session"
  },
  {
    "objectID": "bi_training/power_automate_mailing_list.html#aim",
    "href": "bi_training/power_automate_mailing_list.html#aim",
    "title": "Mailing lists in Power Automate",
    "section": "Aim",
    "text": "Aim\n\nbuild a simple mailing list:\n\nbased on Microsoft Lists\nwith subscribe/unsubscribe forms built in Forms\nso that we can subscribe/unsubscribe/send out a mailshot via Power Automate\n\n\nwe’ll give you some practical Power Automate experience\nand identify some common pain-points"
  },
  {
    "objectID": "bi_training/power_automate_mailing_list.html#general-principles",
    "href": "bi_training/power_automate_mailing_list.html#general-principles",
    "title": "Mailing lists in Power Automate",
    "section": "General principles",
    "text": "General principles\n\nwork incrementally\nkeep names simple (form/list/flow names are all cake xxxx, variables are single-word, lowercase…)\nunderstand the way that Lists understands names\ntest and check and test and check and test…"
  },
  {
    "objectID": "bi_training/power_automate_mailing_list.html#setup",
    "href": "bi_training/power_automate_mailing_list.html#setup",
    "title": "Mailing lists in Power Automate",
    "section": "Setup",
    "text": "Setup\n\nmake an Excel table\n\n\nname, email, subscribed, cake\n\n\n\nmake a new List by uploading that Excel table \n\ncheck the data types\nbeware the Title column. That’s roughly an index: we’ll use Title to hold our email addresses (as we’ll check membership etc by email)"
  },
  {
    "objectID": "bi_training/power_automate_mailing_list.html#tweak-your-list",
    "href": "bi_training/power_automate_mailing_list.html#tweak-your-list",
    "title": "Mailing lists in Power Automate",
    "section": "Tweak your list",
    "text": "Tweak your list\n\nnow add subscribed / not_subscribed choices to your subscribed column\n\n\n\n\n\nColumn settings\n\n\n\n\nEdit column to populate values"
  },
  {
    "objectID": "bi_training/power_automate_mailing_list.html#make-two-forms",
    "href": "bi_training/power_automate_mailing_list.html#make-two-forms",
    "title": "Mailing lists in Power Automate",
    "section": "Make two forms",
    "text": "Make two forms\n\nmake a new Form for subscriptions  \n\nmake a second, unsubscribe, form with email alone\nnote about form ID: the right way to identify your Forms"
  },
  {
    "objectID": "bi_training/power_automate_mailing_list.html#subscription-flow",
    "href": "bi_training/power_automate_mailing_list.html#subscription-flow",
    "title": "Mailing lists in Power Automate",
    "section": "Subscription flow",
    "text": "Subscription flow\n\nselect Build an automated flow"
  },
  {
    "objectID": "bi_training/power_automate_mailing_list.html#link-the-flow-trigger-to-your-form",
    "href": "bi_training/power_automate_mailing_list.html#link-the-flow-trigger-to-your-form",
    "title": "Mailing lists in Power Automate",
    "section": "Link the flow trigger to your form",
    "text": "Link the flow trigger to your form\n\nyour new flow should be populated with a response block \n\nuse the form ID of the subscription form as a custom value in the Form ID field  \n\nthat will leave Power Automate ‘watching’ your subscription form"
  },
  {
    "objectID": "bi_training/power_automate_mailing_list.html#then-retrieve-the-form-response-details",
    "href": "bi_training/power_automate_mailing_list.html#then-retrieve-the-form-response-details",
    "title": "Mailing lists in Power Automate",
    "section": "Then retrieve the form response details",
    "text": "Then retrieve the form response details\n\nAdd a Get response details block  \n\nthen populate as per the previous step. This retrieves the relevant information from your subscription form"
  },
  {
    "objectID": "bi_training/power_automate_mailing_list.html#create-a-new-list-item",
    "href": "bi_training/power_automate_mailing_list.html#create-a-new-list-item",
    "title": "Mailing lists in Power Automate",
    "section": "Create a new List Item",
    "text": "Create a new List Item\n\nnow we’ll pass the form information to Lists\nCreate a Create item block  \n\nyou’ll need your List address  \n\nnow test - it should create a blank List item when you submit something into the form"
  },
  {
    "objectID": "bi_training/power_automate_mailing_list.html#populate-specific-values",
    "href": "bi_training/power_automate_mailing_list.html#populate-specific-values",
    "title": "Mailing lists in Power Automate",
    "section": "Populate specific values",
    "text": "Populate specific values\n\nnow we map the Form fields to the columns in our List \n\nthe test now should be more interesting. Ensure that everything is being sent to the right column"
  },
  {
    "objectID": "bi_training/power_automate_mailing_list.html#unsubscribe",
    "href": "bi_training/power_automate_mailing_list.html#unsubscribe",
    "title": "Mailing lists in Power Automate",
    "section": "Unsubscribe",
    "text": "Unsubscribe\n\ncreate a new Flow, with same two response blocks as previously\nmake sure those link to your unsubscribe form\nthen add additional blocks: Get Items and Update item"
  },
  {
    "objectID": "bi_training/power_automate_mailing_list.html#update-item",
    "href": "bi_training/power_automate_mailing_list.html#update-item",
    "title": "Mailing lists in Power Automate",
    "section": "Update item",
    "text": "Update item\n\nstart with your Update item block as follows:"
  },
  {
    "objectID": "bi_training/power_automate_mailing_list.html#update-item-fails",
    "href": "bi_training/power_automate_mailing_list.html#update-item-fails",
    "title": "Mailing lists in Power Automate",
    "section": "Update item fails??",
    "text": "Update item fails??\n\nI’d expect that to fail…"
  },
  {
    "objectID": "bi_training/power_automate_mailing_list.html#a-digression-list-names",
    "href": "bi_training/power_automate_mailing_list.html#a-digression-list-names",
    "title": "Mailing lists in Power Automate",
    "section": "A digression: List names",
    "text": "A digression: List names\n\nLists stores column names in an aggravating way:\n\nthere’s the Name, which is the name you see in the column header\nbut there’s also the Field name, which is the proper-actual-real name of the column, as far as Lists is concerned\n\nI think field names are immutable, so this bad design is probably a kludge to let people rename columns\n\n\n\n\nyour email column doesn’t work because we need to use the Field name"
  },
  {
    "objectID": "bi_training/power_automate_mailing_list.html#fixing-the-field-name",
    "href": "bi_training/power_automate_mailing_list.html#fixing-the-field-name",
    "title": "Mailing lists in Power Automate",
    "section": "Fixing the field name",
    "text": "Fixing the field name\n\nfind the field name in Lists from Settings &gt; List Settings\n\nthen click on the column name \n\nthe end of the URL should give the proper field name"
  },
  {
    "objectID": "bi_training/power_automate_mailing_list.html#mail-flow",
    "href": "bi_training/power_automate_mailing_list.html#mail-flow",
    "title": "Mailing lists in Power Automate",
    "section": "Mail flow",
    "text": "Mail flow\n\nAfter that digression, the actual mailing flow is easy\nnew instant cloud flow triggered by a button  \nGet items from your list with a filter for subscribed - something like field_3 eq 'subscribed'"
  },
  {
    "objectID": "bi_training/power_automate_mailing_list.html#compose-a-message",
    "href": "bi_training/power_automate_mailing_list.html#compose-a-message",
    "title": "Mailing lists in Power Automate",
    "section": "Compose a message",
    "text": "Compose a message\n\nthere are several different email blocks you can try:"
  },
  {
    "objectID": "bi_training/power_automate_mailing_list.html#test-and-check",
    "href": "bi_training/power_automate_mailing_list.html#test-and-check",
    "title": "Mailing lists in Power Automate",
    "section": "Test and check",
    "text": "Test and check\n\n\nReceived email"
  },
  {
    "objectID": "bi_training/power_automate_mailing_list.html#bonus-ball-prevent-redundancy",
    "href": "bi_training/power_automate_mailing_list.html#bonus-ball-prevent-redundancy",
    "title": "Mailing lists in Power Automate",
    "section": "Bonus ball: prevent redundancy",
    "text": "Bonus ball: prevent redundancy\n\nyou can tweak your subscription flow to allow people to update their details and re-subscribe via the subscription form"
  },
  {
    "objectID": "bi_training/power_automate_mailing_list.html#get-matching-items",
    "href": "bi_training/power_automate_mailing_list.html#get-matching-items",
    "title": "Mailing lists in Power Automate",
    "section": "Get matching items",
    "text": "Get matching items\n\non your subscription form, add a Get Items with a filter"
  },
  {
    "objectID": "bi_training/power_automate_mailing_list.html#control-flow-via-number-of-matching-items",
    "href": "bi_training/power_automate_mailing_list.html#control-flow-via-number-of-matching-items",
    "title": "Mailing lists in Power Automate",
    "section": "Control flow via number of matching items",
    "text": "Control flow via number of matching items\n\nnext, add a Condition testing the length of the body from the matching items step"
  },
  {
    "objectID": "bi_training/power_automate_mailing_list.html#create-item-is-as-before",
    "href": "bi_training/power_automate_mailing_list.html#create-item-is-as-before",
    "title": "Mailing lists in Power Automate",
    "section": "Create item is as before",
    "text": "Create item is as before\n\nCreate item (when the length = 0):"
  },
  {
    "objectID": "bi_training/power_automate_mailing_list.html#update-item-1",
    "href": "bi_training/power_automate_mailing_list.html#update-item-1",
    "title": "Mailing lists in Power Automate",
    "section": "Update item",
    "text": "Update item\n\nSimilar idea. The minimal version is just to change the subscribed status: \n\nYou could also add name, cake fields etc if you were keen"
  },
  {
    "objectID": "bi_training/power_automate_mailing_list.html#thanks",
    "href": "bi_training/power_automate_mailing_list.html#thanks",
    "title": "Mailing lists in Power Automate",
    "section": "Thanks",
    "text": "Thanks\n\nmany thanks to Maria Botha-Lopez (NES) who patiently taught me how to do this when I was new to Power Automate"
  },
  {
    "objectID": "bi_training/scope_of_the_possible_with_power_bi.html",
    "href": "bi_training/scope_of_the_possible_with_power_bi.html",
    "title": "Scope of the possible with Power BI",
    "section": "",
    "text": "Session materials\n\n\n\n\n\n pdf slides"
  },
  {
    "objectID": "bi_training/scope_of_the_possible_with_power_bi.html#previous-attendees-have-said",
    "href": "bi_training/scope_of_the_possible_with_power_bi.html#previous-attendees-have-said",
    "title": "Scope of the possible with Power BI",
    "section": "Previous attendees have said…",
    "text": "Previous attendees have said…\n\n17 previous attendees have left feedback\n100% would recommend this session to a colleague\n88% said that this session was pitched correctly\n\n\n\n\n\n\n\n\n\n\n\nThree random comments from previous attendees\n\n\n\n\nIt was great to get a more detailed look at what the possible limitations are when considering Power BI\nI listen in to these sessions a lot and they get repeated. It’s good to get reminded about tools and refreshed every now and then.\nReally useful session to get an overview of how Power BI can be used, relevant to our sector"
  },
  {
    "objectID": "bi_training/scope_of_the_possible_with_power_bi.html#session-outline",
    "href": "bi_training/scope_of_the_possible_with_power_bi.html#session-outline",
    "title": "Scope of the possible with Power BI",
    "section": "Session outline",
    "text": "Session outline\n\nthis session is a non-technical overview designed for service leads\nWhy Power BI, and why this session?\nPower BI demo - build a simple dashboard\nStrengths and weaknesses\n\nobvious\nless obvious\n\n\nAlternatives\nSkill development"
  },
  {
    "objectID": "bi_training/scope_of_the_possible_with_power_bi.html#power-bi",
    "href": "bi_training/scope_of_the_possible_with_power_bi.html#power-bi",
    "title": "Scope of the possible with Power BI",
    "section": "Power BI?",
    "text": "Power BI?\n\nnewish (c.2015)\nbased on Microsoft’s SQL reporting products\n\nproprietary, closed-source, paid-for\n\n\nintegrates functions from several other Microsoft data products (bits of Excel, PowerPivot, PowerQuery…)\nproduces interactive dashboards"
  },
  {
    "objectID": "bi_training/scope_of_the_possible_with_power_bi.html#why-this-session",
    "href": "bi_training/scope_of_the_possible_with_power_bi.html#why-this-session",
    "title": "Scope of the possible with Power BI",
    "section": "Why this session?",
    "text": "Why this session?\n\nthere is a lot of fluff talked about Power BI\n\ne.g. elaborate visualisations, fancy real-time data products…\n\n\nPower BI in general is promoted as a no-code tool\n\nthat’s just not true, as we’ll see\n\n\nPower BI has a sales-y focus\n\nthat conceals some of its most useful properties\n\n\nso Power BI, as a platform, requires some translation to the complicated reality of health and social care data\n\nand Power BI offers real strengths in managing and exploiting our data, even when the pain-points are taken into account"
  },
  {
    "objectID": "bi_training/scope_of_the_possible_with_power_bi.html#power-bi-demo",
    "href": "bi_training/scope_of_the_possible_with_power_bi.html#power-bi-demo",
    "title": "Scope of the possible with Power BI",
    "section": "Power BI demo",
    "text": "Power BI demo\n\nusing tidied of the GP practice size dataset from April 2024\n\nGP practice size data\nDemographic data\n\n\n\n\nNote this data is cleaned\n\n\n\n\n\n\n\n\n\nName\nPracticeListSize\nPostcode\nHBName\nGPCluster\nCode\n\n\n\nDrs MacNeill, Clarey & Henderson\n6573\nG3 8ND\nNHS Greater Glasgow and Clyde\nNW - A\n40455\n\n\nEdzell Health Centre\n2730\nDD9 7TA\nNHS Tayside\nNorth East/Angus\n13091\n\n\nAuchinleck Surgery\n3044\nKA18 2AY\nNHS Ayrshire and Arran\nCumnock Cluster\n80772"
  },
  {
    "objectID": "bi_training/scope_of_the_possible_with_power_bi.html#load-some-data",
    "href": "bi_training/scope_of_the_possible_with_power_bi.html#load-some-data",
    "title": "Scope of the possible with Power BI",
    "section": "Load some data",
    "text": "Load some data\n\n\nLots of different data loading options"
  },
  {
    "objectID": "bi_training/scope_of_the_possible_with_power_bi.html#preview",
    "href": "bi_training/scope_of_the_possible_with_power_bi.html#preview",
    "title": "Scope of the possible with Power BI",
    "section": "Preview",
    "text": "Preview\n\n\nFriendly tools for previewing data"
  },
  {
    "objectID": "bi_training/scope_of_the_possible_with_power_bi.html#add-to-a-map",
    "href": "bi_training/scope_of_the_possible_with_power_bi.html#add-to-a-map",
    "title": "Scope of the possible with Power BI",
    "section": "Add to a map",
    "text": "Add to a map\n\n\nClever use of commercial postcode data"
  },
  {
    "objectID": "bi_training/scope_of_the_possible_with_power_bi.html#add-interactions",
    "href": "bi_training/scope_of_the_possible_with_power_bi.html#add-interactions",
    "title": "Scope of the possible with Power BI",
    "section": "Add interactions",
    "text": "Add interactions\n\n\nVisualisations are interactive"
  },
  {
    "objectID": "bi_training/scope_of_the_possible_with_power_bi.html#publish",
    "href": "bi_training/scope_of_the_possible_with_power_bi.html#publish",
    "title": "Scope of the possible with Power BI",
    "section": "Publish",
    "text": "Publish"
  },
  {
    "objectID": "bi_training/scope_of_the_possible_with_power_bi.html#add-more-visuals",
    "href": "bi_training/scope_of_the_possible_with_power_bi.html#add-more-visuals",
    "title": "Scope of the possible with Power BI",
    "section": "Add more visuals",
    "text": "Add more visuals\n\n\n30-odd built in, hundreds of free additional visuals, thousands of (often dodgy) commercial add-ins"
  },
  {
    "objectID": "bi_training/scope_of_the_possible_with_power_bi.html#add-more-data",
    "href": "bi_training/scope_of_the_possible_with_power_bi.html#add-more-data",
    "title": "Scope of the possible with Power BI",
    "section": "Add more data",
    "text": "Add more data\n\nwe could add the health board names, to make our visual more useful\nwe could also get GP practice demographics"
  },
  {
    "objectID": "bi_training/scope_of_the_possible_with_power_bi.html#add-more-data-1",
    "href": "bi_training/scope_of_the_possible_with_power_bi.html#add-more-data-1",
    "title": "Scope of the possible with Power BI",
    "section": "Add more data",
    "text": "Add more data\n\n\nTotally different data, but harmonised process for loading"
  },
  {
    "objectID": "bi_training/scope_of_the_possible_with_power_bi.html#re-shape-that-data",
    "href": "bi_training/scope_of_the_possible_with_power_bi.html#re-shape-that-data",
    "title": "Scope of the possible with Power BI",
    "section": "Re-shape that data",
    "text": "Re-shape that data\n\n\nNeatly-integrated PowerQuery, gives loads of scope for tidying and fixing data"
  },
  {
    "objectID": "bi_training/scope_of_the_possible_with_power_bi.html#data-modelling-tools",
    "href": "bi_training/scope_of_the_possible_with_power_bi.html#data-modelling-tools",
    "title": "Scope of the possible with Power BI",
    "section": "Data modelling tools",
    "text": "Data modelling tools\n\n\nFull suite of relational tools for the more ambitious projects"
  },
  {
    "objectID": "bi_training/scope_of_the_possible_with_power_bi.html#pre-packed-visuals",
    "href": "bi_training/scope_of_the_possible_with_power_bi.html#pre-packed-visuals",
    "title": "Scope of the possible with Power BI",
    "section": "Pre-packed visuals",
    "text": "Pre-packed visuals\n\n\nMicrosoft’s Tornado chart"
  },
  {
    "objectID": "bi_training/scope_of_the_possible_with_power_bi.html#demographics",
    "href": "bi_training/scope_of_the_possible_with_power_bi.html#demographics",
    "title": "Scope of the possible with Power BI",
    "section": "Demographics",
    "text": "Demographics\n\n\nThese can be cross filtered to give national/board/practice level insights"
  },
  {
    "objectID": "bi_training/scope_of_the_possible_with_power_bi.html#strengths",
    "href": "bi_training/scope_of_the_possible_with_power_bi.html#strengths",
    "title": "Scope of the possible with Power BI",
    "section": "Strengths",
    "text": "Strengths\n\nby far the easiest way of producing interactive data products\ngreat tools for tidying data\ngood for iterative projects\ndata hubbing / self-service data\nscaling\npotential to manage complex and sensitive data on existing infrastructure"
  },
  {
    "objectID": "bi_training/scope_of_the_possible_with_power_bi.html#weaknesses",
    "href": "bi_training/scope_of_the_possible_with_power_bi.html#weaknesses",
    "title": "Scope of the possible with Power BI",
    "section": "Weaknesses",
    "text": "Weaknesses\n\nreally needs clean and tidy data\npublication can be complicated and expensive\nsteepening pain curve. Easy to start projects, but more involved analysis is messy\ncomplex IG landscape\nmessy skills development journey"
  },
  {
    "objectID": "bi_training/why_bother_with_power_bi.html",
    "href": "bi_training/why_bother_with_power_bi.html",
    "title": "Why bother with Power BI?",
    "section": "",
    "text": "20 previous attendees have left feedback\n100% would recommend this session to a colleague\n100% said that this session was pitched correctly\n\n\n\n\n\n\n\n\n\n\n\nThree random comments from previous attendees\n\n\n\n\nHeard of Power BI but having no experience, it was good to be able to see what this software / application does and how it works. I doubt I will need to use but at least I know what it is for.\nOverall very positive, whipped through everything, did what was needed. As a person who is easily distracted, I do get a bit distracted when you reply to comments and go on tiny tangents involving programming with unfamiliar names and acronyms, but I get that the vibe overall is that you want people to be involved and commenting etc. I really appreciate these sessions as I try to get my head round new things.\nI was blown away at the map example and had not seen anything like this before"
  },
  {
    "objectID": "bi_training/why_bother_with_power_bi.html#previous-attendees-have-said",
    "href": "bi_training/why_bother_with_power_bi.html#previous-attendees-have-said",
    "title": "Why bother with Power BI?",
    "section": "",
    "text": "20 previous attendees have left feedback\n100% would recommend this session to a colleague\n100% said that this session was pitched correctly\n\n\n\n\n\n\n\n\n\n\n\nThree random comments from previous attendees\n\n\n\n\nHeard of Power BI but having no experience, it was good to be able to see what this software / application does and how it works. I doubt I will need to use but at least I know what it is for.\nOverall very positive, whipped through everything, did what was needed. As a person who is easily distracted, I do get a bit distracted when you reply to comments and go on tiny tangents involving programming with unfamiliar names and acronyms, but I get that the vibe overall is that you want people to be involved and commenting etc. I really appreciate these sessions as I try to get my head round new things.\nI was blown away at the map example and had not seen anything like this before"
  },
  {
    "objectID": "bi_training/why_bother_with_power_bi.html#welcome",
    "href": "bi_training/why_bother_with_power_bi.html#welcome",
    "title": "Why bother with Power BI?",
    "section": "Welcome",
    "text": "Welcome\n\nwelcome to Why bother with Power BI?\n\nthis session is 🥬 - a non-technical introduction for pre-beginners\nif you can’t access the chat, you might need to join our Teams channel: tinyurl.com/kindnetwork"
  },
  {
    "objectID": "bi_training/why_bother_with_power_bi.html#the-kind-network",
    "href": "bi_training/why_bother_with_power_bi.html#the-kind-network",
    "title": "Why bother with Power BI?",
    "section": "The KIND network",
    "text": "The KIND network\n\na social learning space for staff working with knowledge, information, and data across health, social care, and housing in Scotland\nwe offer social support, free training, mentoring, community events, …\n\nTeams channel / mailing list"
  },
  {
    "objectID": "bi_training/why_bother_with_power_bi.html#session-outline",
    "href": "bi_training/why_bother_with_power_bi.html#session-outline",
    "title": "Why bother with Power BI?",
    "section": "Session outline",
    "text": "Session outline\n\ntwo minute overview of Power BI\nstrengths and weaknesses\nmaking Power BI work for you\nnext steps and training"
  },
  {
    "objectID": "bi_training/why_bother_with_power_bi.html#a-brief-overview-of-power-bi",
    "href": "bi_training/why_bother_with_power_bi.html#a-brief-overview-of-power-bi",
    "title": "Why bother with Power BI?",
    "section": "A brief overview of Power BI",
    "text": "A brief overview of Power BI\n\nnew\nintegrates several existing Microsoft products (bits of Excel, PowerPivot, PowerQuery…)\nproduces interactive dashboards\nproprietary, closed-source, paid-for"
  },
  {
    "objectID": "bi_training/why_bother_with_power_bi.html#central-idea",
    "href": "bi_training/why_bother_with_power_bi.html#central-idea",
    "title": "Why bother with Power BI?",
    "section": "Central idea",
    "text": "Central idea\n\ndata is complicated\ngood data analysis helps make services better\nbut predicting what data users will need is hard"
  },
  {
    "objectID": "bi_training/why_bother_with_power_bi.html#why-are-users-so-fussy-about-their-data",
    "href": "bi_training/why_bother_with_power_bi.html#why-are-users-so-fussy-about-their-data",
    "title": "Why bother with Power BI?",
    "section": "Why are users so fussy about their data?",
    "text": "Why are users so fussy about their data?\n\ndata can be used to answer lots of different kinds of questions\n\nanswering which/when questions\nseeing effects of changes\ncomparing different areas\nlooking at services over time\n…"
  },
  {
    "objectID": "bi_training/why_bother_with_power_bi.html#power-bi",
    "href": "bi_training/why_bother_with_power_bi.html#power-bi",
    "title": "Why bother with Power BI?",
    "section": "Power BI",
    "text": "Power BI\n\nlets users re-arrange their data to suit (interactive)\nprovides a standard way of accessing data from lots of sources (data hub)\nscales really well (dashboard example)"
  },
  {
    "objectID": "bi_training/why_bother_with_power_bi.html#power-bi-demo",
    "href": "bi_training/why_bother_with_power_bi.html#power-bi-demo",
    "title": "Why bother with Power BI?",
    "section": "Power BI demo",
    "text": "Power BI demo\ntake a spreadsheet and load that data \n\npreview the data \n\nwork with the data in Power BI \n\ntidy/wrangle the data in Power Query \n ### add a map visual  \npopulate with our data \n\nadd a column graph \n\npopulate with drag and drop \n\nadd slicer \n\nslicers change our visualisations \n\nadd a numeric summary \n\npublish\nSee preview - although note that access might require permission"
  },
  {
    "objectID": "bi_training/why_bother_with_power_bi.html#five-top-tips",
    "href": "bi_training/why_bother_with_power_bi.html#five-top-tips",
    "title": "Why bother with Power BI?",
    "section": "Five top tips",
    "text": "Five top tips\n\npotentially has the power to get lots of new good out of existing data\nPower BI needs tidy input data - so use Excel tables etc\ndon’t believe the no-code lies - you’ll need some DAX and Power Query M\n\n\npublishing is complicated and potentially expensive, so needs investigating before building a product\ncomplex IG picture across Scotland, so please get official guidance early"
  },
  {
    "objectID": "bi_training/why_bother_with_power_bi.html#chat-queries-questions",
    "href": "bi_training/why_bother_with_power_bi.html#chat-queries-questions",
    "title": "Why bother with Power BI?",
    "section": "Chat, queries, questions",
    "text": "Chat, queries, questions\n\nTeams channel: tinyurl.com/kindnetwork\n\nweekly email update: tinyurl.com/kindupdate\n\nTraining mini-site: tinyurl.com/kindtrain"
  },
  {
    "objectID": "excel/excel_first_steps.html",
    "href": "excel/excel_first_steps.html",
    "title": "Excel first steps",
    "section": "",
    "text": "This session is part of our Excel for beginners course. That’s a series of six linked sessions, delivered on Teams, that give an introduction to Excel for people working in health and social care. The sessions are:\nTogether, they aim to help you develop an appropriate set of Excel skills to help your work. This session covers a general overview of our beginner’s skill tree:"
  },
  {
    "objectID": "excel/excel_first_steps.html#previous-attendees-have-said",
    "href": "excel/excel_first_steps.html#previous-attendees-have-said",
    "title": "Excel first steps",
    "section": "Previous attendees have said…",
    "text": "Previous attendees have said…\n\n109 previous attendees have left feedback\n99% would recommend this session to a colleague\n95% said that this session was pitched correctly\n\n\n\n\n\n\n\n\n\n\n\nThree random comments from previous attendees\n\n\n\n\ngood refresher on basics as use it often but may have mixed a trick in how to use it\nThey were so patient, they answered the same questions in different ways to help others understand.\nI have used Excel on a very basic level by teaching myself. I found this very informative (especially the ‘insert table’). Looking forward to the formulae session as the test I did with the dates did not work."
  },
  {
    "objectID": "excel/excel_first_steps.html#video-overview",
    "href": "excel/excel_first_steps.html#video-overview",
    "title": "Excel first steps",
    "section": "Video overview",
    "text": "Video overview"
  },
  {
    "objectID": "excel/excel_first_steps.html#a-brief-overview-of-excel",
    "href": "excel/excel_first_steps.html#a-brief-overview-of-excel",
    "title": "Excel first steps",
    "section": "A brief overview of Excel",
    "text": "A brief overview of Excel\n\n\nExcel might be the cement of the universe\n\n\none of the oldest, and most widely used, pieces of desktop software\nubiquitous in business, finance, health and social care…\nproprietary, closed-source, paid-for\nmany versions"
  },
  {
    "objectID": "excel/excel_first_steps.html#but-excel-is-badly-used-on-the-whole",
    "href": "excel/excel_first_steps.html#but-excel-is-badly-used-on-the-whole",
    "title": "Excel first steps",
    "section": "But Excel is badly used, on the whole",
    "text": "But Excel is badly used, on the whole\n\nPHE lost 16k COVID19+ results\nMI5 bugged 134 people they didn’t mean to\n\nJP Morgan 2012 had a manually-updated spreadsheet\n\ndivided by sum, rather than average\nmassive losses, $2 - $6 billion??"
  },
  {
    "objectID": "excel/excel_first_steps.html#and-most-of-us-fall-into-excel-work",
    "href": "excel/excel_first_steps.html#and-most-of-us-fall-into-excel-work",
    "title": "Excel first steps",
    "section": "And most of us fall into Excel work…",
    "text": "And most of us fall into Excel work…\n\nmost of us haven’t had any data training\n\ne.g. in KIND network (which is a very techy group) 75% didn’t have a formal qualification\n\n\nand the responsibility for doing that data work well falls on many of us\n\ndata work has become more prominent in lots of jobs\n\n\nbut good data work is really important…"
  },
  {
    "objectID": "excel/excel_first_steps.html#good-data-helps",
    "href": "excel/excel_first_steps.html#good-data-helps",
    "title": "Excel first steps",
    "section": "Good data helps…",
    "text": "Good data helps…\n\nanswering which/when questions\nseeing effects of changes\ncomparing different areas\nlooking at services over time\n…"
  },
  {
    "objectID": "excel/excel_first_steps.html#one-word-of-warning-before-the-practical-part",
    "href": "excel/excel_first_steps.html#one-word-of-warning-before-the-practical-part",
    "title": "Excel first steps",
    "section": "One word of warning before the practical part",
    "text": "One word of warning before the practical part\n\nthere are lots of versions of Excel\nthey all work slightly differently\nplease don’t panic if what you see looks slightly different from what I’m showing you\nplease ask if you’re not happy/confident!"
  },
  {
    "objectID": "excel/excel_first_steps.html#opening-excel-desktop",
    "href": "excel/excel_first_steps.html#opening-excel-desktop",
    "title": "Excel first steps",
    "section": "Opening Excel (desktop)",
    "text": "Opening Excel (desktop)\n\nfind Excel in your Windows Start menu \n\nyou’ll need to create a new blank workbook"
  },
  {
    "objectID": "excel/excel_first_steps.html#opening-excel-web",
    "href": "excel/excel_first_steps.html#opening-excel-web",
    "title": "Excel first steps",
    "section": "Opening Excel (web)",
    "text": "Opening Excel (web)\n\nusually at https://www.office.com/launch/excel\n\nyou’ll need to create a new blank workbook"
  },
  {
    "objectID": "excel/excel_first_steps.html#interface",
    "href": "excel/excel_first_steps.html#interface",
    "title": "Excel first steps",
    "section": "Interface",
    "text": "Interface\n\n\nExcel interface"
  },
  {
    "objectID": "excel/excel_first_steps.html#central-idea",
    "href": "excel/excel_first_steps.html#central-idea",
    "title": "Excel first steps",
    "section": "Central idea",
    "text": "Central idea\n\npieces of data are stored in cells\n\none value, one cell\n\n\ncells are arranged into rows and columns \n\narranging data like this allows us to analyse it\nit’s not just Word on a grid"
  },
  {
    "objectID": "excel/excel_first_steps.html#save-close-open",
    "href": "excel/excel_first_steps.html#save-close-open",
    "title": "Excel first steps",
    "section": "Save, close, open",
    "text": "Save, close, open\n\n\nsave your new workbook\nclose it\nre-open it (possibly from recent files)"
  },
  {
    "objectID": "excel/excel_first_steps.html#references",
    "href": "excel/excel_first_steps.html#references",
    "title": "Excel first steps",
    "section": "References",
    "text": "References\n\nevery cell in Excel has a reference - like its address\nreferences look like this: E7 \n\nE refers to a vertical column\n\n7 to a horizontal row"
  },
  {
    "objectID": "excel/excel_first_steps.html#data-entry",
    "href": "excel/excel_first_steps.html#data-entry",
    "title": "Excel first steps",
    "section": "Data entry",
    "text": "Data entry\n\nlet’s add some data…\nwe can type into the cells  \n\nthat data appears in the formula bar too"
  },
  {
    "objectID": "excel/excel_first_steps.html#an-example-school-holidays",
    "href": "excel/excel_first_steps.html#an-example-school-holidays",
    "title": "Excel first steps",
    "section": "An example: school holidays",
    "text": "An example: school holidays\n\nHere are some school holiday dates\n\nmake three headings in row 1: name, start_date, end_date"
  },
  {
    "objectID": "excel/excel_first_steps.html#values",
    "href": "excel/excel_first_steps.html#values",
    "title": "Excel first steps",
    "section": "Values",
    "text": "Values\n\nlet’s add some values from the school holiday dates\n\nname of holiday\nstart date\nend date\n\ndates usually go DD/MM/YYYY\n\nas we’ll see, Excel does lots of helping when we enter dates…\n…😱\n\n\nwe’ll only need a few rows of data\n\n\nname start_date end_date Mid-term holidays 14/10/2024 18/10/2024 In service day 21/10/2024 21/10/2024 St Andrew’s Day 02/12/2024 02/12/2024"
  },
  {
    "objectID": "excel/excel_first_steps.html#tidy-data",
    "href": "excel/excel_first_steps.html#tidy-data",
    "title": "Excel first steps",
    "section": "Tidy data",
    "text": "Tidy data\n\nkeep things consistent - spelling, case, formats, etc\n\none piece of data per cell\none instance per row (one school holiday per row)\none variable per column (a column of names, one of start dates…)"
  },
  {
    "objectID": "excel/excel_first_steps.html#tables",
    "href": "excel/excel_first_steps.html#tables",
    "title": "Excel first steps",
    "section": "Tables",
    "text": "Tables\n\nwe can convert this group of cells into a proper table\n\nclick in one of your cells of data  \n\n\nInsert &gt; Table (or Ctrl + T)  \n\nclick OK"
  },
  {
    "objectID": "excel/excel_first_steps.html#lots-of-new-things-to-see",
    "href": "excel/excel_first_steps.html#lots-of-new-things-to-see",
    "title": "Excel first steps",
    "section": "Lots of new things to see",
    "text": "Lots of new things to see\n\n\nTable features"
  },
  {
    "objectID": "excel/excel_first_steps.html#autofill",
    "href": "excel/excel_first_steps.html#autofill",
    "title": "Excel first steps",
    "section": "Autofill",
    "text": "Autofill\n\nwe’ll add a formula to calculate how long our holidays are\nadd a new column called days\n\npaste = 1 + (C2 - B2) into the first cell of that new column\n\nand look out for our session on formulas…\n\n\ndouble-click the green fill handle to fill the rest of the column"
  },
  {
    "objectID": "excel/excel_first_steps.html#formatting",
    "href": "excel/excel_first_steps.html#formatting",
    "title": "Excel first steps",
    "section": "Formatting",
    "text": "Formatting\n\nwe can change the way that our spreadsheet looks\nwe can also change the way our values look"
  },
  {
    "objectID": "excel/excel_first_steps.html#cell-formatting",
    "href": "excel/excel_first_steps.html#cell-formatting",
    "title": "Excel first steps",
    "section": "Cell formatting",
    "text": "Cell formatting\n\nsome examples  \nhighlighting\nbold\nborders"
  },
  {
    "objectID": "excel/excel_first_steps.html#number-formatting",
    "href": "excel/excel_first_steps.html#number-formatting",
    "title": "Excel first steps",
    "section": "Number formatting",
    "text": "Number formatting\n\nour dates are number formatted\n\nExcel dates are actually numbers (like 45583) formatted to look like dates\n1900 dates!\npercentages, £, …"
  },
  {
    "objectID": "excel/excel_first_steps.html#conditional-formatting",
    "href": "excel/excel_first_steps.html#conditional-formatting",
    "title": "Excel first steps",
    "section": "Conditional formatting",
    "text": "Conditional formatting\n\nwe can also format based on values  \n\ntake care though - this can be both ugly, and inaccessible"
  },
  {
    "objectID": "excel/excel_formulas.html",
    "href": "excel/excel_formulas.html",
    "title": "Excel formulas",
    "section": "",
    "text": "This session is part of our Excel for beginners course. That’s a series of six linked sessions, delivered on Teams, that give an introduction to Excel for people working in health and social care. The sessions are:\nTogether, they aim to help you develop an appropriate set of Excel skills to help your work. This session covers formulas in Excel:"
  },
  {
    "objectID": "excel/excel_formulas.html#previous-attendees-have-said",
    "href": "excel/excel_formulas.html#previous-attendees-have-said",
    "title": "Excel formulas",
    "section": "Previous attendees have said…",
    "text": "Previous attendees have said…\n\n21 previous attendees have left feedback\n100% would recommend this session to a colleague\n100% said that this session was pitched correctly\n\n\n\n\n\n\n\n\n\n\n\nThree random comments from previous attendees\n\n\n\n\nGreat session, easy to follow. Thanks Brendan\nReally useful for going over basic concepts that I haven’t studied in a long time. So it was great for relearning the basic building blocks of how Excel works. Appropriate level for beginners session.\nWell delivered, appropriate, useful content - was helpful to try out the examples during the session."
  },
  {
    "objectID": "excel/excel_formulas.html#session-outline",
    "href": "excel/excel_formulas.html#session-outline",
    "title": "Excel formulas",
    "section": "Session outline",
    "text": "Session outline\n\nvalues and formulas\nsimple functions\nreferences in formulas"
  },
  {
    "objectID": "excel/excel_formulas.html#values-and-formulas",
    "href": "excel/excel_formulas.html#values-and-formulas",
    "title": "Excel formulas",
    "section": "Values and formulas",
    "text": "Values and formulas\n\ncells in Excel contain either values, or formulas\nwe’ll start with some data derived from NRS 2022 population estimates\n\nmake sure you have the sample data available"
  },
  {
    "objectID": "excel/excel_formulas.html#values",
    "href": "excel/excel_formulas.html#values",
    "title": "Excel formulas",
    "section": "Values",
    "text": "Values\n\n\nExample value, showing identical cell contents and formula bar contents\n\n\nwhen you enter some data in a cell, we call that a value\n\nvalues look the same in their cell as in the formula bar"
  },
  {
    "objectID": "excel/excel_formulas.html#formulas",
    "href": "excel/excel_formulas.html#formulas",
    "title": "Excel formulas",
    "section": "Formulas",
    "text": "Formulas\n\nwe can also make a value using a formula\nExcel evaluates/calculates the formula, then displays the result as a value\nin an empty cell, try entering = 2 + 2\n\n\n\n\nExample formula, showing different cell contents and formula bar contents"
  },
  {
    "objectID": "excel/excel_formulas.html#example-formulas",
    "href": "excel/excel_formulas.html#example-formulas",
    "title": "Excel formulas",
    "section": "Example formulas",
    "text": "Example formulas\n\nwe can do ordinary arithmetic in formulas /, *, -, +…\nyou can also try & which joins values\n\n= \"This number is \" & 5"
  },
  {
    "objectID": "excel/excel_formulas.html#functions",
    "href": "excel/excel_formulas.html#functions",
    "title": "Excel formulas",
    "section": "Functions",
    "text": "Functions\n\nBut most formulas use functions, which are like the verbs of Excel\nTry = SUM(2, 2)"
  },
  {
    "objectID": "excel/excel_formulas.html#adding-functions",
    "href": "excel/excel_formulas.html#adding-functions",
    "title": "Excel formulas",
    "section": "Adding functions",
    "text": "Adding functions\n\nyou can type functions in by name (as above)\nyou can also add from the Formulas area of the ribbon \n\nor you can use the \\(fx\\) button by the formula bar"
  },
  {
    "objectID": "excel/excel_formulas.html#function-arguments",
    "href": "excel/excel_formulas.html#function-arguments",
    "title": "Excel formulas",
    "section": "Function arguments",
    "text": "Function arguments\n\nadding a function by \\(fx\\) or the menu brings up the Function Arguments interface \n\nThis is a helpful builder for more complicated functions"
  },
  {
    "objectID": "excel/excel_formulas.html#what-are-arguments",
    "href": "excel/excel_formulas.html#what-are-arguments",
    "title": "Excel formulas",
    "section": "What are arguments?",
    "text": "What are arguments?\n\n\narguments are the values we supply to a function\n\nin =SUM(2,3), the arguments are 2 and 3\n\n\n\nwe separate arguments with a comma ,\n\nwe need to be sure we’re supplying the right arguments in the right order (this gets described as the syntax of a function)\nwe also, while we’re on the jargon, say that functions return a value so = SUM(4,3) will return 7"
  },
  {
    "objectID": "excel/excel_formulas.html#useful-simple-functions",
    "href": "excel/excel_formulas.html#useful-simple-functions",
    "title": "Excel formulas",
    "section": "Useful simple functions",
    "text": "Useful simple functions\n\nin the same way as =SUM(), you can try:\n\nAVERAGE\n\nMIN and MAX\n\nSUBSTITUTE\nCEILING\nTODAY\nROUND"
  },
  {
    "objectID": "excel/excel_formulas.html#references-in-formulas",
    "href": "excel/excel_formulas.html#references-in-formulas",
    "title": "Excel formulas",
    "section": "References in formulas",
    "text": "References in formulas\n\nmostly, you won’t add values directly into your formulas\ninstead, you’ll bring them in from another part of your spreadsheet\ncan you use SUM() to make a total Male + Female column in the supplied data?\n\nadd a header in cell G2\n\nif needed, extend the table to include your new column\nin G3, enter the formula = SUM(C3, D3)\n\nthen copy down the rows by double-clicking the green fill handle"
  },
  {
    "objectID": "excel/excel_formulas.html#practice",
    "href": "excel/excel_formulas.html#practice",
    "title": "Excel formulas",
    "section": "Practice",
    "text": "Practice\n\ncalculate what proportion of your total population is under 16 (thanks, Lara Paterson (NHS Lanarkshire))\nestimate the population density\nfind an average area for each council area"
  },
  {
    "objectID": "excel/excel_formulas.html#troubleshooting-functions",
    "href": "excel/excel_formulas.html#troubleshooting-functions",
    "title": "Excel formulas",
    "section": "Troubleshooting functions",
    "text": "Troubleshooting functions\n\n\n#NAME? = “I don’t recognise that function name”\n\n#VALUE! = “Your syntax has gone wrong - usually in the wrong order”\n\n#REF! = “I don’t recognise that reference”\n\n#DIV/0! = “You’ve divided by zero”"
  },
  {
    "objectID": "excel/excel_foundations_02.html",
    "href": "excel/excel_foundations_02.html",
    "title": "Excel foundations 2",
    "section": "",
    "text": "This is a session in our intermediate-level Excel skill builder course. This consists of five practical training sessions, designed to be taken together, that are aimed at helping users with some prior Excel experience build and consolidate their skills. The sessions are:\nNo feedback found for this session"
  },
  {
    "objectID": "excel/excel_foundations_02.html#session-outline",
    "href": "excel/excel_foundations_02.html#session-outline",
    "title": "Excel foundations 2",
    "section": "Session outline",
    "text": "Session outline\n\nmost Excel questions can be broken down into these five areas\n\nCells and formatting\nRanges and tables\nReferences\nFormulas\nFunctions\n\n\nwe’ll look at formulas and functions in this session"
  },
  {
    "objectID": "excel/excel_foundations_02.html#getting-started",
    "href": "excel/excel_foundations_02.html#getting-started",
    "title": "Excel foundations 2",
    "section": "Getting started",
    "text": "Getting started\n\nfiles for today: + s02_exercises.xlsx as a starting-point for the exercises today + s02_exercises_final.xlsx is the end-point\n\n\n\n\n\n\n\nTask\n\n\n\n\nopen the sample spreadsheet s02_exercises.xlsx and have a look around\nfind the service_use worksheet"
  },
  {
    "objectID": "excel/excel_foundations_02.html#previously-on-building-excel-skills",
    "href": "excel/excel_foundations_02.html#previously-on-building-excel-skills",
    "title": "Excel foundations 2",
    "section": "Previously, on Building Excel Skills…",
    "text": "Previously, on Building Excel Skills…\n\n\n\n\n\n\nTask\n\n\n\n\nPlease find an example of number formatting on this worksheet. How would you alter this using a keyboard shortcut?\nTry typing Ctrl + 1. What happens?\nFind a table in the service_use worksheet. How would you convert that table to a range?\nFind an example of a cell reference. What does $ do in a reference?\nFind a named object on that worksheet. How would you change a name?"
  },
  {
    "objectID": "excel/excel_foundations_02.html#formulas",
    "href": "excel/excel_foundations_02.html#formulas",
    "title": "Excel foundations 2",
    "section": "Formulas",
    "text": "Formulas\n\nmost of the calculations that you do in Excel will be based on formulas\ne.g. references (like =A2) are simple formulas\nformulas are written in the formula bar\nyou start a formula with an =\n\n\n\n\n\n\n\n\nTask\n\n\n\n\nSelect a blank cell on the sheet\nClick in the formula bar and type =\n\nAfter the =, type a simple sum (like 2+2)\nPress Enter and see the result in the cell"
  },
  {
    "objectID": "excel/excel_foundations_02.html#formulas-1",
    "href": "excel/excel_foundations_02.html#formulas-1",
    "title": "Excel foundations 2",
    "section": "Formulas",
    "text": "Formulas\n\nlet’s build a more interesting formula using SUM()\n\n\nSUM() adds up the values of all the cells referenced inside the brackets\n\n\n\n\n\n\n\nTask\n\n\n\n\nClick the cell next to Service A total\n\nThen in the formula bar enter =SUM(B2:B14)\n\n\n\n\n\n\n: lets you specify a range of cells\nthere are several other ways of doing this:\n\nyou could write SUM(B2, B3, B4, B5 .....)\n\nif you select the range with the mouse, you might see your formula written as =SUM(service_t[service_a])"
  },
  {
    "objectID": "excel/excel_foundations_02.html#formulas-2",
    "href": "excel/excel_foundations_02.html#formulas-2",
    "title": "Excel foundations 2",
    "section": "Formulas",
    "text": "Formulas\n\n\n\n\n\n\nTask\n\n\n\n\nPlease populate Service B total and Service C total\n\nCan you figure out two ways of populating the Grand total value in the summary table?"
  },
  {
    "objectID": "excel/excel_foundations_02.html#working-with-formulas",
    "href": "excel/excel_foundations_02.html#working-with-formulas",
    "title": "Excel foundations 2",
    "section": "Working with formulas",
    "text": "Working with formulas\n\nformulas are the real power in Excel\nbut they’re usually hidden in the background\n\n\n\n\n\n\n\nTask\n\n\n\n\nTry pressing Ctrl + ` (backtick). What do you see? \n\n\n\n\n\nyou can also access this view by selecting Show Formulas button in the formulas section of the ribbon menu"
  },
  {
    "objectID": "excel/excel_foundations_02.html#formula-auditing",
    "href": "excel/excel_foundations_02.html#formula-auditing",
    "title": "Excel foundations 2",
    "section": "Formula auditing",
    "text": "Formula auditing\n\nExcel has lots of helpers for building functions \n\nwe’ll investigate these tools as we start writing our own functions today"
  },
  {
    "objectID": "excel/excel_foundations_02.html#working-with-formulas-1",
    "href": "excel/excel_foundations_02.html#working-with-formulas-1",
    "title": "Excel foundations 2",
    "section": "Working with formulas",
    "text": "Working with formulas\n\nlet’s make a new column using sum to give us daily totals across the three services\n\n\n\n\n\n\n\nTask\n\n\n\n\nSelect the duty_manager column by clicking the column letter\nRight click and select insert (or Ctrl + Shift + +)\nName the column daily_total\n\nIn the first cell in that column, use the sum function to add up the three service figures for that day\nNow use the fill handle to populate the empty cells in that daily_total column\nFinally, come out of the formula view (Ctrl + `)"
  },
  {
    "objectID": "excel/excel_foundations_02.html#max",
    "href": "excel/excel_foundations_02.html#max",
    "title": "Excel foundations 2",
    "section": "MAX()",
    "text": "MAX()\n\nnow that we’ve used SUM(), we can use another useful function: MAX()\n\nthis finds the maximum value in a specified range of cells\n\n\n\n\n\n\n\nTask\n\n\n\n\nselect the empty cell next to Peak daily load\n\nadd a formula =MAX(E2:E14)"
  },
  {
    "objectID": "excel/excel_foundations_02.html#about-functions",
    "href": "excel/excel_foundations_02.html#about-functions",
    "title": "Excel foundations 2",
    "section": "About functions",
    "text": "About functions\n\nExcel has hundreds of different functions\n\nyou can think of functions as the verbs of an Excel worksheet\n\n\n\n\n\n\n\nTask\n\n\n\n\nFind the Function library\n\nTry several new functions - and be ready to share the most interesting/surprising one with the group"
  },
  {
    "objectID": "excel/excel_foundations_02.html#formula-auditing-1",
    "href": "excel/excel_foundations_02.html#formula-auditing-1",
    "title": "Excel foundations 2",
    "section": "Formula auditing",
    "text": "Formula auditing\n\nboth formulas and cell references get hard to pick out from data in more complicated workbooks\n\n\n\n\n\n\n\nTask\n\n\n\n\npress Ctrl + ` (backtick) to open the formula auditing view"
  },
  {
    "objectID": "excel/excel_foundations_02.html#about-functions-1",
    "href": "excel/excel_foundations_02.html#about-functions-1",
    "title": "Excel foundations 2",
    "section": "About functions",
    "text": "About functions\n\nfour key bits of jargon: NAME, ARGUMENTS, SYNTAX, and RETURN\n\neach function has a name (like MAX()) that describes what the function does\neach function then has some arguments in the brackets after the name\n\nin the MAX() example, our argument was the range of cells E2:E14\n\narguments control what the function works on\n\n\neach function has a syntax, which is how these arguments need to be arranged\neach function will return something\n\nin the MAX() example, our returned value was the largest value found in that range"
  },
  {
    "objectID": "excel/excel_foundations_02.html#function-shortcuts-and-helpers",
    "href": "excel/excel_foundations_02.html#function-shortcuts-and-helpers",
    "title": "Excel foundations 2",
    "section": "Function shortcuts and helpers",
    "text": "Function shortcuts and helpers\n\n\nCtrl + ' copy-pastes the formula from the directly above verbatim\n\nCtrl + D copies the formula from the cell above. This version updates relative references, so is usually the better choice for copying formulas\n\nCtrl + A while typing the function name brings up the function argument interface \n\n\nCtrl + Shift + A while typing the function name brings up the arguments inline help\n\nF3 to paste names into functions\n\nShift + F3 to use the insert formula interface"
  },
  {
    "objectID": "excel/excel_foundations_02.html#using-functions-together",
    "href": "excel/excel_foundations_02.html#using-functions-together",
    "title": "Excel foundations 2",
    "section": "Using functions together",
    "text": "Using functions together\n\nnow that we’ve had a go with a couple of simple formulas, we should look at some more complicated formulas\nwe want to count the number of shifts each manager did during the early part of January\nthat takes a few steps, and a few functions"
  },
  {
    "objectID": "excel/excel_foundations_02.html#using-functions-together-1",
    "href": "excel/excel_foundations_02.html#using-functions-together-1",
    "title": "Excel foundations 2",
    "section": "Using functions together",
    "text": "Using functions together\n\nwe get a list of all the duty managers using =UNIQUE(F2:F14)\n\nnote that this formula spills - so it returns several cell’s worth of information\nthat’s unusual behaviour, and can cause trouble - watch out for #SPILL errors when Excel cannot fit the results into the desired location\n\n\nwe count the shifts for each of those managers with =COUNTIF($F$2:$F$14, C21)\n\nthen we calculate the busiest manager, and grab their name, using =INDEX(C18:C21, MATCH(MAX(D18:D21), D18:D21))"
  },
  {
    "objectID": "excel/excel_foundations_02.html#busiest-day",
    "href": "excel/excel_foundations_02.html#busiest-day",
    "title": "Excel foundations 2",
    "section": "Busiest day",
    "text": "Busiest day\n\n\n\n\n\n\nTask\n\n\n\n\nUsing a similar approach, can you give the date of the busiest day?\n\n\n\n=INDEX(A2:A14, MATCH(B25, E2:E14)) - busiest day"
  },
  {
    "objectID": "excel/excel_foundations_02.html#thank-yous",
    "href": "excel/excel_foundations_02.html#thank-yous",
    "title": "Excel foundations 2",
    "section": "Thank yous",
    "text": "Thank yous\nI’m grateful to Jennifer Watt, John Mackintosh, Duncan Sage, David Coigach, Michael Robb, Angela Godfrey, Spela Oberstar, Andrew Christopherson, and other members of the KIND network for their valuable suggestions and corrections to these training materials"
  },
  {
    "objectID": "excel/excel_programming.html",
    "href": "excel/excel_programming.html",
    "title": "Excel programming",
    "section": "",
    "text": "This is a session in our intermediate-level Excel skill builder course. This consists of five practical training sessions, designed to be taken together, that are aimed at helping users with some prior Excel experience build and consolidate their skills. The sessions are:\nNo feedback found for this session"
  },
  {
    "objectID": "excel/excel_programming.html#session-outline",
    "href": "excel/excel_programming.html#session-outline",
    "title": "Excel programming",
    "section": "Session outline",
    "text": "Session outline\n\nthis session is about programming in Excel\nit aims to show several tools that can help you build more robust Excel workbooks\n\nimplicit intersection and naming\nR1C1\nINDIRECT()\narray formulas\nlambda functions"
  },
  {
    "objectID": "excel/excel_programming.html#getting-started",
    "href": "excel/excel_programming.html#getting-started",
    "title": "Excel programming",
    "section": "Getting started",
    "text": "Getting started\n\nfiles for today:\n\n\ns04_exercises.xlsx is a starting-point for the exercises today\n\ns04_exercises_final.xlsx is the end-point for the exercises today - it’s there to help if you get stuck or lost\n\n\n\n\n\n\n\n\n\nTask\n\n\n\n\nopen the sample spreadsheet s04_exercises.xlsx and have a look around"
  },
  {
    "objectID": "excel/excel_programming.html#naming-reminder",
    "href": "excel/excel_programming.html#naming-reminder",
    "title": "Excel programming",
    "section": "Naming reminder",
    "text": "Naming reminder\n\n\n\n\n\n\nTask\n\n\n\n\nin the s04_exercises.xlsx workbook, go to the Names, indirect, R1C1 worksheet\nplease name the table “raw_data”\nplease name the average age cell “age_average”\nplease name the three summary cells for Service_duration “duration_summary”"
  },
  {
    "objectID": "excel/excel_programming.html#structured-referencing-and-the-implicit-intersection-operator",
    "href": "excel/excel_programming.html#structured-referencing-and-the-implicit-intersection-operator",
    "title": "Excel programming",
    "section": "Structured referencing and the implicit intersection operator",
    "text": "Structured referencing and the implicit intersection operator\n\nwe’ve already seen that we can use the shorthand table[col] to refer to a column\nwithin a table, we can use a modification of this to quickly refer to values\nwithin a table, you can refer to values in a column using the implicit intersection operator [@col]\n\n(if you’re using an older version of Excel, you might also see this written as [@[Service_duration]])"
  },
  {
    "objectID": "excel/excel_programming.html#r1c1",
    "href": "excel/excel_programming.html#r1c1",
    "title": "Excel programming",
    "section": "R1C1",
    "text": "R1C1\n\nR1C1 gives an alternative way of referring to cells\nslightly more complicated, but more precise, and less confusing\nlargely encountered in VBA, but available and helpful in standard Excel\n\n\n\n\n\n\n\nTask\n\n\n\n\nSwitch s04_exercises.xlsx to R1C1 by File &gt; Options &gt; Formulas &gt; R1C1 reference style \n\n\n\n\n\nin R1C1, column letters (A, B, C,…) are replaced by numbers\nrow numbers remain as row numbers\n\nR1C1 = A1\nR2C8 = H2\n\n\n\n\n\n\n\n\n\nTask\n\n\n\n\nin R16C4, please sum up the Service_duration column using R1C1\nswitch to inspect formulas (Ctrl + backtick)"
  },
  {
    "objectID": "excel/excel_programming.html#absoluterelative-r1c1-referencing",
    "href": "excel/excel_programming.html#absoluterelative-r1c1-referencing",
    "title": "Excel programming",
    "section": "Absolute/relative R1C1 referencing",
    "text": "Absolute/relative R1C1 referencing\n\nProvide an absolute reference by giving a row and column number - like R2C2\nProvide a relative reference by adding a numeric offset in square brackets\n\nrelative to the cell that the reference is written in\nfrom col 8, row 2, we’d reference col 2, row 2 by RC[-6]\n\n\n\nthe same combination of absolute/relative reference styles available as in A1 referencing"
  },
  {
    "objectID": "excel/excel_programming.html#why-bother-with-r1c1",
    "href": "excel/excel_programming.html#why-bother-with-r1c1",
    "title": "Excel programming",
    "section": "Why bother with R1C1?",
    "text": "Why bother with R1C1?\n\nR1C1 adds a bit of complexity to simple formulas\nbut it makes complicated formulas (and repeated formulas) much easier to understand\nthis is a big help when working with more complex Excel documents - particularly if you’re debugging something that’s gone wrong\n\n\n\n\n\n\n\nTask\n\n\n\n\nin column 6, row 2, copy the name “Keeshon Abdourahma ne” by using the formula =RC[-5]\n\nnow flash-fill down column 6 to duplicate all the names in column 1 (you should see the First name column populate too)\nnow switch off inspect formulas (Ctrl + backtick)\nnow switch back to A1 and re-inspect formulas\n\n\n\n\nR1C1 gives the same formulas for the same work across different columns\nwe have to work this out by hand with A1 referencing - the row number would be different each time\nthis helps us understand quickly when and where a formula is repeated\n(apparently) faster with very complex sheets - but given that Excel benchmarking is a closed book to me, I’ve been unable to find any solid information about this anywhere.\n\n\n\n\n\n\n\nTask\n\n\n\n\nPlease switch back to A1 referencing\nPlease switch out of the formula auditing view, if necessary"
  },
  {
    "objectID": "excel/excel_programming.html#indirect",
    "href": "excel/excel_programming.html#indirect",
    "title": "Excel programming",
    "section": "INDIRECT()",
    "text": "INDIRECT()\n\n\nINDIRECT() allows a user to specify a cell reference in a cell\nthat reduces the amount of fiddling about deep inside formulas if/when cell references change\nbreak the references out using INDIRECT, and edit the reference directly in the worksheet."
  },
  {
    "objectID": "excel/excel_programming.html#indirect-tasks",
    "href": "excel/excel_programming.html#indirect-tasks",
    "title": "Excel programming",
    "section": "\nINDIRECT() tasks",
    "text": "INDIRECT() tasks\n\nthe formula =LEFT(A1, SEARCH(\" \", A1)) effectively is a first-name finder - it returns all the text before the first space\nyou can see this formula in action in the First name column\n\n\n\n\n\n\n\nTask\n\n\n\n\nThere are four INDIRECT() examples in rows 19-22\nPlease review them and make sure that you see how INDIRECT() can be used in four different ways:\n\n\nby supplying an A1 reference\nby supplying an R1C1 reference by adding the argument FALSE inside INDIRECT()\n\nby referencing a named cell\nby concatenating a reference together from partial references using &"
  },
  {
    "objectID": "excel/excel_programming.html#array-formulas",
    "href": "excel/excel_programming.html#array-formulas",
    "title": "Excel programming",
    "section": "Array formulas",
    "text": "Array formulas\n\nusually, formulas produce one cell’s worth of output\n\narray formulas return &gt; 1 cell\nnew, M365 only\n\n\n\n\n\n\n\n\nTask\n\n\n\n\nIn the Array worksheet, there are four exercises to try\n\n=SORT(UNIQUE(array_table[num1])) will return a sorted column of unique values\n\n=FILTER(array_table[num1], array_table[num1] &gt; 6) will filter a column by values\n\n=FILTER(array_table[num1], array_table[num1] &gt; array_table[num2]) will filter a column by another column\n\n=RANDARRAY(20, 2, 1, 10, TRUE) will generate two columns of random values between 1 and 10"
  },
  {
    "objectID": "excel/excel_programming.html#lambda-functions",
    "href": "excel/excel_programming.html#lambda-functions",
    "title": "Excel programming",
    "section": "Lambda functions",
    "text": "Lambda functions\n\nlambda functions are a way of re-using complex formulas without copy-pasting\nhow does it work?\n\ntake an existing (working) formula\nwork out what the inputs are - usually, which cells are referenced\nconvert that function into a named lambda function which we can re-use"
  },
  {
    "objectID": "excel/excel_programming.html#making-a-lambda-function",
    "href": "excel/excel_programming.html#making-a-lambda-function",
    "title": "Excel programming",
    "section": "Making a lambda function",
    "text": "Making a lambda function\n\nimagine we want to convert = A3 * B3 to a lambda\nstart with the lambda outline = LAMBDA()\n\nnext, add test values in a second set of brackets - = LAMBDA()(A3, B3)\n\nwe now invent parameter names (like variable names) for each of those values, and add them: = LAMBDA(n_1, n_2, )(A3, B3)\n\nthen add the formula that we want to replicate = LAMBDA(n_1, n_2, n_1 * n_2)(A3, B3)"
  },
  {
    "objectID": "excel/excel_programming.html#saving-a-lambda-function",
    "href": "excel/excel_programming.html#saving-a-lambda-function",
    "title": "Excel programming",
    "section": "Saving a lambda function",
    "text": "Saving a lambda function\n\nonce you’ve tested and checked your lambda with a range of test values, copy your lambda formula\nthen open the name manager (Ctrl + F3)\ncreate a new name, then name your lambda definition using the New Name interface\npaste your lambda into the Refers to: section\n\nomit the test values - so just = LAMBDA(n_1, n_2, n_1 * n_2)\n\n\n\ntest your new lambda function\n\n\n\n\n\n\n\nTask\n\n\n\n\nbuild a simple formula based on two columns in the lambda sheet (like col1 * col2)\nin a new cell translate that into a lambda function, like =LAMBDA(num_1,num_2, num_1* num_2)(A1,B1)\n\nthen copy just the lambda part, and open the name manager (Ctrl + F3)\nNew…"
  },
  {
    "objectID": "excel/excel_programming.html#lambda-functions-1",
    "href": "excel/excel_programming.html#lambda-functions-1",
    "title": "Excel programming",
    "section": "Lambda functions",
    "text": "Lambda functions\n\na real-ish example: converting CHI to DoB\nyou can use the following 😱 formula: =DATE(IF(RIGHT(LEFT(G2, 6), 2) &gt; RIGHT(YEAR(TODAY()), 2), 19, 20) & RIGHT(LEFT(G2, 6), 2), MID(LEFT(G2, 6), 3, 2), LEFT(LEFT(G2, 6), 2))\n\nthat’s a horrifying thing to paste about, so we can make this into a lambda\ntest version =LAMBDA(chi, DATE(IF(RIGHT(LEFT(chi, 6), 2) &gt; RIGHT(YEAR(TODAY()), 2), 19, 20)&RIGHT(LEFT(chi, 6), 2), MID(LEFT(chi, 6), 3, 2), LEFT(LEFT(chi, 6), 2)))(G2)\n\nname manager then to CHI_TO_DOB"
  },
  {
    "objectID": "excel/excel_programming.html#thank-yous",
    "href": "excel/excel_programming.html#thank-yous",
    "title": "Excel programming",
    "section": "Thank yous",
    "text": "Thank yous\nI’m grateful to Jennifer Watt, John Mackintosh, Duncan Sage, David Coigach, Michael Robb, Angela Godfrey, Spela Oberstar, Andrew Christopherson, and other members of the KIND network for their valuable suggestions and corrections to these training materials"
  },
  {
    "objectID": "excel/excel_tables.html",
    "href": "excel/excel_tables.html",
    "title": "Excel tables",
    "section": "",
    "text": "This session is part of our Excel for beginners course. That’s a series of six linked sessions, delivered on Teams, that give an introduction to Excel for people working in health and social care. The sessions are:\nTogether, they aim to help you develop an appropriate set of Excel skills to help your work. This session covers tables in Excel:"
  },
  {
    "objectID": "excel/excel_tables.html#previous-attendees-have-said",
    "href": "excel/excel_tables.html#previous-attendees-have-said",
    "title": "Excel tables",
    "section": "Previous attendees have said…",
    "text": "Previous attendees have said…\n\n47 previous attendees have left feedback\n98% would recommend this session to a colleague\n91% said that this session was pitched correctly\n\n\n\n\n\n\n\n\n\n\n\nThree random comments from previous attendees\n\n\n\n\nGood pace, really useful and well done Brendan for keeping on topic! Looking forward to next sessions\nReally easy to understand and tables it is from now on :)\nReally enjoyed the session, these are brilliant, thanks Brendan."
  },
  {
    "objectID": "excel/excel_tables.html#session-outline",
    "href": "excel/excel_tables.html#session-outline",
    "title": "Excel tables",
    "section": "Session outline",
    "text": "Session outline\n\nintroduction\nadd and remove tables\ngrow and shrink tables\nautofill and friends\nsort and filter\nnames and reference\npass data to other tools"
  },
  {
    "objectID": "excel/excel_tables.html#introduction",
    "href": "excel/excel_tables.html#introduction",
    "title": "Excel tables",
    "section": "Introduction",
    "text": "Introduction\n\nthis is an easy session to sum up: use tables in Excel\n\nmost people don’t use Excel tables\nthey’re probably the best Excel skill investment there is\nthis is a practical session, so you’ll need some kind of Excel to follow along"
  },
  {
    "objectID": "excel/excel_tables.html#a-way-of-thinking-about-tables",
    "href": "excel/excel_tables.html#a-way-of-thinking-about-tables",
    "title": "Excel tables",
    "section": "A way of thinking about tables",
    "text": "A way of thinking about tables\n\nimagine you have several columns of data\nyou can think of a table as a container for that data: \n\nputting data in a table helps present your data neatly\ntables also protect your data, and make it easier to move from place to place"
  },
  {
    "objectID": "excel/excel_tables.html#some-data",
    "href": "excel/excel_tables.html#some-data",
    "title": "Excel tables",
    "section": "Some data",
    "text": "Some data\n\ntables are potentially useful throughout the life-cycle of an Excel file\nlet’s start at the beginning:\n\nopen Excel\nin a new worksheet, please enter today’s date\n\nDD/MM/YYYY format is best, but we’ll park that for the formatting session"
  },
  {
    "objectID": "excel/excel_tables.html#add-a-table",
    "href": "excel/excel_tables.html#add-a-table",
    "title": "Excel tables",
    "section": "Add a table",
    "text": "Add a table\n\nmake sure you have that date selected\nIn the ribbon menu, go to Insert &gt; Table  \nor you can use Ctrl + t\n\n\n\nyou’ll be asked to create a table - you should be able just to select OK"
  },
  {
    "objectID": "excel/excel_tables.html#a-first-table",
    "href": "excel/excel_tables.html#a-first-table",
    "title": "Excel tables",
    "section": "A first table",
    "text": "A first table\n\ncongratulations, you should now have a 1-cell table on your worksheet \n\nthink about this as a container for your data\n\nyou could call it a data structure instead if you wanted to be more fancy"
  },
  {
    "objectID": "excel/excel_tables.html#removing-your-table",
    "href": "excel/excel_tables.html#removing-your-table",
    "title": "Excel tables",
    "section": "Removing your table",
    "text": "Removing your table\n\nTables aren’t formatting - so you can’t clear them like formatting\nClick inside your table, and you should see a new section of the ribbon menu - Design or Table Design depending on your version \n\nSelect that Table Design section. The most useful parts are on the far left:  \n\nSelect Convert to Range - your table should now return to being an ordinary cell\nFinally, please re-table your cell"
  },
  {
    "objectID": "excel/excel_tables.html#grow-and-shrink-tables",
    "href": "excel/excel_tables.html#grow-and-shrink-tables",
    "title": "Excel tables",
    "section": "Grow and shrink tables",
    "text": "Grow and shrink tables\nLet’s add some new data:\n\nPlease add three or four more dates, going back into last week, in the rows below your date\nPlease add a word describing your main breakfast item in the next column\nPlease add a third column, scoring that breakfast out of ten"
  },
  {
    "objectID": "excel/excel_tables.html#grow-and-shrink-tables-1",
    "href": "excel/excel_tables.html#grow-and-shrink-tables-1",
    "title": "Excel tables",
    "section": "Grow and shrink tables",
    "text": "Grow and shrink tables\n\nNow expand your table to include that new data. You can drag the blue handle  or use the Resize Table tool in the ribbon menu  .\nYou can use the same methods to shrink a table"
  },
  {
    "objectID": "excel/excel_tables.html#autofill-and-friends",
    "href": "excel/excel_tables.html#autofill-and-friends",
    "title": "Excel tables",
    "section": "Autofill and friends",
    "text": "Autofill and friends\n\ndrag down to add two more empty rows\nselect your three dates, and drag the green fill handle down into the empty cells \n\nthis should populate the correct values - although you’ll need to check carefully that everything has worked"
  },
  {
    "objectID": "excel/excel_tables.html#filter-and-sort",
    "href": "excel/excel_tables.html#filter-and-sort",
    "title": "Excel tables",
    "section": "Filter and sort",
    "text": "Filter and sort\nEach of your column headers has a dropdown menu  that will allow you to sort and filter your table\n\nsort allows you to order your table by that column\nfilters shows and hides rows of the table\nyou’ll have different filtering options for the different types of columns in your table"
  },
  {
    "objectID": "excel/excel_tables.html#names-and-reference",
    "href": "excel/excel_tables.html#names-and-reference",
    "title": "Excel tables",
    "section": "Names and reference",
    "text": "Names and reference\n\n\nyou can name each column. These work best as single descriptive words - date rather than breakfast date\n\nyou might find it helpful to write longer names in snake case (breakfast_date) or camel case (breakfastDate)\nplease now name your columns\n\n\n\nyou can also name the table as a whole. Again, that’s done from the left-hand side of the Table menu  \n\nplease give your table an appropriate name"
  },
  {
    "objectID": "excel/excel_tables.html#passing-data-demo",
    "href": "excel/excel_tables.html#passing-data-demo",
    "title": "Excel tables",
    "section": "Passing data demo",
    "text": "Passing data demo\n\nYour table can now be saved, developed further, or passed to other data tools\nTables have major advantages on this front:\n\nthey’re portable, so you can move a table around\nyou can use structured referencing - like =data[score] - to select an entire column by name, which helps make Excel more robust\n\nsee the intermediate Excel session on referencing\n\n\nyou can send the data easily and safely to PivotTables, PowerQuery, PowerPivot, and other fancier data tools"
  },
  {
    "objectID": "excel/excel_tables.html#conclusion-use-tables",
    "href": "excel/excel_tables.html#conclusion-use-tables",
    "title": "Excel tables",
    "section": "CONCLUSION: USE TABLES",
    "text": "CONCLUSION: USE TABLES"
  },
  {
    "objectID": "excel/lookups_in_excel.html",
    "href": "excel/lookups_in_excel.html",
    "title": "Lookups in Excel",
    "section": "",
    "text": "This is a session in our intermediate-level Excel skill builder course. This consists of five practical training sessions, designed to be taken together, that are aimed at helping users with some prior Excel experience build and consolidate their skills. The sessions are:"
  },
  {
    "objectID": "excel/lookups_in_excel.html#previous-attendees-have-said",
    "href": "excel/lookups_in_excel.html#previous-attendees-have-said",
    "title": "Lookups in Excel",
    "section": "Previous attendees have said…",
    "text": "Previous attendees have said…\n\n16 previous attendees have left feedback\n100% would recommend this session to a colleague\n100% said that this session was pitched correctly\n\n\n\n\n\n\n\n\n\n\n\nThree random comments from previous attendees\n\n\n\n\nReally useful sessions thanks Brendan\nReally useful, hands on session. It would be great to be able to download a second version of the workbook that included all the correct formulas so we could check our work later without having to pester Brendan.\nInsightful"
  },
  {
    "objectID": "excel/lookups_in_excel.html#session-outline",
    "href": "excel/lookups_in_excel.html#session-outline",
    "title": "Lookups in Excel",
    "section": "Session outline",
    "text": "Session outline\n\nintroduction to lookups\nthree methods for lookups\n\n\nINDEX() + MATCH()\n\nVLOOKUP()\nXLOOKUP()\n\n\npartial matching"
  },
  {
    "objectID": "excel/lookups_in_excel.html#introducing-lookups",
    "href": "excel/lookups_in_excel.html#introducing-lookups",
    "title": "Lookups in Excel",
    "section": "Introducing lookups",
    "text": "Introducing lookups\nWhat does a lookup do? Imagine that you have a table like this:\nA lookup would let us find someone’s age from their name by:\n\ntaking that name from somewhere\nfinding out what row of the table that name is found in\nand then returning the age from that row"
  },
  {
    "objectID": "excel/lookups_in_excel.html#index-and-match",
    "href": "excel/lookups_in_excel.html#index-and-match",
    "title": "Lookups in Excel",
    "section": "\nINDEX() and MATCH()\n",
    "text": "INDEX() and MATCH()\n\n\n\nMATCH() takes a value, and finds what row it occurs in\n\nINDEX() takes a row, and returns a value from it\nolder way of doing lookups\n\nthink timeless classic rather than old banger\n\n\n\nsimple and flexible\ngreat way to understand and practice the logic of lookups\n\nINDEX()\n\n\nINDEX() retrieves data from cells. You supply two arguments:\n\nan array (range) of cells\na row number\n\n\n\nINDEX(A1:A10, 3) gives you the third row of the range A1:A10\ngeneral syntax: INDEX(array, row_num, [column_num])\n\n\narray is the range we want to look in\n\nrow_num and the optional column_num is the number of the row (± column) that you want\n\n\n\n\n\n\n\n\n\nTask\n\n\n\n\nFind the INDEX worksheet of the sample workbook\n\nWe have a one-column table containing names in A2:A11\n\nUse INDEX() to find the value in the third row\n\n\n\n\n\nIndex example\n\nMATCH()\n\n\nMATCH() retrieves the row number of a cell. You supply two arguments:\n\na lookup value\nan array of cells\n\n\nMATCH(lookup_value, lookup_array, [match_type])\n\n\n\n\n\n\n\nWarning\n\n\n\n\nthe optional match_type argument is deathly important:\n\n1 (or omitted) finds the largest value that is less than or equal to the lookup\n\n0 finds the first value that is exactly equal to the lookup\n\n-1 finds the smallest value that is greater than or equal to the lookup\n\n\n\nMATCH()\n\n\n\n\n\n\nTask\n\n\n\n\nGo to the MATCH worksheet\nWe have (the same) one-column table of names in A2:A11\n\nUse MATCH() to find the row containing “Broward” - being careful to set match_type appropriately\n\n\n\n\n\nMatch example\n\n\nINDEX() + MATCH()\n\n\ngiven that match gives us the row number, and index takes a row number and returns a value, we can link them up nicely \n\nfirst search through our data to find a MATCH()ing row\nthen use INDEX() to retrieve some other column from that row\nthe general syntax will be =INDEX(range, MATCH(\"Name\", range, 0))\n\n\n\n\n\n\n\n\nTask\n\n\n\n\nGo to the INDEX + MATCH (1) worksheet\nWe have a two column table, and we want a user to be able to supply a number in E2, and receive the appropriate word in E3\n\nFirst, write an appropriate MATCH() formula to find the row matching the input\nNext, write an INDEX() to take that MATCH() value and return the appropriate word\nFinally, try joining both formulas together in one to give an INDEX() + MATCH()\n\n\n\n\n\n\nIndex and match example\n\n\n\n\n\n\n\nTask\n\n\n\n\nGo to the INDEX + MATCH (2) worksheet. We have several formulas about Eunika. Can you fix them to give the correct result?"
  },
  {
    "objectID": "excel/lookups_in_excel.html#vlookup",
    "href": "excel/lookups_in_excel.html#vlookup",
    "title": "Lookups in Excel",
    "section": "VLOOKUP()",
    "text": "VLOOKUP()\n\nwhile INDEX() and MATCH() is great, it does produce some nasty-looking formulas\n\nVLOOKUP() was introduces as a neater alternative - roughly INDEX() + MATCH() in one\n\nVLOOKUP returns along rows, allowing us to look up a value in one column, and returns a corresponding value from another column\nthat sounds ideal, but beware: VLOOKUP() is much more quirky and unreliable than INDEX() + MATCH()\n\nhere’s the syntax for VLOOKUP():\n\n\nVLOOKUP(lookup_value, table_array, col_index_num, [range_lookup])\n\n\nlookup_value is what we want to look up\n\ntable_array is the table that we’re looking up in\n\ncol_index_num is the number of the column that we want to return from\n\nrange_lookup allows either approximate matching (the default) or exact matching (by specifying FALSE)\n\nThe major source of oddity. Make sure you check the manual before doing anything serious with VLOOKUP()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTask\n\n\n\n\nGo to the VLOOKUP worksheet\nThere are two requests for lookups. Can you populate them with appropriate VLOOKUP() formulas?\n\n\n\n\n\n\n\n\n\nWarning\n\n\n\n\n\nVLOOKUP() generally requires the lookup value to appear in the left-most column of your range\n\nas the second part of the task shows, this requirement can manifest in lots of odd ways"
  },
  {
    "objectID": "excel/lookups_in_excel.html#xlookup",
    "href": "excel/lookups_in_excel.html#xlookup",
    "title": "Lookups in Excel",
    "section": "XLOOKUP()",
    "text": "XLOOKUP()\n\nsemi-new (any versions after Excel 2019)\nsimilar to INDEX() + MATCH(). Major differences:\n\nit spills, so ideal for returning unpredictable quantities of cells\nprovides exact matching by default\n\n\nthe basic syntax is: = XLOOKUP(lookup_value, lookup_array, return_array)\n\n\n\n\n\n\n\n\nTask\n\n\n\n\nGo to the XLOOKUP (1) worksheet\nThere are two requests for lookups. Can you populate them with appropriate XLOOKUP() formulas?\n\n\n\nReturning several cells with XLOOKUP()\n\n\n\n\n\n\n\nTask\n\n\n\n\nGo to the XLOOKUP (2) worksheet\nSet up an XLOOKUP() supplying a range of columns as the return_array value\n\n\n\nFighting with tables\n\nnote that returning several cells into a table often causes errors\nyou may need to work with a range instead if planning to use XLOOKUP() to return an unpredictable amount of data"
  },
  {
    "objectID": "excel/lookups_in_excel.html#partial-text-matching",
    "href": "excel/lookups_in_excel.html#partial-text-matching",
    "title": "Lookups in Excel",
    "section": "Partial text matching",
    "text": "Partial text matching\n\nExcel is not brilliant for partial text matching\nthere are a number of commercial add-ins and VBA-based solutions\n\nthose come with risks\nwe’ll concentrate on base-Excel here\n\n\nthree main options:\n\n\n\nXLOOKUP() with match_mode = 2 + wildcard\n\nVLOOKUP() with range_lookup = FALSE + wildcards\n\nMATCH() with match_type = 0 + wildcards\n\n\nXLOOKUP() with match_mode = 2 + wildcard\n\n\nXLOOKUP() allows partial matching via the “*” wildcard\nadd “*” to the end of the partial string you want to match\nhowever, please be aware that:\n\n\nthis will only reliably match sub-strings at the start of strings\n\n(so “ow*” will match “owl” but not “towel”)\nadding extra wildcards interacted unpredictably with match_mode in testing\n\n\n\n\n=XLOOKUP(\"*substring*\", search col, return col, ,2)\n\nVLOOKUP() with range_lookup = FALSE + wildcards\n\nas with XLOOKUP, adding “*” allows wildcard matching\nbut you can do better with the wildcard sandwich: \"*substring*\"\n\nor, if you’re bringing in a reference \"*\" & cell_ref & \"*\"\n\n\n\nensure you set the (confusingly named) range_lookup argument to FALSE to allow approximate matching\nVLOOKUP(\"*substring*\", table, column, FALSE)\n\nMATCH() with match_type = 0 + wildcards\n\nsame wildcard sandwich strategy, with the flexibility of INDEX() + MATCH()\n\nmy preferred solution, largely because the other options are harder to debug\n=INDEX(array, MATCH(\"*substring*\", array, 0))\n\n\n\n\n\n\n\nTask\n\n\n\n\nGo to the Partial matching worksheet\nTry implementing these three ways of partial matching"
  },
  {
    "objectID": "excel/lookups_in_excel.html#thank-yous",
    "href": "excel/lookups_in_excel.html#thank-yous",
    "title": "Lookups in Excel",
    "section": "Thank yous",
    "text": "Thank yous\nI’m grateful to Jennifer Watt, John Mackintosh, Duncan Sage, David Coigach, Michael Robb, Angela Godfrey, Spela Oberstar, Andrew Christopherson, and other members of the KIND network for their valuable suggestions and corrections to these training materials"
  },
  {
    "objectID": "excel/power_query_a_practical_introduction.html",
    "href": "excel/power_query_a_practical_introduction.html",
    "title": "PowerQuery - a practical introduction",
    "section": "",
    "text": "Session materials\n\n\n\n\n\n\nall materials \nslides  html /  pdf"
  },
  {
    "objectID": "excel/power_query_a_practical_introduction.html#previous-attendees-have-said",
    "href": "excel/power_query_a_practical_introduction.html#previous-attendees-have-said",
    "title": "PowerQuery - a practical introduction",
    "section": "Previous attendees have said…",
    "text": "Previous attendees have said…\n\n11 previous attendees have left feedback\n100% would recommend this session to a colleague\n82% said that this session was pitched correctly\n\n\n\n\n\n\n\n\n\n\n\nThree random comments from previous attendees\n\n\n\n\nVery informative and really enjoyed it.\nGreat intro session to get an understanding of the basics.\nReally easy to follow and understand!"
  },
  {
    "objectID": "excel/power_query_a_practical_introduction.html#welcome",
    "href": "excel/power_query_a_practical_introduction.html#welcome",
    "title": "PowerQuery - a practical introduction",
    "section": "Welcome",
    "text": "Welcome\n\n🌶 this session is a beginner-level introduction to PowerQuery\nyou’ll either Excel desktop (&gt;2007) or Power BI desktop\nyou’ll also need to have basic competency in Excel or Power BI\nthis session is based on our Power BI for Beginners course\nbut PowerQuery isn’t specific to Power BI - it’s brilliant for Excel too"
  },
  {
    "objectID": "excel/power_query_a_practical_introduction.html#session-outline",
    "href": "excel/power_query_a_practical_introduction.html#session-outline",
    "title": "PowerQuery - a practical introduction",
    "section": "Session outline",
    "text": "Session outline\n\nwhat is PowerQuery, and why might you use it?\ngetting data into PowerQuery\nbasic data wrangling\njoins (merges)\npivots"
  },
  {
    "objectID": "excel/power_query_a_practical_introduction.html#what-is-powerquery",
    "href": "excel/power_query_a_practical_introduction.html#what-is-powerquery",
    "title": "PowerQuery - a practical introduction",
    "section": "What is PowerQuery?",
    "text": "What is PowerQuery?\n\nMicrosoft call it a “data transformation and data preparation engine”\n\nit’s been around since 2010, initially in Excel, and then in both Excel and Power BI\nuses code (M Formula language) but has GUI tools for most tasks"
  },
  {
    "objectID": "excel/power_query_a_practical_introduction.html#how-i-think-of-powerquery",
    "href": "excel/power_query_a_practical_introduction.html#how-i-think-of-powerquery",
    "title": "PowerQuery - a practical introduction",
    "section": "How I think of PowerQuery",
    "text": "How I think of PowerQuery\n\nthe right way to load any real data into Excel"
  },
  {
    "objectID": "excel/power_query_a_practical_introduction.html#why-might-you-use-it",
    "href": "excel/power_query_a_practical_introduction.html#why-might-you-use-it",
    "title": "PowerQuery - a practical introduction",
    "section": "Why might you use it?",
    "text": "Why might you use it?\n\npowerful\neasy, to start with at least…\nallows you to standardise data loading from different sources\nallows you to repeat data loading"
  },
  {
    "objectID": "excel/power_query_a_practical_introduction.html#getting-data-into-powerquery",
    "href": "excel/power_query_a_practical_introduction.html#getting-data-into-powerquery",
    "title": "PowerQuery - a practical introduction",
    "section": "Getting data into PowerQuery",
    "text": "Getting data into PowerQuery\n\n\nExcel\nPower BI\n\n\n\n\nOpen Excel and create a new, blank, workbook\n\nData &gt; Get & Transform Data  \n\nPick From Web and supply the following URL - https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-07-25/scurvy.csv\n\nFrom the preview, select Transform data to open PowerQuery\n\n\n\n\nOpen Power BI and start a new report\nSelect Get data &gt; From Web button in the ribbon \n\nSupply the following URL - https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-07-25/scurvy.csv \n\nFrom the preview, select Transform data to open PowerQuery  \n\nIf you’ve already got some data in your report that you’d like to transform, use Tranform data in the ribbon to open PowerQuery:  \n\n\n\n\n\n\nthis is historical data about scurvy testing from the medicaldata r package"
  },
  {
    "objectID": "excel/power_query_a_practical_introduction.html#preview-your-data",
    "href": "excel/power_query_a_practical_introduction.html#preview-your-data",
    "title": "PowerQuery - a practical introduction",
    "section": "Preview your Data",
    "text": "Preview your Data\n (make sure to click Transform data)"
  },
  {
    "objectID": "excel/power_query_a_practical_introduction.html#first-view-of-powerquery",
    "href": "excel/power_query_a_practical_introduction.html#first-view-of-powerquery",
    "title": "PowerQuery - a practical introduction",
    "section": "First view of PowerQuery",
    "text": "First view of PowerQuery\n\n\nFirst view of PowerQuery\n\n\nQueries (= datasets) on the left\nribbon menu at the top\nQuery settings (= the changes you’ll make to your data) on the right\nExcel-ish data preview in the middle"
  },
  {
    "objectID": "excel/power_query_a_practical_introduction.html#basic-data-wrangling",
    "href": "excel/power_query_a_practical_introduction.html#basic-data-wrangling",
    "title": "PowerQuery - a practical introduction",
    "section": "Basic data wrangling",
    "text": "Basic data wrangling\n\nright click the study_id column and select Remove\n\nthe column will disappear\nbut you’ll also gain a step in your Applied Steps field \n\n\n\nyou can edit this step\n\nif you’re code-confident, you can edit the formula to read = Table.RemoveColumns(#\"Changed Type\",{\"study_id\", \"treatment\"}) to also remove the treatment column\nand you can remove the step using the X next to the step name \n\n\n\nyou should also try renaming and reordering your columns in the same way\nonce you’ve had a play, please remove the steps until you’re left with the data you started with (so delete back to “Changed Type”)"
  },
  {
    "objectID": "excel/power_query_a_practical_introduction.html#replacing-values",
    "href": "excel/power_query_a_practical_introduction.html#replacing-values",
    "title": "PowerQuery - a practical introduction",
    "section": "Replacing values",
    "text": "Replacing values\n\nwe can also work with individual values\nour values are a number, then an underscore, then a word\nwe can Split column at the underscore\nwe could also replace the odd underscores in the treatment column"
  },
  {
    "objectID": "excel/power_query_a_practical_introduction.html#reshaping-data",
    "href": "excel/power_query_a_practical_introduction.html#reshaping-data",
    "title": "PowerQuery - a practical introduction",
    "section": "Reshaping data",
    "text": "Reshaping data\n\nwe could go column by column here splitting, but an easier approach would be to re-shape the data\nselect the first three columns, and select Unpivot Other Columns \n\nthen split, change type, and generally tidy up"
  },
  {
    "objectID": "excel/power_query_a_practical_introduction.html#add-columns",
    "href": "excel/power_query_a_practical_introduction.html#add-columns",
    "title": "PowerQuery - a practical introduction",
    "section": "Add columns",
    "text": "Add columns\nOur treatment and dosing columns are annoying. Let’s make a new, joined, column for them:\n\nselect Custom Column\n\nyou can click the gearwheel next to the step if you’d like to go back and tweak"
  },
  {
    "objectID": "excel/power_query_a_practical_introduction.html#close-and-load-close-and-apply-sends-your-data-back-to-excelpower-bi",
    "href": "excel/power_query_a_practical_introduction.html#close-and-load-close-and-apply-sends-your-data-back-to-excelpower-bi",
    "title": "PowerQuery - a practical introduction",
    "section": "Close and load / Close and Apply sends your data back to Excel/Power BI",
    "text": "Close and load / Close and Apply sends your data back to Excel/Power BI"
  },
  {
    "objectID": "excel/power_query_a_practical_introduction.html#getting-more-fancy-a-bigger-dataset",
    "href": "excel/power_query_a_practical_introduction.html#getting-more-fancy-a-bigger-dataset",
    "title": "PowerQuery - a practical introduction",
    "section": "Getting more fancy: a bigger dataset",
    "text": "Getting more fancy: a bigger dataset\n\nplease load the Health and Care Experience survey results from 2023-4 \n\nor alternative local version\n\nplease load both the proper datasets (and ignore the background)"
  },
  {
    "objectID": "excel/power_query_a_practical_introduction.html#a-challenge",
    "href": "excel/power_query_a_practical_introduction.html#a-challenge",
    "title": "PowerQuery - a practical introduction",
    "section": "A challenge",
    "text": "A challenge\nCan you find the number of responses to each question for your local NHS board? You should be able to re-work this data to give something like: \nSome hints\n\nfiltering works like Excel, but is destructive\nunpivoting, doing something to all the rows, then re-pivoting is a great way to work across lots of columns\nyou can join structurally similar datasets using Append Queries as New\n\nyou can deduplicate entire datasets by selecting all the columns and using Remove Rows &gt; Remove Duplicates"
  },
  {
    "objectID": "excel/references_and_names_in_excel.html",
    "href": "excel/references_and_names_in_excel.html",
    "title": "References and names in Excel",
    "section": "",
    "text": "This session is part of our Excel for beginners course. That’s a series of six linked sessions, delivered on Teams, that give an introduction to Excel for people working in health and social care. The sessions are:\nTogether, they aim to help you develop an appropriate set of Excel skills to help your work. This session covers references and names in Excel:"
  },
  {
    "objectID": "excel/references_and_names_in_excel.html#previous-attendees-have-said",
    "href": "excel/references_and_names_in_excel.html#previous-attendees-have-said",
    "title": "References and names in Excel",
    "section": "Previous attendees have said…",
    "text": "Previous attendees have said…\n\n38 previous attendees have left feedback\n97% would recommend this session to a colleague\n92% said that this session was pitched correctly\n\n\n\n\n\n\n\n\n\n\n\nThree random comments from previous attendees\n\n\n\n\nReally well explained from first principles - accessible for completely new people but also extremely helpful if you have some experience to know how things work and pick up some good tips :)\nEnjoyed it, really useful thanks\nBrilliant, responsive to the questions and covered what was needed"
  },
  {
    "objectID": "excel/references_and_names_in_excel.html#some-sample-data",
    "href": "excel/references_and_names_in_excel.html#some-sample-data",
    "title": "References and names in Excel",
    "section": "Some sample data",
    "text": "Some sample data\n\n\nuser\npre-training score\npost-training score\nsession\n\n\n\nSteve\n4\n6\nExcel 1\n\n\nEmma\n7\n6\nExcel 2\n\n\nBhavin\n3\n9\nExcel 1"
  },
  {
    "objectID": "excel/references_and_names_in_excel.html#references",
    "href": "excel/references_and_names_in_excel.html#references",
    "title": "References and names in Excel",
    "section": "References",
    "text": "References\n\nExcel sheets are made up of cells\ncells are arranged in rows and columns\n\ncolumns have letters - like C\n\nrows have numbers - like 3\n\n\n\nreferences are the ‘address’ of a particular cell - like C3\n\nyou can ‘point’ at a cell by using its reference"
  },
  {
    "objectID": "excel/references_and_names_in_excel.html#finding-a-reference",
    "href": "excel/references_and_names_in_excel.html#finding-a-reference",
    "title": "References and names in Excel",
    "section": "Finding a reference",
    "text": "Finding a reference\n\nfrom the name box:  \n\nor work out from the column and row labels\n\nalways column letter, then row number\n\nC3, not 3C"
  },
  {
    "objectID": "excel/references_and_names_in_excel.html#using-a-reference",
    "href": "excel/references_and_names_in_excel.html#using-a-reference",
    "title": "References and names in Excel",
    "section": "Using a reference",
    "text": "Using a reference\n\nwe can write a formula that copies the value from C3 into another cell\nformulas start with an =\n\nso we’ll use = C3 to get Emma’s visit date (or whatever value you referenced)"
  },
  {
    "objectID": "excel/references_and_names_in_excel.html#references-in-formulas",
    "href": "excel/references_and_names_in_excel.html#references-in-formulas",
    "title": "References and names in Excel",
    "section": "References in formulas",
    "text": "References in formulas\n\nwe use references to allow us to pass data around our spreadsheet\nan example: how much did Emma’s score improve during the session?\ncalculate this with = C3 - C2"
  },
  {
    "objectID": "excel/references_and_names_in_excel.html#references-move",
    "href": "excel/references_and_names_in_excel.html#references-move",
    "title": "References and names in Excel",
    "section": "References move",
    "text": "References move\n\nby default, Excel references are relative\n\nwhen you move a reference, the cell that reference points to also moves  \n\nit is possible to ‘fix’ references\n\nwe call these absolute references\nthe $ fixes a reference, so $C$3 is absolute"
  },
  {
    "objectID": "excel/references_and_names_in_excel.html#you-can-name-things",
    "href": "excel/references_and_names_in_excel.html#you-can-name-things",
    "title": "References and names in Excel",
    "section": "You can name things",
    "text": "You can name things\n\nalmost everything in Excel can be named\nthe easy way to start with that is using the name box\n\nnames can replace references in formulas\nthis is valuable when things get more complicated"
  },
  {
    "objectID": "excel/references_and_names_in_excel.html#you-can-use-and-manage-names",
    "href": "excel/references_and_names_in_excel.html#you-can-use-and-manage-names",
    "title": "References and names in Excel",
    "section": "You can use and manage names",
    "text": "You can use and manage names\n\nvia the Name manager (Ctrl + F3)\n\nGo to (F5)"
  },
  {
    "objectID": "excel/references_and_names_in_excel.html#using-a-reference-1",
    "href": "excel/references_and_names_in_excel.html#using-a-reference-1",
    "title": "References and names in Excel",
    "section": "Using a reference",
    "text": "Using a reference\n\nwe can write a formula that copies the value from C3 into another cell\n\n\n\n\n\n\n\nTip\n\n\n\n\ngo to an empty cell, type = C3, and press Enter/⏎\n\nthat cell should now have Emma’s post-training score (or whatever value you referenced)"
  },
  {
    "objectID": "excel/references_and_names_in_excel.html#references-in-formulas-1",
    "href": "excel/references_and_names_in_excel.html#references-in-formulas-1",
    "title": "References and names in Excel",
    "section": "References in formulas",
    "text": "References in formulas\n\nhow much did people improve during the training session?\n\n\n\n\n\n\n\nTask\n\n\n\n\nadd a new column called improvement\n\nin the first row of that column, add the formula: = C2 - B2\n\nthat calculates the post-training score minus the pre-training score \n\n\n\nthen copy/fill down"
  },
  {
    "objectID": "excel/references_and_names_in_excel.html#references-move-1",
    "href": "excel/references_and_names_in_excel.html#references-move-1",
    "title": "References and names in Excel",
    "section": "References move",
    "text": "References move\n\n\n\n\n\n\nTask\n\n\n\n\ntry copying your new block of improvement cells around your sheet\ntheir value should change (almost certainly to a #VALUE error)\nnow try clicking those cells to see where the updated reference points to"
  },
  {
    "objectID": "excel/references_and_names_in_excel.html#absolute-references",
    "href": "excel/references_and_names_in_excel.html#absolute-references",
    "title": "References and names in Excel",
    "section": "Absolute references",
    "text": "Absolute references\n\n\n\n\n\n\nTask\n\n\n\n\ndelete your copied blocks of cells from the last step\nnow update your references by adding $ before the letter and number\n\nso C2 becomes $C$2\n\nyou might prefer to press F4 instead\n\n\nnow copy and paste those blocks of cells again. What’s different this time?\nplease delete those new blocks of cells when you’re finished"
  },
  {
    "objectID": "excel/references_and_names_in_excel.html#you-can-name-things-1",
    "href": "excel/references_and_names_in_excel.html#you-can-name-things-1",
    "title": "References and names in Excel",
    "section": "You can name things",
    "text": "You can name things\n\n\n\n\n\n\nTask\n\n\n\n\nlet’s average the post-training score column\nin a new cell (C5 perhaps?) add this formula:\n\n=AVERAGE(C2, C3, C4)\n\n\nnow name that new cell av_score and try using it in a formula\n\n\n= INT(av_length) would round that to the nearest whole number"
  },
  {
    "objectID": "excel/references_and_names_in_excel.html#you-can-manage-those-names",
    "href": "excel/references_and_names_in_excel.html#you-can-manage-those-names",
    "title": "References and names in Excel",
    "section": "You can manage those names",
    "text": "You can manage those names\n\n\n\n\n\n\nTask\n\n\n\n\nfind the Name manager (or press Ctrl + F3)  \n\ntry renaming your av_score cell\ntry making a new named range from your three pre-training score cells\ntry using the F5 Go to interface to navigate between your named cells"
  },
  {
    "objectID": "excel/scope_of_the_possible_with_excel.html",
    "href": "excel/scope_of_the_possible_with_excel.html",
    "title": "Scope of the possible with Excel",
    "section": "",
    "text": "No feedback found for this session"
  },
  {
    "objectID": "excel/scope_of_the_possible_with_excel.html#welcome",
    "href": "excel/scope_of_the_possible_with_excel.html#welcome",
    "title": "Scope of the possible with Excel",
    "section": "Welcome",
    "text": "Welcome\n\nthis session is a non-technical overview designed for service leads"
  },
  {
    "objectID": "excel/scope_of_the_possible_with_excel.html#session-outline",
    "href": "excel/scope_of_the_possible_with_excel.html#session-outline",
    "title": "Scope of the possible with Excel",
    "section": "Session outline",
    "text": "Session outline\n\nWhy Excel, and why this session?\nStrengths and weaknesses\nGreat Excel projects, dire Excel projects\nAlternatives\nSkill development"
  },
  {
    "objectID": "excel/scope_of_the_possible_with_excel.html#why-excel",
    "href": "excel/scope_of_the_possible_with_excel.html#why-excel",
    "title": "Scope of the possible with Excel",
    "section": "Why Excel?",
    "text": "Why Excel?\n\n40+ years old\ninitially developed as a finance tool\nuptake from financial areas outwards into other services\nlikely circular reasoning: “we use Excel” because “we use Excel”…"
  },
  {
    "objectID": "excel/scope_of_the_possible_with_excel.html#why-this-session",
    "href": "excel/scope_of_the_possible_with_excel.html#why-this-session",
    "title": "Scope of the possible with Excel",
    "section": "Why this session?",
    "text": "Why this session?\n\nnow includes several different tools for working with data\nmost of us only ever scratch the surface\nbut it’s really important to know roughly what’s possible - and that’s hard!"
  },
  {
    "objectID": "excel/scope_of_the_possible_with_excel.html#excel-demo",
    "href": "excel/scope_of_the_possible_with_excel.html#excel-demo",
    "title": "Scope of the possible with Excel",
    "section": "Excel demo",
    "text": "Excel demo\n\nusing open Annual inpatient/daycase data"
  },
  {
    "objectID": "excel/scope_of_the_possible_with_excel.html#strengths-and-weaknesses",
    "href": "excel/scope_of_the_possible_with_excel.html#strengths-and-weaknesses",
    "title": "Scope of the possible with Excel",
    "section": "Strengths and weaknesses",
    "text": "Strengths and weaknesses\n\ngreat for one-off data projects, but Excel sheets often have a long life…\neasy to start projects, but more involved analysis is messy\nshare-able and accessible - but many different versions of Excel, add-ins etc, mean that there is grit in the system\nyou can do almost anything in Excel, but you probably shouldn’t"
  },
  {
    "objectID": "excel/scope_of_the_possible_with_excel.html#great-excel-uses",
    "href": "excel/scope_of_the_possible_with_excel.html#great-excel-uses",
    "title": "Scope of the possible with Excel",
    "section": "Great Excel uses",
    "text": "Great Excel uses\n\nsimple, quick, one-off projects\nusing Power Query to manipulate data\nusing Excel to create/load data into Power BI"
  },
  {
    "objectID": "excel/scope_of_the_possible_with_excel.html#terrible-excel-uses",
    "href": "excel/scope_of_the_possible_with_excel.html#terrible-excel-uses",
    "title": "Scope of the possible with Excel",
    "section": "Terrible Excel uses",
    "text": "Terrible Excel uses\n\nreplacing databases (complicated, but Access/SQL)\nanything with free text (probably use R/Nvivo instead)\nanything with many editors (use Forms or Sharepoint Lists instead)\nanything with repetition and extensive manual editing (better Excel design needed)\nvery wide data (probably Excel redesign again)"
  },
  {
    "objectID": "excel/scope_of_the_possible_with_excel.html#a-cautionary-tale",
    "href": "excel/scope_of_the_possible_with_excel.html#a-cautionary-tale",
    "title": "Scope of the possible with Excel",
    "section": "A cautionary tale",
    "text": "A cautionary tale\n\nthere are staff in Scotland’s health and care sector who spend ~100% of their time manually editing Excel files\nthis is almost certainly the result of poor Excel practices\nExcel is a complex product, with several routes to achieving end goals\nand Excel can malfunction to disasterous effect"
  },
  {
    "objectID": "excel/scope_of_the_possible_with_excel.html#five-top-tips",
    "href": "excel/scope_of_the_possible_with_excel.html#five-top-tips",
    "title": "Scope of the possible with Excel",
    "section": "Five top tips",
    "text": "Five top tips\n\nkeep data tidy (one value per cell, one row per thing, one column per measurement)\nkeep things as simple as possible - but not simpler\ndon’t tolerate lots of manual spreadsheet work\ntake care with formatting and accessibility/reuse\nbet that your spreadsheet will last longer, and travel further, than you think"
  },
  {
    "objectID": "excel/scope_of_the_possible_with_excel.html#chat-queries-questions",
    "href": "excel/scope_of_the_possible_with_excel.html#chat-queries-questions",
    "title": "Scope of the possible with Excel",
    "section": "Chat, queries, questions",
    "text": "Chat, queries, questions\n\nTeams channel: tinyurl.com/kindnetwork\n\nweekly email update: tinyurl.com/kindupdate\n\nplease let me know (brendan.clarke2@nhs.scot) what would be most helpful to you and your team"
  },
  {
    "objectID": "excel/why_bother_with_excel.html",
    "href": "excel/why_bother_with_excel.html",
    "title": "Why bother with Excel?",
    "section": "",
    "text": "No feedback found for this session"
  },
  {
    "objectID": "excel/why_bother_with_excel.html#welcome",
    "href": "excel/why_bother_with_excel.html#welcome",
    "title": "Why bother with Excel?",
    "section": "Welcome",
    "text": "Welcome\n\nwelcome to Why bother with Excel?\n\nthis session is 🥬 - a non-technical introduction for pre-beginners\nif you can’t access the chat, you might need to join our Teams channel: tinyurl.com/kindnetwork"
  },
  {
    "objectID": "excel/why_bother_with_excel.html#the-kind-network",
    "href": "excel/why_bother_with_excel.html#the-kind-network",
    "title": "Why bother with Excel?",
    "section": "The KIND network",
    "text": "The KIND network\n\na social learning space for staff working with knowledge, information, and data across health, social care, and housing in Scotland\nwe offer social support, free training, mentoring, community events, …\n\nTeams channel / mailing list"
  },
  {
    "objectID": "excel/why_bother_with_excel.html#session-outline",
    "href": "excel/why_bother_with_excel.html#session-outline",
    "title": "Why bother with Excel?",
    "section": "Session outline",
    "text": "Session outline\n\ntwo minute overview of Excel\nstrengths and weaknesses\nmaking Excel work for you\nnext steps and training"
  },
  {
    "objectID": "excel/why_bother_with_excel.html#a-brief-overview-of-excel",
    "href": "excel/why_bother_with_excel.html#a-brief-overview-of-excel",
    "title": "Why bother with Excel?",
    "section": "A brief overview of Excel",
    "text": "A brief overview of Excel\n\n\none of the oldest, and most widely used, pieces of desktop software\nubiquitous in business, finance, health and social care…\nproprietary, closed-source, paid-for\nmany versions"
  },
  {
    "objectID": "excel/why_bother_with_excel.html#central-idea",
    "href": "excel/why_bother_with_excel.html#central-idea",
    "title": "Why bother with Excel?",
    "section": "Central idea",
    "text": "Central idea\n\n\n\npieces of data are stored in cells\n\none value, one cell\n\n\ncells are arranged into rows and columns\narranging data like this allows us to analyse it\ngood data analysis helps make services better"
  },
  {
    "objectID": "excel/why_bother_with_excel.html#data-should-help",
    "href": "excel/why_bother_with_excel.html#data-should-help",
    "title": "Why bother with Excel?",
    "section": "Data should help…",
    "text": "Data should help…\n\nanswering which/when questions\nseeing effects of changes\ncomparing different areas\nlooking at services over time\n…"
  },
  {
    "objectID": "excel/why_bother_with_excel.html#excel-uses-demo",
    "href": "excel/why_bother_with_excel.html#excel-uses-demo",
    "title": "Why bother with Excel?",
    "section": "Excel uses demo",
    "text": "Excel uses demo\n\nre-arranging data with filters and sorting\nformulas\nlookups\nsummarising"
  },
  {
    "objectID": "excel/why_bother_with_excel.html#five-top-tips",
    "href": "excel/why_bother_with_excel.html#five-top-tips",
    "title": "Why bother with Excel?",
    "section": "Five top tips",
    "text": "Five top tips\n\nkeep data tidy (one value per cell, one row per thing, one column per measurement)\nkeep things as simple as possible - but not simpler\ndon’t tolerate lots of manual spreadsheet work\ntake care with formatting and accessibility/reuse\nbet that your spreadsheet will last longer, and travel further, than you think"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "KIND training",
    "section": "",
    "text": "This is a set of training materials supporting the KIND network’s series of one-off training sessions."
  },
  {
    "objectID": "index.html#how-to-use-these-materials",
    "href": "index.html#how-to-use-these-materials",
    "title": "KIND training",
    "section": "How to use these materials",
    "text": "How to use these materials\n\nthese pages contain the materials for the range of one-off training sessions provided by NHS Education for Scotland’s KIND learning network\nall our sessions are designed to be delivered live on Teams\nall these materials are creative-commons licensed, so please feel free to reuse within those conditions\nthese sessions are periodically re-run, so please get in touch if you’d find it helpful to have one or more sessions re-offered"
  },
  {
    "objectID": "index.html#thanks",
    "href": "index.html#thanks",
    "title": "KIND training",
    "section": "Thanks",
    "text": "Thanks\nThese materials owe a huge debt to the many members of the KIND community who have contributed. More specifically, these pages are based on Melissa Van Bussell’s video describing, with absolute clarity, how to deploy Quarto websites to GitHub pages."
  },
  {
    "objectID": "r_training/data_masking.html",
    "href": "r_training/data_masking.html",
    "title": "Data masking in R",
    "section": "",
    "text": "Session materials\n\n\n\n\n\nData masking cheatsheet\nlibrary(NHSRdatasets)\nlibrary(dplyr)\nlibrary(purrr)\nlibrary(ggplot2)"
  },
  {
    "objectID": "r_training/data_masking.html#introduction",
    "href": "r_training/data_masking.html#introduction",
    "title": "Data masking in R",
    "section": "Introduction",
    "text": "Introduction\nMore so than in other programming languages, R functions bias towards helping the user do common tasks easily. One excellent example is the way that tidyverse functions (like dplyr) make assumptions about what users mean when they refer to variables. As an example:\n\nstranded_data |&gt; \n  select(age) \n\n# A tibble: 768 × 1\n     age\n   &lt;int&gt;\n 1    50\n 2    31\n 3    32\n 4    69\n 5    33\n 6    75\n 7    26\n 8    64\n 9    53\n10    63\n# ℹ 758 more rows\n\n\nWhen we specify the age column in this select function, we don’t need to tell R that we specifically mean the age column in the stranded_data tibble. That’s very helpful, because it saves us having to specify that we want to refer to a specific column in a specific tibble each time we write a line of dplyr. Even if we create another tibble that also has an age column…\n\nnew_stranded_data &lt;- stranded_data |&gt;\n  select(stranded.label, age)\n\n… we can still just refer to the age column of the original stranded_data without any risk of confusion. This simplification - which we’ll call data masking - is a great advantage of using the pipe, and most of the time data masking just works without giving rise to any problems at all. For example, we can write a vector of column names, and then pass it to select(), and R will figure out that we want to use those names as column names without any extra effort on our part:\n\nmy_cols &lt;- c(\"age\", \"care.home.referral\", \"medicallysafe\")\n\nstranded_data |&gt;\n  select(any_of(my_cols))\n\n# A tibble: 768 × 3\n     age care.home.referral medicallysafe\n   &lt;int&gt;              &lt;int&gt;         &lt;int&gt;\n 1    50                  0             0\n 2    31                  1             0\n 3    32                  0             1\n 4    69                  1             1\n 5    33                  0             0\n 6    75                  1             1\n 7    26                  1             0\n 8    64                  0             1\n 9    53                  0             1\n10    63                  1             0\n# ℹ 758 more rows\n\n\nThat means that cases where data masking goes wrong can be enormously frustrating, because most of the time we don’t have to think about what are code is really doing very often at all. Here’s an example of such a problem in a function that picks a specified column from stranded_data and displays it:\n\ncolumn_displayer &lt;- function(col_name) {\n  stranded_data |&gt;\n  select(any_of(col_name)) \n}\n\nIf we try to use this column_displayer() function in the normal way, we’ll receive an error:\n\ntry(column_displayer(age))\n\nError in select(stranded_data, any_of(col_name)) : \n  ℹ In argument: `any_of(col_name)`.\nCaused by error:\n! object 'age' not found\n\n\nOkay, so we can dodge this error in this case by quoting the column name when we supply it as an argument:\n\ncolumn_displayer(\"age\")\n\n# A tibble: 768 × 1\n     age\n   &lt;int&gt;\n 1    50\n 2    31\n 3    32\n 4    69\n 5    33\n 6    75\n 7    26\n 8    64\n 9    53\n10    63\n# ℹ 758 more rows\n\n\nBut this non-standard “kludge” leads to trouble when we want to, for instance, use column_displayer() inside another function. A stronger approach is to adjust our function code in the first place, so that we don’t have to call our function in a non-standard way (why write age in some functions, but “age” in others to refer to the same thing).\nIn this section, we’ll give a bit of helpful theoretical background about data masking. We’ll then go on to look at four ways of resolving some of the difficulties that data masking can cause."
  },
  {
    "objectID": "r_training/data_masking.html#background",
    "href": "r_training/data_masking.html#background",
    "title": "Data masking in R",
    "section": "Background",
    "text": "Background\nThe rlang page on data-masking is very helpful here in setting out a key distinction between kinds of variables that we’ve previously been using synonymously:\n\nenv-variables (things you create with assignment)\ndata-variables (e.g. imported data in a tibble)\n\nFor beginners, this distinction is not that important, particularly because tidyverse functions do lots of helpful blurring between these different types of variable. Note that many base R functions do often require the user to bear this distinction in mind. For instance, in base R you would specify a data variable differently from an environment variable:\n\nmtcars$cyl      # a data variable\ncyl &lt;- c(4,6,8) # an environment variable\n\nWhereas in tidyverse, you can:\n\nmtcars |&gt;\n  select(cyl) # specifying a data variable like an environment variable inside select\n\nMost of the time, data masking doesn’t cause any problems. However, when you start wanting to include tidyverse functions inside other functions, that blurring raises a problem. We won’t give much of an explanation as to the reasons for this, although do read this introduction to the topic and this more detailed account if you are interested in the technical aspects. Here, we’ll concentrate on four strategies for resolving these kind of data masking problems. These strategies are:\n\n\n# A tibble: 4 × 2\n  Problem                              Solution                                 \n  &lt;chr&gt;                                &lt;chr&gt;                                    \n1 data-variable in a function argument **embracing** with `{var}`             \n2 env-variable in a vector             `.data[[var]]` and `.env[[var]]` **prono…\n3 variables in output                  **injection** with **`:=`**              \n4 complex cases                        **quasiquotation** with the injection op…"
  },
  {
    "objectID": "r_training/data_masking.html#embracing",
    "href": "r_training/data_masking.html#embracing",
    "title": "Data masking in R",
    "section": "Embracing",
    "text": "Embracing\nSlightly confusingly, this practice is also referred to [as tunneling data] variables(https://www.tidyverse.org/blog/2020/02/glue-strings-and-tidy-eval/)\nIf you want to use a data variable in the argument of a function, you need to {embrace} the argument. Here’s some code to produce a rounded mean of a column in ae_attendances in cases where breaches are over 100:\n\nae_attendances |&gt;\n  filter(breaches &gt; 100) |&gt;\n  pull(attendances) |&gt;\n  mean() |&gt;\n  round(2)\n\n[1] 9314.45\n\n\nWe can generalise this to a function, which won’t work properly:\n\nae_means &lt;- function(colname) {\n  ae_attendances |&gt;\n    filter(breaches &gt; 100) |&gt;\n    pull(colname) |&gt;\n    mean() |&gt;\n    round(2)\n}\n\ntry(ae_means(breaches))\n\nError in pull(filter(ae_attendances, breaches &gt; 100), colname) : \nCaused by error:\n! object 'breaches' not found\n\n\nHowever, if we embrace the argument in the pull() call:\n\nae_means &lt;- function(colname) {\n  ae_attendances |&gt;\n    filter(breaches &gt; 100) |&gt;\n    pull({{colname}}) |&gt;\n    mean() |&gt;\n    round(2)\n}\n\nWe can use that new function in a standard way:\n\nae_means(breaches)\n\n[1] 1501.65\n\nae_means(admissions)\n\n[1] 2427.32\n\n\nAnd that’s worthwhile, because (unlike the non-standard quoted version earlier) we can then use that functions e.g. with purrr:\n\norgs &lt;- ae_attendances |&gt; \n        select(where(is.numeric)) |&gt; \n        names()\n\npurrr::map(orgs, ae_means)\n\n[[1]]\n[1] 9314.45\n\n[[2]]\n[1] 1501.65\n\n[[3]]\n[1] 2427.32"
  },
  {
    "objectID": "r_training/data_masking.html#pronouns",
    "href": "r_training/data_masking.html#pronouns",
    "title": "Data masking in R",
    "section": "Pronouns",
    "text": "Pronouns\nIf you want to use an variable that comes from a character vector, then use pronouns. Pronouns allow you to specify how a variable should be interpreted. If we create an atomic vector:\n\nvariable &lt;- c(\"type\")\n\nWe might then try to use this variable inside count(), but there are horrors there:\n\ntry(ae_attendances |&gt;\n  count(variable))\n\nError in count(ae_attendances, variable) : \n  Must group by variables found in `.data`.\n✖ Column `variable` is not found.\n\n\nIf we now add the .data[[]] pronoun:\n\nae_attendances |&gt;\n  count(.data[[variable]]) \n\n# A tibble: 3 × 2\n  type      n\n  &lt;fct&gt; &lt;int&gt;\n1 1      4932\n2 2      1135\n3 other  6698\n\n\nThe .env[[]] pronoun works in a similar way. Imagine that we happen to have an env-variable that shares the name of one of our data-variables:\n\nattendances &lt;- 800\n\nIf we try to use it to filter our data, we’ll run into a problem:\n\nae_attendances |&gt;\n  filter(breaches &gt;= attendances) \n\n# A tibble: 0 × 6\n# ℹ 6 variables: period &lt;date&gt;, org_code &lt;fct&gt;, type &lt;fct&gt;, attendances &lt;dbl&gt;,\n#   breaches &lt;dbl&gt;, admissions &lt;dbl&gt;\n\n\n(this is based on an actual problem I manufactured for myself while writing the functions training)\nThis gives an unexpected result, because there are definitely cases where we have more than 800 breaches. In fact we have something like 3598 cases with more than 800 breaches. And what’s going on here is that there’s an ambiguity - which attendances do we mean? This is where pronouns come in, by allowing us to be precise about where the variable is coming from:\n\nae_attendances |&gt;\n  filter(.data[[\"breaches\"]] &gt;= .env[[\"attendances\"]]) |&gt; \n  arrange(breaches) \n\n# A tibble: 3,598 × 6\n   period     org_code type  attendances breaches admissions\n   &lt;date&gt;     &lt;fct&gt;    &lt;fct&gt;       &lt;dbl&gt;    &lt;dbl&gt;      &lt;dbl&gt;\n 1 2016-04-01 RLT      1            5691      800       1023\n 2 2017-10-01 RYR      1           11741      800       3395\n 3 2018-01-01 RC1      1            6162      802       2121\n 4 2018-01-01 RR7      1            7269      802       1810\n 5 2019-02-01 RQX      1            9955      802       1493\n 6 2017-07-01 RWW      1            7094      803       2620\n 7 2019-03-01 RBZ      1            3925      803       1104\n 8 2016-10-01 RJN      1            4234      805        978\n 9 2018-08-01 RNQ      1            7495      805       2596\n10 2016-10-01 RGR      1            5814      806       2017\n# ℹ 3,588 more rows\n\n\n(you can get away, in this case, without the .data[[]], but included here as an extra example)"
  },
  {
    "objectID": "r_training/data_masking.html#injection",
    "href": "r_training/data_masking.html#injection",
    "title": "Data masking in R",
    "section": "Injection",
    "text": "Injection\n:= lets you inject variables into your output. For example, to ensure that the name of a new summary column matches a supplied column name in a function, we can inject the variable into the newly-created column name:\n\ncol_means &lt;- function(column, cutoff) {\n\nae_attendances |&gt;\n  filter({{column}} &gt; {{cutoff}}) |&gt;\n  group_by(type) |&gt;\n  summarise(\"mean_{column}\" := round(mean(.data[[column]]), 1)) \n}\n\nThe column name is created using glue() syntax. glue() is a neat replacement for base-R tools like paste0():\n\ncolumn &lt;- c(\"breaches\")\ncutoff &lt;- 400\n\ncat(glue::glue(\"This is how we'd include the column ({column}), and the cutoff ({cutoff}) in Quarto/Rmarkdown using `glue`\")) # easier to read\n\nThis is how we'd include the column (breaches), and the cutoff (400) in Quarto/Rmarkdown using `glue`\n\n\nThe column name is then injected using the := operator. When we call our col_means() function, the supplied column name is injected into the new summary column:\n\ncol_means(\"attendances\", 400)\n\n# A tibble: 3 × 2\n  type  mean_attendances\n  &lt;fct&gt;            &lt;dbl&gt;\n1 1                9391.\n2 2                1549.\n3 other            3575.\n\n\nSimilar injections can be applied across a range of dplyr functions. We’ll demonstrate these below using a vector containing the new column name, but injection is most useful when included as part of a function that you might want to apply across several different aspects of your data:\n\nnew_column_name &lt;- c(\"Steve\")\n\nae_attendances |&gt; \n  mutate(\"{new_column_name}\" := round(attendances ^ 0.5, 2) )\n\n# A tibble: 12,765 × 7\n   period     org_code type  attendances breaches admissions Steve\n   &lt;date&gt;     &lt;fct&gt;    &lt;fct&gt;       &lt;dbl&gt;    &lt;dbl&gt;      &lt;dbl&gt; &lt;dbl&gt;\n 1 2017-03-01 RF4      1           21289     2879       5060 146. \n 2 2017-03-01 RF4      2             813       22          0  28.5\n 3 2017-03-01 RF4      other        2850        6          0  53.4\n 4 2017-03-01 R1H      1           30210     5902       6943 174. \n 5 2017-03-01 R1H      2             807       11          0  28.4\n 6 2017-03-01 R1H      other       11352      136          0 107. \n 7 2017-03-01 AD913    other        4381        2          0  66.2\n 8 2017-03-01 RYX      other       19562      258          0 140. \n 9 2017-03-01 RQM      1           17414     2030       3597 132. \n10 2017-03-01 RQM      other        7817       86          0  88.4\n# ℹ 12,755 more rows\n\nae_attendances |&gt; \n  rename(\"{new_column_name}\" := attendances) \n\n# A tibble: 12,765 × 6\n   period     org_code type  Steve breaches admissions\n   &lt;date&gt;     &lt;fct&gt;    &lt;fct&gt; &lt;dbl&gt;    &lt;dbl&gt;      &lt;dbl&gt;\n 1 2017-03-01 RF4      1     21289     2879       5060\n 2 2017-03-01 RF4      2       813       22          0\n 3 2017-03-01 RF4      other  2850        6          0\n 4 2017-03-01 R1H      1     30210     5902       6943\n 5 2017-03-01 R1H      2       807       11          0\n 6 2017-03-01 R1H      other 11352      136          0\n 7 2017-03-01 AD913    other  4381        2          0\n 8 2017-03-01 RYX      other 19562      258          0\n 9 2017-03-01 RQM      1     17414     2030       3597\n10 2017-03-01 RQM      other  7817       86          0\n# ℹ 12,755 more rows\n\nae_attendances |&gt; \n  group_by(org_code) |&gt;\n  summarise(\"{new_column_name}\" := n()) |&gt;\n  arrange(.data[[new_column_name]]) |&gt;\n  slice(1:10) |&gt;\n  ggplot() +\n  geom_col(aes(x=org_code, y=.data[[new_column_name]])) +\n  ggtitle(glue::glue(\"{new_column_name} by org_code\"))"
  },
  {
    "objectID": "r_training/data_masking.html#quasiquotation",
    "href": "r_training/data_masking.html#quasiquotation",
    "title": "Data masking in R",
    "section": "Quasiquotation",
    "text": "Quasiquotation\nInformally, the := operator that we explored in the previous subsection functions behaved as if it were adding quotes around the variable that was passed to it. That meant that we could pass a quoted variable to a function, and yet return the result as expected:\n\nquoted_variable &lt;- \"Steve\"\n\nae_attendances |&gt; \n  rename(\"{quoted_variable}\" := attendances) \n\n# A tibble: 12,765 × 6\n   period     org_code type  Steve breaches admissions\n   &lt;date&gt;     &lt;fct&gt;    &lt;fct&gt; &lt;dbl&gt;    &lt;dbl&gt;      &lt;dbl&gt;\n 1 2017-03-01 RF4      1     21289     2879       5060\n 2 2017-03-01 RF4      2       813       22          0\n 3 2017-03-01 RF4      other  2850        6          0\n 4 2017-03-01 R1H      1     30210     5902       6943\n 5 2017-03-01 R1H      2       807       11          0\n 6 2017-03-01 R1H      other 11352      136          0\n 7 2017-03-01 AD913    other  4381        2          0\n 8 2017-03-01 RYX      other 19562      258          0\n 9 2017-03-01 RQM      1     17414     2030       3597\n10 2017-03-01 RQM      other  7817       86          0\n# ℹ 12,755 more rows\n\n\nWhat if we also need to use this variable in an unquoted way? For example, say we now want to use select() to pick out our Steve column?\nIn a function where an argument is supplied quoted, you can unquote it with !!:\n\nae_attendances |&gt; \n  rename(\"{quoted_variable}\" := attendances) |&gt;\n  select(!!quoted_variable) \n\n# A tibble: 12,765 × 1\n   Steve\n   &lt;dbl&gt;\n 1 21289\n 2   813\n 3  2850\n 4 30210\n 5   807\n 6 11352\n 7  4381\n 8 19562\n 9 17414\n10  7817\n# ℹ 12,755 more rows\n\n\nThat gives us a useful and clear way of thinking about quasiquotation. To borrow the description from the manual page:\n\nQuasiquotation is the combination of quoting an expression while allowing immediate evaluation (unquoting) of part of that expression. (rlang quasiquotation manual page)\n\nAnd the strength of using quasiquotation is that it grants lots of scope for handling variables in comparatively complicated function. For example, if we want to create a function to take a supplied tibble and column name, and generate a bit of Rmarkdown with a header and summary of that column, quasiquotation (and injection) allow us to wrangle our variables so that they are compatible with the tidyverse functions that we’d like to use:\n\ndistinct_entries &lt;- function(df, col_name){\n  \n  cat(glue::glue(\"#### Results for {col_name}:  \\n  \\n\")) # using glue syntax\n  \n  df |&gt; \n    select(!!sym(col_name)) |&gt; # using quasiquotation to select the supplied column\n    rename(\"distinct_{col_name}\" := col_name) |&gt; # using injection to rename the column\n    distinct() \n}\n\ndistinct_entries(ae_attendances, \"org_code\")\n\n#### Results for org_code:  \n  \n\n\n# A tibble: 274 × 1\n   distinct_org_code\n   &lt;fct&gt;            \n 1 RF4              \n 2 R1H              \n 3 AD913            \n 4 RYX              \n 5 RQM              \n 6 RJ6              \n 7 Y02696           \n 8 NX122            \n 9 RVR              \n10 RJ1              \n# ℹ 264 more rows"
  },
  {
    "objectID": "r_training/debugging_r.html",
    "href": "r_training/debugging_r.html",
    "title": "Debugging R",
    "section": "",
    "text": "Session materials\n\n\n\n\n\nThere’s also a practical exercise associated with this training session. It’s a compendium of different, common, R errors for you to troubleshoot. It’s not at all true-to-life, but is instead a ghastly scope-of-the-possible with something over forty distinct problems to fix.\n\nvery broken R script \nfixed R script with comments\nNo feedback found for this session"
  },
  {
    "objectID": "r_training/debugging_r.html#debugging-r",
    "href": "r_training/debugging_r.html#debugging-r",
    "title": "Debugging R",
    "section": "Debugging R",
    "text": "Debugging R\n\n\nMy sequence of R errors while writing this training session. These pages are published via a GitHub action which can be a bit complex to troubleshoot. I’m definitely still a beginner at that\n\n\nR code often misbehaves\n\nthat’s true of code in general - it’s not specific to R\n\n\nlearning to manage errors and problems effectively is a long-term learning issue\n\nmost programmers, no matter their level of expertise, spent much of their time fixing problems\n\n\nthis session is designed to give you a basic toolkit of strategies for dealing with broken code"
  },
  {
    "objectID": "r_training/debugging_r.html#session-outline",
    "href": "r_training/debugging_r.html#session-outline",
    "title": "Debugging R",
    "section": "Session outline",
    "text": "Session outline\n\nAvoiding errors\nTypes of broken code\nPin-pointing problems\nIsolating errors\nFinding help\nFancier stuff\n\n\n\n\n\n\n\nNote\n\n\n\n\nmost of the troubleshooting advice is fairly general, and should apply to R no matter how you’re running it\nhowever, there are a few Rstudio / Posit-specific tips in the section on non-running code"
  },
  {
    "objectID": "r_training/debugging_r.html#avoiding-errors",
    "href": "r_training/debugging_r.html#avoiding-errors",
    "title": "Debugging R",
    "section": "Avoiding errors",
    "text": "Avoiding errors\nThe best kind of troubleshooting is no troubleshooting. You can avoid errors by:\n\nplanning carefully before writing proper code - I write the script in comments first, then translate into code. This has the useful side-effect of annotating the code for no extra effort\nworking in a logical sequence from start to finish\nkeeping code simple and legible. That means short scripts with source(), and using functions and functional programming to avoid repetitious code\navoiding creating loads of variables (do a lot of things directly if you don’t need the data for later), and careful variable naming\nrefactoring messy code at the time to keep it clean\nkeeping code formatted nicely\n\nI see a lot of broken code, and the commonest cause by far is excessive script length and complexity. Learning to write functions is the single greatest thing you can do to make your code simpler and thus avoid bugs."
  },
  {
    "objectID": "r_training/debugging_r.html#how-is-your-code-broken",
    "href": "r_training/debugging_r.html#how-is-your-code-broken",
    "title": "Debugging R",
    "section": "How is your code broken?",
    "text": "How is your code broken?\nMy code won’t run at all\nThis is the commonest, hard-to-solve error that most of us encounter. It usually means that R is having some unusual difficulty in recognizing the R code you’re written as being R code. It’s hard to solve because you don’t have a nice informative error message (or anything else) to look at. Things to check at this point are:\n\n\n\n\n\n\nA list of generic R troubleshooting strategies\n\n\n\n\nmake sure the last line of the console has a &gt; rather than a +. If you see +, R is waiting for you to do something. Press Esc a couple of times, then try your code again\ntry running some new code in the console (2 + 2 if more than enough)\nrestart R (Ctrl + Shift + F10)\nterminate R (Session menu)\nclose and reopen Rstudio (or hard-refresh Ctrl+F5 the page for Posit)\nmake sure the code you’re trying to run is saved as an .R file\nif you’re on the desktop, make sure you have R installed on your machine\n\ntry opening a different project and seeing if that code will run\n\n\n\nI’m getting an error message\nMost R error messages tell you what’s wrong by providing an error message in the console. In fact, many R functions will also tell you what’s gone right there too. The term of art here is that R code is generally surly - it complains a lot, even when things are going right. Here, we’re going to ignore those informative messages, and concentrate on proper errors that prevent your code from running properly.\nMy output is wonky\nThe opposite problem: your code seems to run perfectly, but you don’t get the output you’re expecting. Given that you don’t have an error message to work from, you’ll need to try and work backwards from the output you’re expecting. But a few examples of output that’s gone wrong:\n\nnumeric values are bigger/smaller than expected\ntext is incorrect, poorly-formatted, squishedtogether, or IN THE WRONG CASE\ngraphs miss values or mis-represent values\nthe possibilities are endless\n\nIn general, finding and fixing output problems is a manual business. You should expect to have output errors in new code, and it’s important to allow yourself time and space to both check for errors, and to resolve them."
  },
  {
    "objectID": "r_training/debugging_r.html#pin-pointing-problems",
    "href": "r_training/debugging_r.html#pin-pointing-problems",
    "title": "Debugging R",
    "section": "Pin-pointing problems",
    "text": "Pin-pointing problems\nTo solve an error you’ll almost always need to refine your understanding of a) what’s gone wrong, and b) where it’s gone wrong.\nRead the error message\nObvious but takes practice. Most R error messages give you clues as to how to find and fix the problem. The key here is that a) the message will contain the word Error and b) your code will stop running. Many errors from more recent packages have nice explanations and fixes. In general, the older the function, the more difficult the error. That wasn’t always the case, and some older R functions have horrid error messages. Here’s a short dictionary for some classics:\n\n\ncould not find function ‘thing’ = you’ve mis-spelled a function name or failed to load a package\n\nthere is no package called ‘glok’ = you’ve mis-spelled a package name - or you haven’t installed it\n\nobject 'mpg' not found = you haven’t created an object, or you’ve missed a pipe somewhere\n\nnon-numeric argument to binary operator = you’ve tried to do maths with words somewhere\n\nlonger object length is not a multiple of shorter object length or length of 'dimnames' [2] not equal to array extent = you’ve fallen into vector recycling rules\n\nlots of weird errors about filter - make sure you’re using dplyr::filter specifically\nFinding errors\nUnlike many programming languages, R doesn’t give you a line number for errors. It is possible, but a bit messy, to add line numbers, but might be worth it if you’re coming from Python or similar. You can usually see the malfunctioning line of code immediately above the error message in the console.\nIf your error message isn’t that helpful, you can try running the traceback() command in the console, which will show you the series of steps that led to your last error. The trick here is to read bottom-to-top: the top of the traceback() output was the last function that ran before R fell over.\nYou can also, if you’re getting desperate, try some old-fashioned print debugging, by putting some print(\"some label\") statements into your code. They’ll appear in the console, so you might be able to detect the location of your error if all else fails. But really, if you’re at this point you should probably move onto a more involved strategy…\nCheck the basic stuff\nIf that hasn’t worked, we’re into debugging proper. So, at this point, make sure that you’ve restart R to clean up your environment, run your code again, and then looked carefully at your output/error message to decide what’s wrong with it. At this point, I’d also try to write the problem down, which is an effective but irrational strategy that often seems to yield results.\nAssuming that fails, we can run through a set of quick checks that are always worth trying:\n\n\n\n\n\n\nA list of basic code errors\n\n\n\n\ncheck your brackets - Code &gt; Rainbow parentheses (or rainbow brackets for those of us in British-inflected English) are fantastic for this\nlook for easy transpositions like &lt; / &gt;, + / -\n\ncheck that your function names are correct, and you’re not accidentally using false-friends (class() and typeof() are really nice examples)\n\na quick check of each function’s help at this point, just to check it really does what you think it does, is highly recommended\n\n\nensure all your packages are installed and loaded. If in doubt, use namespacing package::function\n\nmake sure that you’re actually looking at this code’s output, and haven’t accidentally calculated something without showing it…\n\n\nresult &lt;- 1+5+8+9\nprint(results) # slightly different variable name"
  },
  {
    "objectID": "r_training/debugging_r.html#isolating-errors",
    "href": "r_training/debugging_r.html#isolating-errors",
    "title": "Debugging R",
    "section": "Isolating errors",
    "text": "Isolating errors\nIf you can’t find your problem fairly easily, then you need to cut your code down to size to make your search easier.\nMake a minimal example\nThe best advice for tricky problems is to make your problem as specific as problem. That means removing any irrelevant code. We’ll call this the minimal example. Assuming that you’ve already tried the sequence of basic troubleshooting steps above, you’d go about it as follows:\n\n\nswitch off any unnecessary parts of your code to pin down where the error is happening\n\nyou can do that by adding # or Ctrl+Shift+c\n\nor, probably cognitively better, copy the misbehaving code to a new script\n\n\ntry to run that extracted piece of code (again, probably after restarting R)\n\nyou’ll almost certainly need to load packages, and add other pieces of code to get it to run\nwhatever you do, do the minimum. No loading all the usual packages, no copy-pasting great gobbets of code around the place, just try and keep the script as simple as possible\n\n\nwhen you’ve got the code to run, you’ll either:\n\nhave the same error again, in which case you’re in a much better position to do the same thing again to localise the error within that new, simpler, script you’ve just built\nhave fixed the error, in which case you now know what you need to look elsewhere in your original code for the source of the problem\nhave given yourself a brand-new error to focus on. Lucky you! Definitely try to fix that new error before proceeding\n\n\n\nIf that doesn’t work, it’s time to look up the chain to the inputs of this piece of code. I’d work as follows:\n\ncheck for types - so if you’re expecting your code to add numbers together, ensure that your inputs are both numbers\ncheck that the variable names line up\ncheck that there’s no other code that could potentially alter any of your inputs\nfinally, repeat the isolation exercise above for each input\nReprex\n= reproducible example. See the documentation for the reprex package, especially the helpful set of do’s and don’t.\nIf the minimal example method above doesn’t find your problem, you’re probably going to need to ask for help. Luckily, the preparatory work you’ll need for that is itself directly helpful in solving your problem.\nGenerally, when people want to help you with your R code, the first thing they’ll want to do is to run it. A reprex is a way of packaging up everything your code needs so that anyone can copy and paste it. This is important, because a bare snippet of code doesn’t tell the full story. For example, say this bit of code isn’t working for me:\n\nmy_data |&gt;\n  filter(flavours = \"chocolate\") |&gt;\n  transmogrify() \n\nA potential ally and helper won’t be able to assist me with this as it stands. They won’t know about my data, they won’t know which packages I’m using, and (last line) they won’t even recognize the function name that I just made up. To save a lot of annoying back and forth, you should turn this into a minimal example (see above), and then use reprex to help your helpers. I need at least the following bits to make this code reproducible:\n\nthe data\nan idea of which package the filter() comes from\na definition of transmogrify()\n\n\nThat breaks down as follows:\n\nprovide a short snippet of data\ninclude any relevant package loading\ninclude the function definition for any non-package functions\n\n\nmy_data &lt;- dplyr::tibble(flavours = c(\"chocolate\", \"onion\", \"chocolate\"),\n                  scoop_size = c(100,120,100),\n                  count = c(200,500,400)) # give a preview of the data in a copy/pastable format\n\ntransmogrify &lt;- function(df){\n  df |&gt;\n    dplyr::summarise(total_vol_l = sum(scoop_size * count)/1000) # add the function definition\n}\n\nmy_data |&gt; # I can now run this and find the error!\n  dplyr::filter(flavours = \"chocolate\") |&gt; # dplyr's filter\n  transmogrify() \n\n\nThis usually means that you’ve used = instead of ==.\n\nGetting data together for a reprex is the most painful bit, particularly if you’re dealing with something real-world and lengthy. I like the datapasta package for this, as it has the useful function tribble_format that will take some data and turn it into a copy/pastable format that you can use in a reprex.\n\ndatapasta::tribble_format(head(mtcars, 4))"
  },
  {
    "objectID": "r_training/debugging_r.html#finding-help",
    "href": "r_training/debugging_r.html#finding-help",
    "title": "Debugging R",
    "section": "Finding help",
    "text": "Finding help\nYou should definitely read the incredibly short (+ free) chapter in R for Data Science as a start. R is a widely-used language, which means that most errors will have cropped-up in some form before. In general, I’d suggest a thorough search for your term before asking for specific help. Some search tips:\n\nlook in the help before anything online\nbe specific - mention package/function names and error messages. Often including the whole error message in quotes can sharpen things up a bit\ninclude “R” in your search string to ensure you’re getting relevant results\nyou might also use the “site: stackoverflow.com” to restrict searches to one of the most useful and relevant sources there is\n\nOtherwise, assuming this fails, you should ask for help. I’d probably think about one of three venues for that:\n\nif you’re reading this, you already know about the KIND network. We have a large R community - come and chat!\nif you’re NHS, the NHS-R community is great and full of friendly experts. They have an active Slack channel\notherwise, the big player is stackoverflow. They can be fierce, but definitely some serious experts out there\n\nWherever you ask for help, please help yourself:\n\nbe sure you know about any local rules governing asking for help\nsearch carefully to make sure you’re not the twentieth person this week asking the same question\na specific, but concise, question is the thing. Include the error message, give basic details about your setup (R 4.4.1, Rstudio, Windows, e.g) and include your reprex so that potential helpers don’t have to ask you for it"
  },
  {
    "objectID": "r_training/debugging_r.html#fancier-stuff",
    "href": "r_training/debugging_r.html#fancier-stuff",
    "title": "Debugging R",
    "section": "Fancier stuff",
    "text": "Fancier stuff\nAs you write more complex code, I would want to add three more sets of tools. The first of these is browser()/breakpoints. These are mainly used to understand what’s going on inside functions. I’d recommend the chapter in Advanced R as an entry point to these techniques.\nI’d also want to start thinking more formally about methods and classes as this is a common cause of errors. The chapter on S3 in Advanced R is a good place to start, as is fooling around with the sloop package.\nThe final strategy is to formalize and automate your testing. Again, well beyond the scope of this beginner’s session, but if you’re interested in this powerful approach for more advanced applications you can review our unit testing materials for an accessible introduction."
  },
  {
    "objectID": "r_training/dplyr_joins.html",
    "href": "r_training/dplyr_joins.html",
    "title": "Joining data with dplyr",
    "section": "",
    "text": "No feedback found for this session"
  },
  {
    "objectID": "r_training/dplyr_joins.html#session-outline",
    "href": "r_training/dplyr_joins.html#session-outline",
    "title": "Joining data with dplyr",
    "section": "Session outline",
    "text": "Session outline\nThis session is an 🌶🌶 intermediate practical designed for those with some R experience. The aim of this session is to do three things with dplyr:\n\nexplain the difference between binds and joins\nto demonstrate a range of different joining strategies\nto explain dplyr’s new tools for controlling joins (.by, by(), multiple(), unmatched())\n\nYou might also like some of the other dplyr-themed practical sessions:\n\nExploring data with dplyr\nSummarising data with dplyr\nTidyselect"
  },
  {
    "objectID": "r_training/dplyr_joins.html#joins",
    "href": "r_training/dplyr_joins.html#joins",
    "title": "Joining data with dplyr",
    "section": "Joins",
    "text": "Joins\nJoins are where we merge two tibbles together in some way, while broadly preserving the structure of each. There are a couple of variants that we’ll introduce in turn:\n\n\nbinding joins, which are joins where data are added based on position. For example, we merge the each of the first columns in the two tibbles into one new first column.\n\nmutating joins, which are joins where data are added by values to match existing data. For example, we might match two tibbles based on CHI number, and connect two otherwise dissimilar data sets together.\n\nLet’s start with binding joins - after a bit of basic package loading:\n\nlibrary(dplyr)"
  },
  {
    "objectID": "r_training/dplyr_joins.html#binding",
    "href": "r_training/dplyr_joins.html#binding",
    "title": "Joining data with dplyr",
    "section": "Binding",
    "text": "Binding\nTo demonstrate how joins work in dplyr, we need to start with some suitable data.\nWe’ll set up some extremely simple data using tribble() to demonstrate how the joins work:\n\nx &lt;- tibble::tribble(\n  ~category, ~value, ~key,\n  \"x\",5,3,\n  \"x\",2,7,\n  \"x\",4,2,\n  \"x\",7,1,\n  \"x\",9,1\n  )\n\n\n\ny &lt;- tibble::tribble(\n  ~category, ~value, ~key,\n  \"y\",2,5,\n  \"y\",7,2,\n  \"y\",3,2,\n  \"y\",2,8,\n  \"y\",2,14\n  )\n\nbind_rows()\nbind_rows() does exactly what the name describes. It adds the rows of one tibble to another, resulting in one joined tibble containing all the rows:\n\nx |&gt;\n  bind_rows(y) \n\n# A tibble: 10 × 3\n   category value   key\n   &lt;chr&gt;    &lt;dbl&gt; &lt;dbl&gt;\n 1 x            5     3\n 2 x            2     7\n 3 x            4     2\n 4 x            7     1\n 5 x            9     1\n 6 y            2     5\n 7 y            7     2\n 8 y            3     2\n 9 y            2     8\n10 y            2    14\n\n\nbind_rows() will create new columns and fill with NAs if the names of the columns don’t match:\n\nx |&gt;\n  rename(\"wrong_name\" = \"value\") |&gt;\n  bind_rows(y)\n\n# A tibble: 10 × 4\n   category wrong_name   key value\n   &lt;chr&gt;         &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n 1 x                 5     3    NA\n 2 x                 2     7    NA\n 3 x                 4     2    NA\n 4 x                 7     1    NA\n 5 x                 9     1    NA\n 6 y                NA     5     2\n 7 y                NA     2     7\n 8 y                NA     2     3\n 9 y                NA     8     2\n10 y                NA    14     2\n\n\nAnd you can create an optional ID column to show where each row originated, which is helpful for debugging:\n\nx |&gt;\n  bind_rows(y, .id=\"ID\") \n\n# A tibble: 10 × 4\n   ID    category value   key\n   &lt;chr&gt; &lt;chr&gt;    &lt;dbl&gt; &lt;dbl&gt;\n 1 1     x            5     3\n 2 1     x            2     7\n 3 1     x            4     2\n 4 1     x            7     1\n 5 1     x            9     1\n 6 2     y            2     5\n 7 2     y            7     2\n 8 2     y            3     2\n 9 2     y            2     8\n10 2     y            2    14\n\n\nYou can also bind_rows() by list:\n\nbind_rows(list(x, y)) \n\n# A tibble: 10 × 3\n   category value   key\n   &lt;chr&gt;    &lt;dbl&gt; &lt;dbl&gt;\n 1 x            5     3\n 2 x            2     7\n 3 x            4     2\n 4 x            7     1\n 5 x            9     1\n 6 y            2     5\n 7 y            7     2\n 8 y            3     2\n 9 y            2     8\n10 y            2    14\n\n\nbind_cols()\nAnother function, another descriptive name. bind_cols() adds columns to the starting tibble, but otherwise works as bind_rows():\n\nx |&gt;\n  bind_cols(y, .name_repair=\"universal\") \n\n# A tibble: 5 × 6\n  category...1 value...2 key...3 category...4 value...5 key...6\n  &lt;chr&gt;            &lt;dbl&gt;   &lt;dbl&gt; &lt;chr&gt;            &lt;dbl&gt;   &lt;dbl&gt;\n1 x                    5       3 y                    2       5\n2 x                    2       7 y                    7       2\n3 x                    4       2 y                    3       2\n4 x                    7       1 y                    2       8\n5 x                    9       1 y                    2      14"
  },
  {
    "objectID": "r_training/dplyr_joins.html#mutating-joins",
    "href": "r_training/dplyr_joins.html#mutating-joins",
    "title": "Joining data with dplyr",
    "section": "Mutating joins",
    "text": "Mutating joins\nTo get started with mutating joins in dplyr, we could do much worse than the first part of the manual page, which is nice and clear:\n\nThe mutating joins add columns from y to x, matching rows based on the keys:\n\n\ninner_join(): includes all rows in x and y.\n\nleft_join(): includes all rows in x.\n\nright_join(): includes all rows in y.\n\nfull_join(): includes all rows in x or y.\n\nanti_join(): includes all rows in x that are not in y.\n\nIf a row in x matches multiple rows in y, all the rows in y will be returned once for each matching row in x.\n\ninner_join()\n\n\nInner join\n\ninner_join() joins two tibbles by whichever key column you supply using by=:\n\nx |&gt;\n  inner_join(y, by=\"key\") \n\n# A tibble: 2 × 5\n  category.x value.x   key category.y value.y\n  &lt;chr&gt;        &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;        &lt;dbl&gt;\n1 x                4     2 y                7\n2 x                4     2 y                3\n\n\nThis returns all the rows that exist in both tibbles.\nleft_join()\n\n\nLeft join\n\nleft_join() includes all the rows in the first tibble:\n\nx |&gt;\n  left_join(y, by=\"key\", suffix = c(\".a\", \".b\")) \n\n# A tibble: 6 × 5\n  category.a value.a   key category.b value.b\n  &lt;chr&gt;        &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;        &lt;dbl&gt;\n1 x                5     3 &lt;NA&gt;            NA\n2 x                2     7 &lt;NA&gt;            NA\n3 x                4     2 y                7\n4 x                4     2 y                3\n5 x                7     1 &lt;NA&gt;            NA\n6 x                9     1 &lt;NA&gt;            NA\n\n\nWe get returned the rows that exist in x, and any that match keys from y. Any ‘extra’ rows in simple_a are filled in with NAs. We’ve also tweaked the column names in this example, using the suffix argument.\nright_join()\n\n\nRight join\n\nright_join() includes all the rows in the second tibble:\n\nx |&gt;\n  right_join(y, by=\"key\", keep=T) \n\n# A tibble: 5 × 6\n  category.x value.x key.x category.y value.y key.y\n  &lt;chr&gt;        &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;        &lt;dbl&gt; &lt;dbl&gt;\n1 x                4     2 y                7     2\n2 x                4     2 y                3     2\n3 &lt;NA&gt;            NA    NA y                2     5\n4 &lt;NA&gt;            NA    NA y                2     8\n5 &lt;NA&gt;            NA    NA y                2    14\n\n\nWe get all the rows that exist in y, and any that match keys from simple_a, again, filling with NAs where appropriate. Here, we’re demonstrating the keep argument, which will repeat the column on which we’re joining for each of the tibbles.\nfull_join()\n\n\nFull join\n\nfull_join() gives us all the rows from all the tibbles:\n\nx |&gt;\n  full_join(y, by=\"key\") \n\n# A tibble: 9 × 5\n  category.x value.x   key category.y value.y\n  &lt;chr&gt;        &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;        &lt;dbl&gt;\n1 x                5     3 &lt;NA&gt;            NA\n2 x                2     7 &lt;NA&gt;            NA\n3 x                4     2 y                7\n4 x                4     2 y                3\n5 x                7     1 &lt;NA&gt;            NA\n6 x                9     1 &lt;NA&gt;            NA\n7 &lt;NA&gt;            NA     5 y                2\n8 &lt;NA&gt;            NA     8 y                2\n9 &lt;NA&gt;            NA    14 y                2\n\n\nAll rows in both tibbles, filling with NAs where needed.\nanti_join()\n\n\nAnti join\n\nAnti-join is a bit of an outlier, because it returns a smaller tibble than it is supplied with. It returns all the rows of our first tibble that are not present in the second tibble:\n\nx |&gt;\n  anti_join(y, by=\"key\") \n\n# A tibble: 4 × 3\n  category value   key\n  &lt;chr&gt;    &lt;dbl&gt; &lt;dbl&gt;\n1 x            5     3\n2 x            2     7\n3 x            7     1\n4 x            9     1\n\n\nOnly those rows in x that are not present in y."
  },
  {
    "objectID": "r_training/iteration_in_r.html",
    "href": "r_training/iteration_in_r.html",
    "title": "Iteration in R",
    "section": "",
    "text": "9 previous attendees have left feedback\n89% would recommend this session to a colleague\n89% said that this session was pitched correctly\n\n\n\n\n\n\n\n\n\n\n\nThree random comments from previous attendees\n\n\n\n\nmore than enough to spark interest in trying this but some of it clearly melted my brain\nA great into to iteration!\nExcellent introduction to iteration - easy to follow along during the session"
  },
  {
    "objectID": "r_training/iteration_in_r.html#previous-attendees-have-said",
    "href": "r_training/iteration_in_r.html#previous-attendees-have-said",
    "title": "Iteration in R",
    "section": "",
    "text": "9 previous attendees have left feedback\n89% would recommend this session to a colleague\n89% said that this session was pitched correctly\n\n\n\n\n\n\n\n\n\n\n\nThree random comments from previous attendees\n\n\n\n\nmore than enough to spark interest in trying this but some of it clearly melted my brain\nA great into to iteration!\nExcellent introduction to iteration - easy to follow along during the session"
  },
  {
    "objectID": "r_training/iteration_in_r.html#welcome",
    "href": "r_training/iteration_in_r.html#welcome",
    "title": "Iteration in R",
    "section": "Welcome",
    "text": "Welcome\n\nthis is an 🌶🌶 intermediate-level practical session designed for those with prior R experience"
  },
  {
    "objectID": "r_training/iteration_in_r.html#session-outline",
    "href": "r_training/iteration_in_r.html#session-outline",
    "title": "Iteration in R",
    "section": "Session outline",
    "text": "Session outline\n\nwhat’s a loop?\nbasic examples"
  },
  {
    "objectID": "r_training/iteration_in_r.html#general-loop-syntax",
    "href": "r_training/iteration_in_r.html#general-loop-syntax",
    "title": "Iteration in R",
    "section": "General loop syntax",
    "text": "General loop syntax\nWe can write a bit of code, and execute it repeatedly. Usually, we’ll do this by creating a vector - like c(1,2,3,4) - and looping over that vector. We’d do that by writing the following code:\n\nfor (variable in vector) {\n  # some bit of code\n}"
  },
  {
    "objectID": "r_training/iteration_in_r.html#simple-examples",
    "href": "r_training/iteration_in_r.html#simple-examples",
    "title": "Iteration in R",
    "section": "Simple examples",
    "text": "Simple examples\n\nfor (i in 1:4) {\n  print(\"hello world!\")\n}\n\n[1] \"hello world!\"\n[1] \"hello world!\"\n[1] \"hello world!\"\n[1] \"hello world!\"\n\nfor (i in LETTERS[5:10]) {\n  print(i)\n}\n\n[1] \"E\"\n[1] \"F\"\n[1] \"G\"\n[1] \"H\"\n[1] \"I\"\n[1] \"J\"\n\nfor (i in 4:1) {\n  print(i)\n}\n\n[1] 4\n[1] 3\n[1] 2\n[1] 1"
  },
  {
    "objectID": "r_training/iteration_in_r.html#collecting-output",
    "href": "r_training/iteration_in_r.html#collecting-output",
    "title": "Iteration in R",
    "section": "Collecting output",
    "text": "Collecting output\nLoops work best when you collect their output by indexing. So we start off by making an empty output vector of the right size, then assigning into that vector within our loop using indexing:\n\nlen &lt;- 1:4\n\noutput &lt;- vector(\"character\", length(len))\n\nfor (i in len) {\n  output[i] &lt;- paste(\"the number is\", i)\n}\n\noutput\n\n[1] \"the number is 1\" \"the number is 2\" \"the number is 3\" \"the number is 4\"\n\n\nIt’s also possible to collect output into a data.frame or similar\n\ndf_output &lt;- data.frame(num = vector(\"numeric\", length(len)))\n\nfor (i in 1:4) {\n  df_output$num[i] &lt;- i\n}\n\ndf_output |&gt;\n  knitr::kable()\n\n\n\nnum\n\n\n\n1\n\n\n2\n\n\n3\n\n\n4"
  },
  {
    "objectID": "r_training/iteration_in_r.html#benchmarking-and-appending-output",
    "href": "r_training/iteration_in_r.html#benchmarking-and-appending-output",
    "title": "Iteration in R",
    "section": "Benchmarking and appending output",
    "text": "Benchmarking and appending output\nYou should avoid appending output. It’s inefficient owing to R’s copy-on-modify behaviour. We’ll set up a couple of loops in a function, and use microbenchmark to compare what happens with append (which uses c() to append its output) with pre-allocate, which indexes into a vector of the proper length.\n\nlibrary(ggplot2)\nlibrary(microbenchmark)\n\nshow_diff &lt;- function(len){\n  output &lt;- vector(\"numeric\", 0)\n  output2 &lt;- vector(\"numeric\", len)\n\nbench &lt;- microbenchmark(append = {\n  for (i in 1:len) {\n    output &lt;- c(output, i)\n                    }\n                                  },\n\npre_allocate = {\n  for (i in 1:len) {\n    output2[i] &lt;- i\n                    }\n                }\n, times = 20)\n\nautoplot(bench) +\n  ggtitle(paste0(\"Loop from 1:\", len))\n}\n\nThe difference isn’t that much when dealing with small loops:\n\nshow_diff(10)\n\n\n\n\n\n\n\nBut huge differences result very quickly as the loop length increases:\n\nshow_diff(100)\n\n\n\n\n\n\n\n\nshow_diff(500)"
  },
  {
    "objectID": "r_training/iteration_in_r.html#seq_along",
    "href": "r_training/iteration_in_r.html#seq_along",
    "title": "Iteration in R",
    "section": "seq_along",
    "text": "seq_along\nThe last tool we’ll look at is seq_along. This function helps make iterable vectors from other R objects. Say you had a tibble/df that you wanted to iterate over to average each column. You could manually figure out the number of columns, then iterate on that calculation:\n\noutput &lt;- vector(\"numeric\", length(mtcars))\n\nfor(i in 1:length(output)){\n  output[i] &lt;- mean(mtcars[,i], na.rm=T)\n}\n\noutput\n\n [1]  20.090625   6.187500 230.721875 146.687500   3.596563   3.217250\n [7]  17.848750   0.437500   0.406250   3.687500   2.812500\n\n\nBut, you could alternatively use seq_along to generate a neat integer vector to iterate over:\n\noutput &lt;- vector(\"numeric\", length(mtcars))\n\nfor(i in seq_along(mtcars)){\n  output[i] &lt;- mean(mtcars[,i], na.rm=T)\n}\n\noutput\n\n [1]  20.090625   6.187500 230.721875 146.687500   3.596563   3.217250\n [7]  17.848750   0.437500   0.406250   3.687500   2.812500"
  },
  {
    "objectID": "r_training/parameterised_rmarkdown.html",
    "href": "r_training/parameterised_rmarkdown.html",
    "title": "Parameterised Rmarkdown",
    "section": "",
    "text": "this is an 🌶🌶 intermediate-level practical session designed for those with prior R experience, but who are new to Shiny\nit’s definitely meant to be a taster session, rather than a comprehensive introduction\nyou’ need R of some sort to follow along\n\nyou’ll also need Quarto for the Quarto-specific part"
  },
  {
    "objectID": "r_training/parameterised_rmarkdown.html#welcome",
    "href": "r_training/parameterised_rmarkdown.html#welcome",
    "title": "Parameterised Rmarkdown",
    "section": "",
    "text": "this is an 🌶🌶 intermediate-level practical session designed for those with prior R experience, but who are new to Shiny\nit’s definitely meant to be a taster session, rather than a comprehensive introduction\nyou’ need R of some sort to follow along\n\nyou’ll also need Quarto for the Quarto-specific part"
  },
  {
    "objectID": "r_training/parameterised_rmarkdown.html#session-outline",
    "href": "r_training/parameterised_rmarkdown.html#session-outline",
    "title": "Parameterised Rmarkdown",
    "section": "Session outline",
    "text": "Session outline\n\nways of knitting\ninteresting things to try\n\nshow/hide code\nchoose params interactively\nknit from a function\nuse purrr (and possibly targets) to do this at scale\ntry this with Quarto"
  },
  {
    "objectID": "r_training/parameterised_rmarkdown.html#resources",
    "href": "r_training/parameterised_rmarkdown.html#resources",
    "title": "Parameterised Rmarkdown",
    "section": "Resources",
    "text": "Resources\n\nyou’ll need R 4.0+ and Rstudio/posit.cloud/Posit workbench/VSCode and packages\nyou’ll also need Quarto installed, which can be a battle in the server-based flavours of Posit"
  },
  {
    "objectID": "r_training/parameterised_rmarkdown.html#ways-of-knitting",
    "href": "r_training/parameterised_rmarkdown.html#ways-of-knitting",
    "title": "Parameterised Rmarkdown",
    "section": "Ways of knitting",
    "text": "Ways of knitting\nWe’ll need to start with a hello-world Rmarkdown document. That should be knit-able from the knit button . But you should also be able to knit using rmarkdown::render() to produce some output. Together, those three elements look like this:\n\n\nRmarkdown\nRender code\nOutput\n\n\n\n---\ntitle: \"Plain Rmarkdown\"\noutput: html_document\n---\n\n```{r, results='asis'}\ncat(\"Hello world\")\n```\n\n\n\nrmarkdown::render(\"01_rmd.Rmd\")\n\n\n\n\n\n\n\nThis gets more interesting when you start specifying options inside render. A basic example of this would be to change the output filename by adding output_file:\n\nrmarkdown::render(\"Rmarkdown.Rmd\", \n                  output_file = \"Rmarkdown_plain.html\")\n\nWe could also change our output format. By default, rmarkdown docs get rendered to whatever is specified in the header. That’s HTML in our case, but we could fiddle that to give us .pdf output:\n\nrmarkdown::render(\"Rmarkdown.Rmd\", \n                  output_file = \"Rmarkdown_plain.pdf\",\n                  output_format = pdf_document)\n\nNote that we’re still producing the same output each time, albeit with different filenames and in different formats. The next part is to add params, which will enable us to change the content. We need to make two changes to our Rmd first:\n\n\nRmarkdown\nRender code\nOutput\n\n\n\nWe add params in the header, and some code (params$name) to access their values in the body of our Rmarkdown document:\n---\ntitle: \"Rmarkdown with params\"\noutput: html_document\nparams:\n  name: \"Bruce\" # added a param with a default value\n---\n\n```{r, results='asis'}\ncat(paste(\"Hello\", params$name)) # use that param in the body of the document\n```\n\n\n\nrmarkdown::render(\"02_rmd.Rmd\")\n\n\n\n\n\n\n\nWe can now add some params in our render code to produce a different output. Note that, as we set defaults in the Rmarkdown header, these params are optional. But if we do include params in our render call, they will over-ride the defaults:\n\n\nRmarkdown\nRender code\nOutput\n\n\n\nSame Rmarkdown:\n---\ntitle: \"Rmarkdown with params\"\noutput: html_document\nparams:\n  name: \"Bruce\" # added a param with a default value\n---\n\n```{r, results='asis'}\ncat(paste(\"Hello\", params$name)) # use that param in the body of the document\n```\n\n\n\nrmarkdown::render(\"02_rmd.Rmd\",\n                  params = list(name = \"Steve\")) # new param"
  },
  {
    "objectID": "r_training/parameterised_rmarkdown.html#interesting-things-to-do-with-params-showhide-code",
    "href": "r_training/parameterised_rmarkdown.html#interesting-things-to-do-with-params-showhide-code",
    "title": "Parameterised Rmarkdown",
    "section": "Interesting things to do with params: show/hide code",
    "text": "Interesting things to do with params: show/hide code\n\n\nRmarkdown\nRender code\nOutput\n\n\n\nAdd an extra param to the Rmarkdown, and link it to the chunk options:\n---\ntitle: \"Rmarkdown with params\"\noutput: html_document\nparams:\n  name: \"Bruce\" # added a param with a default value\n  showcode: TRUE\n---\n\n```{r, include=FALSE}\nknitr::opts_chunk$set(echo = params$showcode) # setting all chunk options to the value of showcode\n```\n\n```{r, results='asis'}\ncat(paste(\"Hello\", params$name)) # use that param in the body of the document\n```\n\n\n\nrmarkdown::render(\"03_rmd.Rmd\",\n                  params = list(showcode = FALSE)) # new param"
  },
  {
    "objectID": "r_training/parameterised_rmarkdown.html#interesting-things-to-do-with-params-choose-params-interactively",
    "href": "r_training/parameterised_rmarkdown.html#interesting-things-to-do-with-params-choose-params-interactively",
    "title": "Parameterised Rmarkdown",
    "section": "Interesting things to do with params: choose params interactively",
    "text": "Interesting things to do with params: choose params interactively\n\n\nRmarkdown\nRender code\nOutput\n\n\n\nWith the same Rmd, we can run params interactively via a mini-Shiny app:\n---\ntitle: \"Rmarkdown with params\"\noutput: html_document\nparams:\n  name: \"Bruce\" # added a param with a default value\n  showcode: TRUE\n---\n\n```{r, include=FALSE}\nknitr::opts_chunk$set(echo = params$showcode) # setting all chunk options to the value of showcode\n```\n\n```{r, results='asis'}\ncat(paste(\"Hello\", params$name)) # use that param in the body of the document\n```\n\n\nYou can also access this via the knit menu: \n\nrmarkdown::render(\"03_rmd.Rmd\", params = \"ask\") # interactive parameter choice\n\nInteractive parameter chooser:"
  },
  {
    "objectID": "r_training/parameterised_rmarkdown.html#interesting-things-to-do-with-params-knit-from-a-function",
    "href": "r_training/parameterised_rmarkdown.html#interesting-things-to-do-with-params-knit-from-a-function",
    "title": "Parameterised Rmarkdown",
    "section": "Interesting things to do with params: knit from a function",
    "text": "Interesting things to do with params: knit from a function\n\n\nRmarkdown\nRender code\nOutput\n\n\n\nWe’ll use the same Rmd for this:\n---\ntitle: \"Rmarkdown with params\"\noutput: html_document\nparams:\n  name: \"Bruce\" # added a param with a default value\n  showcode: TRUE\n---\n\n```{r, include=FALSE}\nknitr::opts_chunk$set(echo = params$showcode) # setting all chunk options to the value of showcode\n```\n\n```{r, results='asis'}\ncat(paste(\"Hello\", params$name)) # use that param in the body of the document\n```\n\n\nWe build a function to call rmarkdown::render() with the right options:\n\nmake_mark &lt;- function(input_name, show_code = TRUE, format = \"html\"){\n\n  rmarkdown::render(\"03_rmd.Rmd\",\n                    output_file = paste0(\"03_rmd_\", input_name, \".\", format),\n                    params = list(name = input_name, \n                                  showcode = show_code))\n}\n\nmake_mark(input_name = \"Nat\")\nmake_mark(input_name = \"Mel\", format = \"pdf\")\nmake_mark(input_name = \"Sue\", show_code = FALSE, format = \"html\")\n\n\n\n\nand\n\nand"
  },
  {
    "objectID": "r_training/parameterised_rmarkdown.html#interesting-things-to-do-with-params-purrr-from-that-function",
    "href": "r_training/parameterised_rmarkdown.html#interesting-things-to-do-with-params-purrr-from-that-function",
    "title": "Parameterised Rmarkdown",
    "section": "Interesting things to do with params: purrr from that function",
    "text": "Interesting things to do with params: purrr from that function\n\n\nRmarkdown\nRender code\nOutput\n\n\n\nSame Rmd again:\n---\ntitle: \"Rmarkdown with params\"\noutput: html_document\nparams:\n  name: \"Bruce\" # added a param with a default value\n  showcode: TRUE\n---\n\n```{r, include=FALSE}\nknitr::opts_chunk$set(echo = params$showcode) # setting all chunk options to the value of showcode\n```\n\n```{r, results='asis'}\ncat(paste(\"Hello\", params$name)) # use that param in the body of the document\n```\n\n\nWe’ll now call our make_mark function using purrr. dplyr::expand_grid() helps set all the correct combinations up for us:\n\ninput_name = c(\"Angela\", \"Gloria\", \"Audre\", \"bell\")\nformat = c(\"pdf\", \"html\")\n\ntidyr::expand_grid(input_name, format) |&gt;\n  purrr::pwalk(make_mark2) \n\n\n\n\n\nAngela HTML\n\nand\n\n\nAngela .pdf\n\nand\n\n\nAudr\n\nand\n\n…and so on and so on.\n\n\n\nUsing functional programming can lead to massive and complicated results quickly. You should probably investigate the targets package if you’re looking to apply this at scale."
  },
  {
    "objectID": "r_training/parameterised_rmarkdown.html#interesting-things-to-do-with-params-use-in-quarto",
    "href": "r_training/parameterised_rmarkdown.html#interesting-things-to-do-with-params-use-in-quarto",
    "title": "Parameterised Rmarkdown",
    "section": "Interesting things to do with params: use in Quarto",
    "text": "Interesting things to do with params: use in Quarto\nThis parameterised approach is also applicable to Quarto.\n\n\nQuarto\nRender code\nOutput\n\n\n\nBasically the same as our Rmd with a different render function:\n---\ntitle: \"Quarto with params\"\noutput: html\nparams:\n  name: \"Bruce\" # added a param with a default value\n---\n\n```{r}\n#| results: asis\ncat(paste(\"Hello\", params$name)) # use that param in the body of the document\n```\n\n\n\nquarto::quarto_render(\"01_qmd.qmd\") # different render function\n\n\nquarto::quarto_render(\"01_qmd.qmd\", \n                      execute_params = list(name = \"Emma\")) # same way of setting params\n\n\n\n\nand"
  },
  {
    "objectID": "r_training/r_from_scratch.html",
    "href": "r_training/r_from_scratch.html",
    "title": "R from scratch",
    "section": "",
    "text": "52 previous attendees have left feedback\n100% would recommend this session to a colleague\n96% said that this session was pitched correctly\n\n\n\n\n\n\n\n\n\n\n\nThree random comments from previous attendees\n\n\n\n\nVery well presented and accessible introduction to R. I enjoyed it.\nGood session but difficult to keep up when trying to copy out the code\nI am totally new to R but the session was great - easy to follow, friendly and offering lots of support when needed. Looking forward to future sessions."
  },
  {
    "objectID": "r_training/r_from_scratch.html#previous-attendees-have-said",
    "href": "r_training/r_from_scratch.html#previous-attendees-have-said",
    "title": "R from scratch",
    "section": "",
    "text": "52 previous attendees have left feedback\n100% would recommend this session to a colleague\n96% said that this session was pitched correctly\n\n\n\n\n\n\n\n\n\n\n\nThree random comments from previous attendees\n\n\n\n\nVery well presented and accessible introduction to R. I enjoyed it.\nGood session but difficult to keep up when trying to copy out the code\nI am totally new to R but the session was great - easy to follow, friendly and offering lots of support when needed. Looking forward to future sessions."
  },
  {
    "objectID": "r_training/r_from_scratch.html#hello-world",
    "href": "r_training/r_from_scratch.html#hello-world",
    "title": "R from scratch",
    "section": "hello world",
    "text": "hello world\n\nR has a terminal where you can write code, and R will run it for you and show you the results\nwe’ll start with a string, which is how we keep words in R code (single or double quotes, your choice)\ntype a string in the terminal\n\n\n\"hello world\"\n\n[1] \"hello world\"\n\n\n \n\nbut we usually write R in script files\nstart a new R script\n\nnow press Ctrl + Enter to run your script\n\n\n\"hello world\"\n\n[1] \"hello world\"\n\n\n\n(for the coders, R has implicit print)\n\n\n# variable\n# assignment operator\nhw &lt;- \"hello world\"\nhw\n\n[1] \"hello world\"\n\n\n\n# R is case sensitive\n# R runs from top to bottom - you can't use an object until you've made it\ntry(HW) # a way of running broken code and capturing the error messages it provokes\n\nError in eval(expr, envir) : object 'HW' not found\n\nHW &lt;- \"HELLO WORLD\"\nHW\n\n[1] \"HELLO WORLD\""
  },
  {
    "objectID": "r_training/r_from_scratch.html#functions",
    "href": "r_training/r_from_scratch.html#functions",
    "title": "R from scratch",
    "section": "functions",
    "text": "functions\n\n# print function\n# variables persist\nprint(hw)\n\n[1] \"hello world\"\n\n\n\n# help for all functions\n?print\n\n\n# look at the help and try to make substr work to pull out \"hello\"\n# arguments\nsubstr(hw, 1, 5)\n\n[1] \"hello\"\n\n\n\n# return value\n# assign out of functions\nhi &lt;- substr(hw, 1, 5)\n\n\n# vectors\n# combine\nc(hw, hw)\n\n[1] \"hello world\" \"hello world\"\n\nlength(c(hw, hw))\n\n[1] 2\n\n\n\n# most functions are vectorised\nsubstr(c(hw, hw), 1, 5)\n\n[1] \"hello\" \"hello\"\n\nhh &lt;- substr(c(hw, hw), 1, 5)\n\n\n# especially nice for maths stuff\n# logic\nc(4,3,7,55) * 2\n\n[1]   8   6  14 110\n\nc(4,3,7,55) &gt; 10\n\n[1] FALSE FALSE FALSE  TRUE\n\n\n\n# indexing\n# range operator\nhh[1]\n\n[1] \"hello\"\n\nc(\"this\", \"is\", \"another\", \"indexing\", \"example\")[3]\n\n[1] \"another\"\n\nc(\"this\", \"is\", \"another\", \"indexing\", \"example\")[3:4]\n\n[1] \"another\"  \"indexing\"\n\n\n\n#length\n# typeof\nlength(hh)\n\n[1] 2\n\ntypeof(hh)\n\n[1] \"character\""
  },
  {
    "objectID": "r_training/r_from_scratch.html#data-types-and-classes",
    "href": "r_training/r_from_scratch.html#data-types-and-classes",
    "title": "R from scratch",
    "section": "data types and classes",
    "text": "data types and classes\n\n# vectors\n# homogenous - only one kind of thing per vector\ntypeof(\"this is a string\")\n\n[1] \"character\"\n\ntypeof(1L)\n\n[1] \"integer\"\n\ntypeof(1)\n\n[1] \"double\"\n\ntypeof(TRUE)\n\n[1] \"logical\"\n\n\n\n# factors - the odd one\n# mainly a way of storing categorical data, especially when you need it in non-alphabetical order\nfactor(c(\"thing\", \"string\", \"wing\", \"bling\")) # alphabetical\n\n[1] thing  string wing   bling \nLevels: bling string thing wing\n\ning_things &lt;- factor(c(\"thing\", \"string\", \"wing\", \"bling\"), levels = c(\"wing\", \"bling\", \"string\", \"thing\")) # alphabetical\ning_things\n\n[1] thing  string wing   bling \nLevels: wing bling string thing\n\ning_things[2]\n\n[1] string\nLevels: wing bling string thing\n\n\n\n# the list = a vector of vectors\n# ragged - can store different kinds of values together\nlist(hh, hi, hw, ing_things)\n\n[[1]]\n[1] \"hello\" \"hello\"\n\n[[2]]\n[1] \"hello\"\n\n[[3]]\n[1] \"hello world\"\n\n[[4]]\n[1] thing  string wing   bling \nLevels: wing bling string thing\n\n# names\nnamed_list &lt;- list(\"hw\" = hh, \n                   \"hi\" = hi, \n                   \"hw\" = hw, \n                   \"silly_name\" = ing_things)\nnamed_list\n\n$hw\n[1] \"hello\" \"hello\"\n\n$hi\n[1] \"hello\"\n\n$hw\n[1] \"hello world\"\n\n$silly_name\n[1] thing  string wing   bling \nLevels: wing bling string thing\n\n\n\n# different indexing required for lists\nclass(named_list[4]) #gets you a smaller list\n\n[1] \"list\"\n\n# two easy ways of getting vectors out of lists\nnamed_list$silly_name\n\n[1] thing  string wing   bling \nLevels: wing bling string thing\n\nnamed_list[[4]]\n\n[1] thing  string wing   bling \nLevels: wing bling string thing\n\n# and you can flatten a list into a vector\nunlist(named_list)\n\n          hw1           hw2            hi            hw   silly_name1 \n      \"hello\"       \"hello\"       \"hello\" \"hello world\"           \"4\" \n  silly_name2   silly_name3   silly_name4 \n          \"3\"           \"1\"           \"2\""
  },
  {
    "objectID": "r_training/r_from_scratch.html#session-1-reminders",
    "href": "r_training/r_from_scratch.html#session-1-reminders",
    "title": "R from scratch",
    "section": "session 1 reminders",
    "text": "session 1 reminders\n\nconsole vs script (Ctrl + ⏎)\nassign values to variables with &lt;-\n\nvectors = simplest R data structure (like an ordered group)\nfunctions = R verbs that:\n\nare case-sensitive, whitespace-insensitive\nhave arguments (roughly = options)\nreturn results\nare usually vectorised (so can be used over all members of a vector)\n\n\n\nmake some play data\n\na &lt;- 2\nnumbers &lt;- c(3,6,5,4,3)\nstring &lt;- \"just a string\"\nlonger_string &lt;- c(\"this\", \"is\", \"a\", \"length\", \"seven\", \"character\", \"vector\")"
  },
  {
    "objectID": "r_training/r_from_scratch.html#core-numeric-operators-and-functions",
    "href": "r_training/r_from_scratch.html#core-numeric-operators-and-functions",
    "title": "R from scratch",
    "section": "core numeric operators and functions",
    "text": "core numeric operators and functions\narithmetic\n\n1 + 3\n\n[1] 4\n\nnumbers * 5 # they're vectorised\n\n[1] 15 30 25 20 15\n\n4 / 3\n\n[1] 1.333333\n\n5 - numbers\n\n[1]  2 -1  0  1  2\n\n8 ^ 0.5\n\n[1] 2.828427\n\n\nrange operator\nThe range operator is an easy way of making integer sequences:\n\n1:4\n\n[1] 1 2 3 4\n\n5:2\n\n[1] 5 4 3 2\n\n\nThere’s always a fancier way too:\n\nseq(1,3,0.2)\n\n [1] 1.0 1.2 1.4 1.6 1.8 2.0 2.2 2.4 2.6 2.8 3.0\n\n\nequals/inequality\nReally important for lots of programming things\n\na &lt;- 2\na == 2\n\n[1] TRUE\n\na &lt; 3\n\n[1] TRUE\n\na &gt;= 2\n\n[1] TRUE\n\na != 2\n\n[1] FALSE\n\nnumbers &gt; 3\n\n[1] FALSE  TRUE  TRUE  TRUE FALSE\n\nnumbers[numbers &gt; 3] # filtering with equalities/inequalities\n\n[1] 6 5 4\n\n\nfancy operator bits\n\n5 %% 3 # remainder / modulo for remainder-after-division\n\n[1] 2\n\n5 %/% 3 # integer division\n\n[1] 1\n\n\ncore numeric functions\nNote that most of these functions are vectorised, but will require you to use c() if you want to supply your values directly (i.e. if you don’t want to make a variable containing your values first). sum() is a rare exception:\n\nsum(1,5,10) # works okay\n\n[1] 16\n\nsum(c(1,5,10)) # but this works fine too, and is easy\n\n[1] 16\n\nmean(c(1,5,10)) # and is the general way you'll need to work if you're supplying values directly to the function\n\n[1] 5.333333\n\n\n\nsqrt(a) # square root\n\n[1] 1.414214\n\nsum(numbers)\n\n[1] 21\n\ncumsum(numbers)\n\n[1]  3  9 14 18 21\n\nsqrt(numbers) # square roots\n\n[1] 1.732051 2.449490 2.236068 2.000000 1.732051\n\nmean(numbers) \n\n[1] 4.2\n\nmedian(numbers)\n\n[1] 4\n\nmin(numbers)\n\n[1] 3\n\nmax(numbers)\n\n[1] 6\n\n\nFor odd reasons, there’s no built-in function to find the statistical mode of some numbers. It can be done, but the code is ugly (and exactly the sort of thing we’d usually avoid in beginner’s sessions). Included here for interest only:\n\n# mode\nas.numeric(names(sort(-table(numbers)))[1])\n\n[1] 3\n\n\nThere are also a few other fairly basic functions that you might find helpful:\n\nsd(numbers) # standard deviation\n\n[1] 1.30384\n\nrange(numbers) # min and max in one\n\n[1] 3 6\n\nsummary(numbers) # good for rapid numeric summaries\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n    3.0     3.0     4.0     4.2     5.0     6.0 \n\ntable(numbers) # good for finding out what you've got in more complicated vectors\n\nnumbers\n3 4 5 6 \n2 1 1 1"
  },
  {
    "objectID": "r_training/r_from_scratch.html#interlude-joining-code-together",
    "href": "r_training/r_from_scratch.html#interlude-joining-code-together",
    "title": "R from scratch",
    "section": "interlude: joining code together",
    "text": "interlude: joining code together\nThere are three main ways of doing this. Traditionally, you’d bracket together several functions, and read from the inside out. Fastest to write, hardest to read and fix:\n\nround(sqrt(c(1,5,10)))\n\n[1] 1 2 3\n\n\nor you can make intervening variables. Messy, but good if you need to be extra careful:\n\nn &lt;- c(1,5,10)\no &lt;- sqrt(n)\np &lt;- round(o)\np\n\n[1] 1 2 3\n\n\nor, probably the best way, pipe the code together. Ctrl + Shift + m will give you a pipe symbol:\n\nc(1,5,10) |&gt;\n  sqrt() |&gt;\n  round()\n\n[1] 1 2 3\n\n\nNote that the pipe method doesn’t automatically save your output. You’ll need to assign with &lt;- to do that:\n\ntemp &lt;- c(1,5,10) |&gt;\n  sqrt() |&gt;\n  round()\n\ntemp\n\n[1] 1 2 3"
  },
  {
    "objectID": "r_training/r_from_scratch.html#basic-string-functions",
    "href": "r_training/r_from_scratch.html#basic-string-functions",
    "title": "R from scratch",
    "section": "basic string functions",
    "text": "basic string functions\n\ntolower(hw)\n\n[1] \"hello world\"\n\ntoupper(hw)\n\n[1] \"HELLO WORLD\"\n\ntolower(longer_string)\n\n[1] \"this\"      \"is\"        \"a\"         \"length\"    \"seven\"     \"character\"\n[7] \"vector\"   \n\ntoupper(longer_string)\n\n[1] \"THIS\"      \"IS\"        \"A\"         \"LENGTH\"    \"SEVEN\"     \"CHARACTER\"\n[7] \"VECTOR\"   \n\npaste(hw, hw)\n\n[1] \"hello world hello world\"\n\npaste(string, \"ed instrument\")\n\n[1] \"just a string ed instrument\"\n\npaste0(\"question \", numbers)\n\n[1] \"question 3\" \"question 6\" \"question 5\" \"question 4\" \"question 3\"\n\nrep(hw, 10)\n\n [1] \"hello world\" \"hello world\" \"hello world\" \"hello world\" \"hello world\"\n [6] \"hello world\" \"hello world\" \"hello world\" \"hello world\" \"hello world\""
  },
  {
    "objectID": "r_training/r_from_scratch.html#a-few-more-interesting-string-functions",
    "href": "r_training/r_from_scratch.html#a-few-more-interesting-string-functions",
    "title": "R from scratch",
    "section": "a few more interesting string functions",
    "text": "a few more interesting string functions\n\nstrsplit(hw, \" \") # split a string into pieces and get a list back\n\n[[1]]\n[1] \"hello\" \"world\"\n\nstrsplit(hw, \" \") |&gt; # split and unlist back to vector\n  unlist()\n\n[1] \"hello\" \"world\"\n\ngrep(\"seven\", longer_string) # tell me where in a vector a search term is found\n\n[1] 5\n\ngrepl(\"seven\", longer_string) # tell me if a vector contains a search term\n\n[1] FALSE FALSE FALSE FALSE  TRUE FALSE FALSE\n\nsort(longer_string) # into alphabetical order\n\n[1] \"a\"         \"character\" \"is\"        \"length\"    \"seven\"     \"this\"     \n[7] \"vector\"   \n\ntable(longer_string) # as with numbers\n\nlonger_string\n        a character        is    length     seven      this    vector \n        1         1         1         1         1         1         1"
  },
  {
    "objectID": "r_training/r_from_scratch.html#write-a-function",
    "href": "r_training/r_from_scratch.html#write-a-function",
    "title": "R from scratch",
    "section": "write a function",
    "text": "write a function\n\n# basic function syntax\n# need to run the definition before calling it\n\nfunction_name &lt;- function(argument){\n  # some code doing something to the argument\n  argument + 4 # the function will return the last value it produces\n}\n\nfunction_name(3)\n\n[1] 7\n\n\n\n# challenge - I'm bored of writing na.rm = TRUE. Could you make mean() automatically ignore the missing values?\n\nnew_mean &lt;- function(x){\n  mean(x, na.rm = TRUE)\n}\n\nnew_mean(c(1,4,2,4,NA))\n\n[1] 2.75\n\n\n\n# arguments and defaults\n# simple function syntax without {}\n\nmulto &lt;- function(n1, n2 = 7) n1 * n2\n\nmulto(3)  \n\n[1] 21\n\nmulto(3, 6)  \n\n[1] 18\n\n\n\n# anonymous function syntax is useful, but way too evil for a beginner's course\n\n(\\(x) x^2)(5)\n\n[1] 25\n\n(\\(x, y) x^y)(5,3)\n\n[1] 125"
  },
  {
    "objectID": "r_training/r_from_scratch.html#write-a-loop",
    "href": "r_training/r_from_scratch.html#write-a-loop",
    "title": "R from scratch",
    "section": "write a loop",
    "text": "write a loop\n\n# basic syntax \nfor(i in 1:5){\n  print(i)\n}\n\n[1] 1\n[1] 2\n[1] 3\n[1] 4\n[1] 5\n\n\n\n# seq_along as a sensible safe way to work with vectors\nfor(i in seq_along(numbers)){ # seq_along converts a vector into sequential integers 1,2,3,4... up to the length of the vector\n  print(i)\n}\n\n[1] 1\n[1] 2\n[1] 3\n[1] 4\n[1] 5\n\n\n\n# indexing is the key to working with vectors inside loops\nfor(i in seq_along(numbers)){\n  print(numbers[i]) # with indexing\n}\n\n[1] 3\n[1] 6\n[1] 5\n[1] 4\n[1] 3\n\n\n\n# need to create output first, then collect\n\nloop_output &lt;- vector(mode = \"numeric\", length = length(numbers))\n\nfor(i in seq_along(numbers)){\n  loop_output[i] &lt;- numbers[i] * 9 # insert each bit of output into the right place in the output vector\n}\n\nloop_output\n\n[1] 27 54 45 36 27"
  },
  {
    "objectID": "r_training/r_from_scratch.html#write-an-ifelse",
    "href": "r_training/r_from_scratch.html#write-an-ifelse",
    "title": "R from scratch",
    "section": "write an if/else",
    "text": "write an if/else\n\n# basic syntax\na &lt;- 3\n\nif(a == 3){\n  \"a is three\"\n} else {\n  \"nope\"\n}\n\n[1] \"a is three\"\n\n\n\n# even easier if your condition is logical\nc &lt;- TRUE\n\nif(c){\n  \"c is true\"\n} else {\n  \"nope\"\n}\n\n[1] \"c is true\"\n\n\n\n# combine conditions\nb &lt;- 2\n\nif(a == 3 | b == 3){\n  \"a and/or b are three\"\n} else {\n  \"nope\"\n}\n\n[1] \"a and/or b are three\"\n\nif(a == 3 & b == 3){\n  \"a and/or b are three\"\n} else {\n  \"nope\"\n}\n\n[1] \"nope\"\n\n\n\nd &lt;- c(4,3)\n\nif(d == 3){\n  \"if/else isn't vectorised\"\n} else {\n  \"so this won't work\"\n}\n\n\n# use the ifelse type if you need vectorised if/else\nd &lt;- c(4,3)\n\nifelse(d == 3, \"...and we'll get this one second\", \"the first item is false, so we'll get this first\")\n\n[1] \"the first item is false, so we'll get this first\"\n[2] \"...and we'll get this one second\""
  },
  {
    "objectID": "r_training/r_from_scratch.html#penguins",
    "href": "r_training/r_from_scratch.html#penguins",
    "title": "R from scratch",
    "section": "penguins",
    "text": "penguins\nWe need to install packages before we can use them. That only needs to be done once for your R setup. To illustrate, let’s install a package, called palmerpenguins, which contains some interesting data:\n\ninstall.packages(\"palmerpenguins\")\n\nOnce that package is installed, we can use the data (and functions) it contains by attaching them to our current script:\n\nlibrary(palmerpenguins)\n\nOnce we’ve done that, we’ll have several new items available to use. The most important here is the main penguins dataset:\n\npenguins\n\n# A tibble: 344 × 8\n   species island    bill_length_mm bill_depth_mm flipper_length_mm body_mass_g\n   &lt;fct&gt;   &lt;fct&gt;              &lt;dbl&gt;         &lt;dbl&gt;             &lt;int&gt;       &lt;int&gt;\n 1 Adelie  Torgersen           39.1          18.7               181        3750\n 2 Adelie  Torgersen           39.5          17.4               186        3800\n 3 Adelie  Torgersen           40.3          18                 195        3250\n 4 Adelie  Torgersen           NA            NA                  NA          NA\n 5 Adelie  Torgersen           36.7          19.3               193        3450\n 6 Adelie  Torgersen           39.3          20.6               190        3650\n 7 Adelie  Torgersen           38.9          17.8               181        3625\n 8 Adelie  Torgersen           39.2          19.6               195        4675\n 9 Adelie  Torgersen           34.1          18.1               193        3475\n10 Adelie  Torgersen           42            20.2               190        4250\n# ℹ 334 more rows\n# ℹ 2 more variables: sex &lt;fct&gt;, year &lt;int&gt;\n\n\nThat’s tabular data - so formed into rows and columns, rectangular (so all columns the same lengths etc), and with each column containing only one type of data. Tabular data is probably the most widely used type of data in R. That means that there are lots of tools for working with it. Some basic examples:\n\nnrow(penguins)\n\n[1] 344\n\nncol(penguins)\n\n[1] 8\n\nhead(penguins)\n\n# A tibble: 6 × 8\n  species island    bill_length_mm bill_depth_mm flipper_length_mm body_mass_g\n  &lt;fct&gt;   &lt;fct&gt;              &lt;dbl&gt;         &lt;dbl&gt;             &lt;int&gt;       &lt;int&gt;\n1 Adelie  Torgersen           39.1          18.7               181        3750\n2 Adelie  Torgersen           39.5          17.4               186        3800\n3 Adelie  Torgersen           40.3          18                 195        3250\n4 Adelie  Torgersen           NA            NA                  NA          NA\n5 Adelie  Torgersen           36.7          19.3               193        3450\n6 Adelie  Torgersen           39.3          20.6               190        3650\n# ℹ 2 more variables: sex &lt;fct&gt;, year &lt;int&gt;\n\nnames(penguins)\n\n[1] \"species\"           \"island\"            \"bill_length_mm\"   \n[4] \"bill_depth_mm\"     \"flipper_length_mm\" \"body_mass_g\"      \n[7] \"sex\"               \"year\""
  },
  {
    "objectID": "r_training/r_from_scratch.html#dplyr",
    "href": "r_training/r_from_scratch.html#dplyr",
    "title": "R from scratch",
    "section": "dplyr",
    "text": "dplyr\nAs well as those base-R functions, there are also many packages for working with tabular data. Probably the best-known package is dplyr, which we install and attach in the same way as palmerpenguins:\n\ninstall.packages(\"dplyr\")\n\n\nlibrary(dplyr)\n\nThe reason that dplyr is so popular is that some of the base-R ways of working with tabular data are a bit messy and hard to read:\n\npenguins$species[1:4] # just to show the first few\n\n[1] Adelie Adelie Adelie Adelie\nLevels: Adelie Chinstrap Gentoo\n\npenguins[[\"island\"]][1:4] # just the first few, again\n\n[1] Torgersen Torgersen Torgersen Torgersen\nLevels: Biscoe Dream Torgersen\n\n\ndplyr generally produces much easier-to-read code, especially when using the pipe to bring together lines of code:\n\npenguins |&gt;\n  select(island) # pick out a column by providing a column name\n\n# A tibble: 344 × 1\n   island   \n   &lt;fct&gt;    \n 1 Torgersen\n 2 Torgersen\n 3 Torgersen\n 4 Torgersen\n 5 Torgersen\n 6 Torgersen\n 7 Torgersen\n 8 Torgersen\n 9 Torgersen\n10 Torgersen\n# ℹ 334 more rows\n\npenguins |&gt;\n  select(-island) # remove a column\n\n# A tibble: 344 × 7\n   species bill_length_mm bill_depth_mm flipper_length_mm body_mass_g sex   \n   &lt;fct&gt;            &lt;dbl&gt;         &lt;dbl&gt;             &lt;int&gt;       &lt;int&gt; &lt;fct&gt; \n 1 Adelie            39.1          18.7               181        3750 male  \n 2 Adelie            39.5          17.4               186        3800 female\n 3 Adelie            40.3          18                 195        3250 female\n 4 Adelie            NA            NA                  NA          NA &lt;NA&gt;  \n 5 Adelie            36.7          19.3               193        3450 female\n 6 Adelie            39.3          20.6               190        3650 male  \n 7 Adelie            38.9          17.8               181        3625 female\n 8 Adelie            39.2          19.6               195        4675 male  \n 9 Adelie            34.1          18.1               193        3475 &lt;NA&gt;  \n10 Adelie            42            20.2               190        4250 &lt;NA&gt;  \n# ℹ 334 more rows\n# ℹ 1 more variable: year &lt;int&gt;\n\npenguins |&gt;\n  select(species, flipper_length_mm, island) # select and re-order columns\n\n# A tibble: 344 × 3\n   species flipper_length_mm island   \n   &lt;fct&gt;               &lt;int&gt; &lt;fct&gt;    \n 1 Adelie                181 Torgersen\n 2 Adelie                186 Torgersen\n 3 Adelie                195 Torgersen\n 4 Adelie                 NA Torgersen\n 5 Adelie                193 Torgersen\n 6 Adelie                190 Torgersen\n 7 Adelie                181 Torgersen\n 8 Adelie                195 Torgersen\n 9 Adelie                193 Torgersen\n10 Adelie                190 Torgersen\n# ℹ 334 more rows\n\npenguins |&gt;\n  select(home_island = island) # select and rename\n\n# A tibble: 344 × 1\n   home_island\n   &lt;fct&gt;      \n 1 Torgersen  \n 2 Torgersen  \n 3 Torgersen  \n 4 Torgersen  \n 5 Torgersen  \n 6 Torgersen  \n 7 Torgersen  \n 8 Torgersen  \n 9 Torgersen  \n10 Torgersen  \n# ℹ 334 more rows\n\n\nA note here: the penguins object that we’re working with is technically called a tibble. dplyr is specifically adapted to work with tibbles, and many of the functions won’t work properly on other kinds of data structure. The main idea underlying dplyr is that the many functions it contains should all work consistently, and work well together. So once you’ve got the hang of select there’s not much new to say about filter, which picks rows based on their values:\n\npenguins |&gt;\n  filter(species == \"Adelie\") # find some rows about Adelie penguins\n\n# A tibble: 152 × 8\n   species island    bill_length_mm bill_depth_mm flipper_length_mm body_mass_g\n   &lt;fct&gt;   &lt;fct&gt;              &lt;dbl&gt;         &lt;dbl&gt;             &lt;int&gt;       &lt;int&gt;\n 1 Adelie  Torgersen           39.1          18.7               181        3750\n 2 Adelie  Torgersen           39.5          17.4               186        3800\n 3 Adelie  Torgersen           40.3          18                 195        3250\n 4 Adelie  Torgersen           NA            NA                  NA          NA\n 5 Adelie  Torgersen           36.7          19.3               193        3450\n 6 Adelie  Torgersen           39.3          20.6               190        3650\n 7 Adelie  Torgersen           38.9          17.8               181        3625\n 8 Adelie  Torgersen           39.2          19.6               195        4675\n 9 Adelie  Torgersen           34.1          18.1               193        3475\n10 Adelie  Torgersen           42            20.2               190        4250\n# ℹ 142 more rows\n# ℹ 2 more variables: sex &lt;fct&gt;, year &lt;int&gt;\n\npenguins |&gt;\n  filter(bill_length_mm &gt; 55) # find the big bills\n\n# A tibble: 5 × 8\n  species   island bill_length_mm bill_depth_mm flipper_length_mm body_mass_g\n  &lt;fct&gt;     &lt;fct&gt;           &lt;dbl&gt;         &lt;dbl&gt;             &lt;int&gt;       &lt;int&gt;\n1 Gentoo    Biscoe           59.6          17                 230        6050\n2 Gentoo    Biscoe           55.9          17                 228        5600\n3 Gentoo    Biscoe           55.1          16                 230        5850\n4 Chinstrap Dream            58            17.8               181        3700\n5 Chinstrap Dream            55.8          19.8               207        4000\n# ℹ 2 more variables: sex &lt;fct&gt;, year &lt;int&gt;\n\npenguins |&gt;\n  filter(is.na(bill_length_mm)) # find missing data\n\n# A tibble: 2 × 8\n  species island    bill_length_mm bill_depth_mm flipper_length_mm body_mass_g\n  &lt;fct&gt;   &lt;fct&gt;              &lt;dbl&gt;         &lt;dbl&gt;             &lt;int&gt;       &lt;int&gt;\n1 Adelie  Torgersen             NA            NA                NA          NA\n2 Gentoo  Biscoe                NA            NA                NA          NA\n# ℹ 2 more variables: sex &lt;fct&gt;, year &lt;int&gt;\n\n\nAnd mutate - which makes new columns - will work in the same way:\n\npenguins |&gt;\n  mutate(new_col = 11) |&gt; # every row the same\n  select(species, new_col) # so that we can see the new values in the preview\n\n# A tibble: 344 × 2\n   species new_col\n   &lt;fct&gt;     &lt;dbl&gt;\n 1 Adelie       11\n 2 Adelie       11\n 3 Adelie       11\n 4 Adelie       11\n 5 Adelie       11\n 6 Adelie       11\n 7 Adelie       11\n 8 Adelie       11\n 9 Adelie       11\n10 Adelie       11\n# ℹ 334 more rows\n\npenguins |&gt;\n  mutate(bill_vol = bill_length_mm * bill_depth_mm^2) |&gt; # some calculation\n  select(species, bill_vol)\n\n# A tibble: 344 × 2\n   species bill_vol\n   &lt;fct&gt;      &lt;dbl&gt;\n 1 Adelie    13673.\n 2 Adelie    11959.\n 3 Adelie    13057.\n 4 Adelie       NA \n 5 Adelie    13670.\n 6 Adelie    16677.\n 7 Adelie    12325.\n 8 Adelie    15059.\n 9 Adelie    11172.\n10 Adelie    17138.\n# ℹ 334 more rows\n\npenguins |&gt;\n  mutate(label = paste(\"From\", island, \"island, a penguin of the species\", species)) |&gt;\n  select(label, body_mass_g) # mutate and then select. You can use your new columns immediately.\n\n# A tibble: 344 × 2\n   label                                                  body_mass_g\n   &lt;chr&gt;                                                        &lt;int&gt;\n 1 From Torgersen island, a penguin of the species Adelie        3750\n 2 From Torgersen island, a penguin of the species Adelie        3800\n 3 From Torgersen island, a penguin of the species Adelie        3250\n 4 From Torgersen island, a penguin of the species Adelie          NA\n 5 From Torgersen island, a penguin of the species Adelie        3450\n 6 From Torgersen island, a penguin of the species Adelie        3650\n 7 From Torgersen island, a penguin of the species Adelie        3625\n 8 From Torgersen island, a penguin of the species Adelie        4675\n 9 From Torgersen island, a penguin of the species Adelie        3475\n10 From Torgersen island, a penguin of the species Adelie        4250\n# ℹ 334 more rows\n\n\nAs before, we need to assign with &lt;- to save our changes. Let’s add the bill_vol column to the data now\n\npenguins_vol &lt;- penguins |&gt;\n  mutate(bill_vol = bill_length_mm * bill_depth_mm^2)\n\narrange sorts columns:\n\npenguins_vol |&gt;\n  arrange(bill_vol)\n\n# A tibble: 344 × 9\n   species island bill_length_mm bill_depth_mm flipper_length_mm body_mass_g\n   &lt;fct&gt;   &lt;fct&gt;           &lt;dbl&gt;         &lt;dbl&gt;             &lt;int&gt;       &lt;int&gt;\n 1 Gentoo  Biscoe           42.9          13.1               215        5000\n 2 Gentoo  Biscoe           42            13.5               210        4150\n 3 Gentoo  Biscoe           40.9          13.7               214        4650\n 4 Adelie  Dream            32.1          15.5               188        3050\n 5 Gentoo  Biscoe           43.3          13.4               209        4400\n 6 Gentoo  Biscoe           44.9          13.3               213        5100\n 7 Gentoo  Biscoe           42.6          13.7               213        4950\n 8 Gentoo  Biscoe           42.7          13.7               208        3950\n 9 Gentoo  Biscoe           46.1          13.2               211        4500\n10 Gentoo  Biscoe           44            13.6               208        4350\n# ℹ 334 more rows\n# ℹ 3 more variables: sex &lt;fct&gt;, year &lt;int&gt;, bill_vol &lt;dbl&gt;\n\n\nThe nice thing about dplyr is that there are several other packages which work in similar ways. This package ecosystem gets called the tidyverse, and is extremely widely used to do data science work in R. A close relative of dplyr is the readr package, which reads in data to R and makes it into tibbles:\n\ninstall.packages(\"readr\")\n\n\nlibrary(readr)\n\npenguins_raw &lt;- read_csv(\"https://raw.githubusercontent.com/allisonhorst/palmerpenguins/main/inst/extdata/penguins_raw.csv\")"
  },
  {
    "objectID": "r_training/r_from_scratch.html#saving-plots",
    "href": "r_training/r_from_scratch.html#saving-plots",
    "title": "R from scratch",
    "section": "Saving plots",
    "text": "Saving plots\nYou can save and recall ggplot objects like anything else in R:\n\npeng_plot &lt;- penguins |&gt;\n  ggplot(aes(x = bill_length_mm, y = bill_depth_mm, colour = species, shape = species)) +\n  geom_point()\n\n\npeng_plot\n\n\n\n\n\n\n\nggplot objects are lists:\n\nclass(peng_plot)\n\n[1] \"gg\"     \"ggplot\"\n\ntypeof(peng_plot)\n\n[1] \"list\"\n\n\nInterestingly, the plot object contains the full data used to build the plot:\n\npeng_plot$data # your original data\n\n# A tibble: 344 × 8\n   species island    bill_length_mm bill_depth_mm flipper_length_mm body_mass_g\n   &lt;fct&gt;   &lt;fct&gt;              &lt;dbl&gt;         &lt;dbl&gt;             &lt;int&gt;       &lt;int&gt;\n 1 Adelie  Torgersen           39.1          18.7               181        3750\n 2 Adelie  Torgersen           39.5          17.4               186        3800\n 3 Adelie  Torgersen           40.3          18                 195        3250\n 4 Adelie  Torgersen           NA            NA                  NA          NA\n 5 Adelie  Torgersen           36.7          19.3               193        3450\n 6 Adelie  Torgersen           39.3          20.6               190        3650\n 7 Adelie  Torgersen           38.9          17.8               181        3625\n 8 Adelie  Torgersen           39.2          19.6               195        4675\n 9 Adelie  Torgersen           34.1          18.1               193        3475\n10 Adelie  Torgersen           42            20.2               190        4250\n# ℹ 334 more rows\n# ℹ 2 more variables: sex &lt;fct&gt;, year &lt;int&gt;\n\n\nIt’s possible, although highly non-advisible, to fiddle with the ggplot object by assigning into it:\n\npeng_plot$labels$x &lt;- \"huley booley\" \npeng_plot\n\n\n\n\n\n\n\n\npeng_plot$labels$x &lt;- \"bill_length_mm\" # restoring order\n\nThe reason this is interesting and useful is that you can take a saved ggplot, and add extra layers to it:\n\npeng_plot +\n  geom_smooth() # add extra layers to the saved object"
  },
  {
    "objectID": "r_training/r_from_scratch.html#styling-plots",
    "href": "r_training/r_from_scratch.html#styling-plots",
    "title": "R from scratch",
    "section": "Styling plots",
    "text": "Styling plots\nStyling happens in layers too. Start with labelling, where there are several different possible options:\n\npeng_plot +\n  ggtitle(\"A title using ggtitle\") # good if you're only adding a title\n\n\n\n\n\n\npeng_plot +\n  xlab(\"Bill length (mm), set using xlab\") # or if you just want to tweak the x-axis label\n\n\n\n\n\n\npeng_plot +\n  labs(x = \"Bill length (mm), set using labs\")\n\n\n\n\n\n\npeng_plot +\n    labs(title = \"An uninformative title\") # better if you're doing lots of labelling\n\n\n\n\n\n\npeng_plot +\n    labs(title = \"An uninformative title\",\n       x = \"Something about Bill Lengths\",\n       subtitle = \"This one here is a subtitle\") \n\n\n\n\n\n\n\nYou can also theme the entire plot:\n\npeng_plot +\n  theme_minimal()\n\n\n\n\n\n\npeng_plot +\n  theme_classic()\n\n\n\n\n\n\n\nEach element can be styled individually. That can become very involved, but some simple and useful examples:\n\npeng_plot +\n  theme_classic(base_size = 18) # embiggen the text\n\n\n\n\n\n\npeng_plot +\n  theme_classic() +\n  theme(legend.position = \"none\") # hide the legend\n\n\n\n\n\n\n\nCustomising the plot colours can be done in several ways. For very simple cases, it might be enough to specify a vector of colour names or hex values, which you can then use inside either scale_fill_manual or scale_colour_manual:\n\nmy_colours &lt;- c(\"#e66101\", \"#b2abd2\", \"#5e3c99\")\n\npeng_plot +\n  scale_colour_manual(values = my_colours) # use scale_colour_manual for geoms that take a colour aesthetic\n\n\n\n\n\n\n# if you're using a geom that takes a fill, use scale_fill_manual:\n\npenguins |&gt;\n  ggplot() +\n  geom_col(aes(x = species, y = bill_length_mm, fill = species)) +\n  scale_fill_manual(values = my_colours)\n\n\n\n\n\n\n\nManually specifying colours is hard, particularly as you should be considering the likely impacts on accessibility that can result. A stronger general approach is to use colorbrewer to do the hard work for you:\n\npeng_plot +\n  scale_colour_brewer(palette = \"Dark2\")\n\n\n\n\n\n\npeng_plot +\n  scale_colour_brewer(palette = \"Paired\")\n\n\n\n\n\n\n\nYou can also borrow entire themes from packages, such as ggthemes:\n\n# install.packages(\"ggthemes\")\nlibrary(ggthemes)\npeng_plot +\n  theme_economist() +\n  scale_colour_economist()"
  },
  {
    "objectID": "r_training/r_from_scratch.html#data-for-plots",
    "href": "r_training/r_from_scratch.html#data-for-plots",
    "title": "R from scratch",
    "section": "Data for plots",
    "text": "Data for plots\nA final thought: if your ggplot code is becoming very complicated, the usual first check is to see if you can re-work your data to make it easier to plot. A good example is transforming wide data to long-form to simplify aes calls:\n\n# install.packages(\"tidyr\")\n# install.packages(\"tibble\")\nlibrary(tidyr)\nlibrary(tibble)\n\nlong_cars &lt;- mtcars |&gt;\n  select(qsec,drat, disp, hp) |&gt;\n  rownames_to_column() |&gt;\n  pivot_longer(-rowname)\n\nlong_cars |&gt;\n  ggplot() +\n  geom_histogram(aes(x = value, fill = name), bins = 5) \n\n\n\n\n\n\nlong_cars |&gt;\n  ggplot() +\n  geom_histogram(aes(x = value, fill = name), bins = 5) +\n  facet_wrap(~name, ncol = 1, scales = \"free\") # this can be split into small multiples"
  },
  {
    "objectID": "r_training/r_from_scratch.html#formattingrefactoringtidying-code",
    "href": "r_training/r_from_scratch.html#formattingrefactoringtidying-code",
    "title": "R from scratch",
    "section": "Formatting/refactoring/tidying code",
    "text": "Formatting/refactoring/tidying code\nYou’ll often need to rework code as you write it. You can think of this similar to the process of drafting, and then editing, and then proof-reading text. There’s lots to say about this subject, so we’ll stick to a few beginner tips here. But you might also like to look at the set of R community standards produced by the KIND network:\nUse source()\n\nsource() allows you to split up long R scripts. If you put some code in a file called somescript.R, you can then include that code in another script by writing: source(somescript.R). It’s as if you’d pasted the code in, but without the bulk and confusion that can cause.\nPick a structure and stick to it\nFor example, you might go with something like:\n\nscript information at the very top\nthen package loading\nthen data loading\nthen function definitions\n…\nMake your variable names sensible (and hierarchical)\nSo if you’re working with a set of data about GP practices named practices, you might create several derivative variables which would most sensibly be named:\n\npractices_count\npractices_count_grouped\npractices_largest\n…\nAdd comments and sections\n\n# all the code here has been full of comments. Write comments!\n\nFind ways of automating the routine stuff\nThree packages to know about to help manage your code: formatR, styler, and lintr"
  },
  {
    "objectID": "r_training/r_from_scratch.html#use-projects",
    "href": "r_training/r_from_scratch.html#use-projects",
    "title": "R from scratch",
    "section": "Use projects",
    "text": "Use projects\nYou should work in projects. That’s easy to do in Posit Cloud as everything is a project. R projects help keep you organised, and prevent you having to do lots of messy and fallible work in setting working directories, supplying file paths, and wrestling with scripts when you move them.\nR thinks about a working directory, which is where it is based at the time it’s running. You can use the getwd() and setwd() to find out, or change, your working directory. But those are better avoided. If you’re working in a project, the project root is your working directory.\nProjects allow you to use relative paths with confidence - so \"data/data.csv\" describes a file named data.csv that lives in the data subdirectory of your project. Managing full paths is a nuisance in R, especially if you’re on Windows. R doesn’t like Windows file paths as they include back slashes \\. For example:C:\\my_drive\\my_code\\R_code\\data\\data.csv. If we want to use that path in R, you’ll need to tweak it to deal with the back slashes. You can either double them:C:\\\\my_drive\\\\my_code\\\\R_code\\\\data\\\\data.csv or replace them with forward slashes /: C:/my_drive/my_code/R_code/data/data.csv.\nBut definitely better to avoid full paths if at all possible. Projects make scripts portable by allowing you to ignore details specific to your computer that are hard-coded into paths etc etc. Sharing code is a key advantage of R, and you should make that as easy and fun as possible"
  },
  {
    "objectID": "r_training/r_from_scratch.html#error-messages",
    "href": "r_training/r_from_scratch.html#error-messages",
    "title": "R from scratch",
    "section": "Error messages",
    "text": "Error messages\nSome error messages - mainly those from newer functions - are nice and informative, and can even suggest ways of resolving the problem:\n\ntry(1 + \"two\")\n\nError in 1 + \"two\" : non-numeric argument to binary operator\n\ntry(readr::read_csv(\"nope.csv\"))\n\nError : 'nope.csv' does not exist in current working directory ('/home/runner/work/KIND-training/KIND-training/r_training').\n\ntry(penguins |&gt; ggplot() |&gt; geom_density(aes(y = flipper_length_mm)))\n\nError in geom_density(ggplot(penguins), aes(y = flipper_length_mm)) : \n  `mapping` must be created by `aes()`.\nℹ Did you use `%&gt;%` or `|&gt;` instead of `+`?\n\ntry(log(-1))\n\n[1] NaN\n\n\nOthers are unfortunately a bit more opaque:\n\n#\ntry(na_numbers[10,]) # vectors are, I suppose, 1-dimensional\n\nError in eval(expr, envir) : object 'na_numbers' not found\n\ntry(Sum(3,4,5)) # remember the capitals\n\nError in Sum(3, 4, 5) : could not find function \"Sum\"\n\n\nBut the worst are the non-error errors - e.g. where the code won’t even run well enough to have an error. A nice example is when your console is showing an +, rather than a &gt;, which means means that R is waiting for input, and usually means there’s a missing bracket somewhere.\nAnother one to watch out for: there are a couple of different filter functions. If a filter isn’t working well, it’s always worth specifying which filter you want with dplyr::filter (or much more rarely stats::filter),"
  },
  {
    "objectID": "r_training/r_from_scratch.html#how-to-read-data-into-and-out-of-excel-pdf-word-etc",
    "href": "r_training/r_from_scratch.html#how-to-read-data-into-and-out-of-excel-pdf-word-etc",
    "title": "R from scratch",
    "section": "How to read data into, and out of, Excel, pdf, Word, etc…",
    "text": "How to read data into, and out of, Excel, pdf, Word, etc…\nThere are a couple of different areas to think about here. Reading data to and from Excel is the most straightforward:\n\n# install.packages(\"readxl\")\nlibrary(readxl)\n# install.packages(\"readr\")\nlibrary(readr)\nlibrary(dplyr)\n\nread_xlsx(\"data/my_dat.xlsx\") # to read data in from Excel\n\n# A tibble: 5 × 2\n  name      values\n  &lt;chr&gt;      &lt;dbl&gt;\n1 Elizabeth      8\n2 Lorah          7\n3 Eilish        10\n4 Colin          6\n5 Robert         1\n\nread_csv(\"data/my_dat.csv\") |&gt;\n  mutate(total = value1 + value2) |&gt;\n  write_csv(\"data/my_output_dat.csv\") # to write data back to csv, which can be opened in Excel\n\nYou can also scale this up to read several files at once:\n\nlist.files(\"data/multifile\", full.names = T) |&gt;\n  readr::read_csv()\n\n# A tibble: 20 × 3\n   name      value1 value2\n   &lt;chr&gt;      &lt;dbl&gt;  &lt;dbl&gt;\n 1 Elizabeth      8      7\n 2 Lorah          7      5\n 3 Eilish        10      7\n 4 Colin          6     41\n 5 Robert         1     99\n 6 Elizabeth      8      7\n 7 Lorah          7      5\n 8 Eilish        10      7\n 9 Colin          6      4\n10 Robert         1     99\n11 Elizabeth      8      7\n12 Lorah          7      5\n13 Eilish        10      7\n14 Colin          6      4\n15 Robert         1     99\n16 Elizabeth      8      7\n17 Lorah          7      5\n18 Eilish        10      7\n19 Colin          6      4\n20 Robert         1     99\n\n\nOr use a pattern option to only read some files:\n\nlist.files(\"data/\", \n           full.names = T, \n           pattern = \"my_\",\n           recursive = T)\n\n[1] \"data//multifile/my_dat - v1.csv\" \"data//multifile/my_dat - v2.csv\"\n[3] \"data//multifile/my_dat - v3.csv\" \"data//multifile/my_dat - v4.csv\"\n[5] \"data//my_dat.csv\"                \"data//my_dat.xlsx\"              \n[7] \"data//my_output_dat.csv\"        \n\n\nWriting back to a proper .xlsx file is much more involved. A good place to start would be the openxlsx package, although note that this can become quite involved pretty easily. Excel files are surprisingly complicated…\nSimilarly, if you need to read/write Word documents, you’re going to need some packages. For Word, docxtractr (as the name suggests) is helpful for extracting data, while flextable can be used to help write to docx:\n\n# install.packages(\"docxtractr\")\n# install.packages(\"flextable\")\n\nlibrary(docxtractr)\nlibrary(flextable)\n\nmtcars |&gt;\n  flextable() |&gt;\n  save_as_docx(path = \"data/word.docx\") # to write some data\n\n\n\nData in Word\n\nWe can then read this data back to show how extraction might work:\n\nmtcars_from_word &lt;- docxtractr::read_docx(\"data/word.docx\")\n\nBut, unlike Excel, we need to do some additional work to extract our data. docxtractr has identified a table, so we can convert that back into a tibble to get at its contents:\n\nmtcars_from_word |&gt;\n  docxtractr::docx_extract_tbl() |&gt;\n  knitr::kable()\n\n\n\nmpg\ncyl\ndisp\nhp\ndrat\nwt\nqsec\nvs\nam\ngear\ncarb\n\n\n\n21.0\n6\n160.0\n110\n3.90\n2.620\n16.46\n0\n1\n4\n4\n\n\n21.0\n6\n160.0\n110\n3.90\n2.875\n17.02\n0\n1\n4\n4\n\n\n22.8\n4\n108.0\n93\n3.85\n2.320\n18.61\n1\n1\n4\n1\n\n\n21.4\n6\n258.0\n110\n3.08\n3.215\n19.44\n1\n0\n3\n1\n\n\n18.7\n8\n360.0\n175\n3.15\n3.440\n17.02\n0\n0\n3\n2\n\n\n18.1\n6\n225.0\n105\n2.76\n3.460\n20.22\n1\n0\n3\n1\n\n\n14.3\n8\n360.0\n245\n3.21\n3.570\n15.84\n0\n0\n3\n4\n\n\n24.4\n4\n146.7\n62\n3.69\n3.190\n20.00\n1\n0\n4\n2\n\n\n22.8\n4\n140.8\n95\n3.92\n3.150\n22.90\n1\n0\n4\n2\n\n\n19.2\n6\n167.6\n123\n3.92\n3.440\n18.30\n1\n0\n4\n4\n\n\n17.8\n6\n167.6\n123\n3.92\n3.440\n18.90\n1\n0\n4\n4\n\n\n16.4\n8\n275.8\n180\n3.07\n4.070\n17.40\n0\n0\n3\n3\n\n\n17.3\n8\n275.8\n180\n3.07\n3.730\n17.60\n0\n0\n3\n3\n\n\n15.2\n8\n275.8\n180\n3.07\n3.780\n18.00\n0\n0\n3\n3\n\n\n10.4\n8\n472.0\n205\n2.93\n5.250\n17.98\n0\n0\n3\n4\n\n\n10.4\n8\n460.0\n215\n3.00\n5.424\n17.82\n0\n0\n3\n4\n\n\n14.7\n8\n440.0\n230\n3.23\n5.345\n17.42\n0\n0\n3\n4\n\n\n32.4\n4\n78.7\n66\n4.08\n2.200\n19.47\n1\n1\n4\n1\n\n\n30.4\n4\n75.7\n52\n4.93\n1.615\n18.52\n1\n1\n4\n2\n\n\n33.9\n4\n71.1\n65\n4.22\n1.835\n19.90\n1\n1\n4\n1\n\n\n21.5\n4\n120.1\n97\n3.70\n2.465\n20.01\n1\n0\n3\n1\n\n\n15.5\n8\n318.0\n150\n2.76\n3.520\n16.87\n0\n0\n3\n2\n\n\n15.2\n8\n304.0\n150\n3.15\n3.435\n17.30\n0\n0\n3\n2\n\n\n13.3\n8\n350.0\n245\n3.73\n3.840\n15.41\n0\n0\n3\n4\n\n\n19.2\n8\n400.0\n175\n3.08\n3.845\n17.05\n0\n0\n3\n2\n\n\n27.3\n4\n79.0\n66\n4.08\n1.935\n18.90\n1\n1\n4\n1\n\n\n26.0\n4\n120.3\n91\n4.43\n2.140\n16.70\n0\n1\n5\n2\n\n\n30.4\n4\n95.1\n113\n3.77\n1.513\n16.90\n1\n1\n5\n2\n\n\n15.8\n8\n351.0\n264\n4.22\n3.170\n14.50\n0\n1\n5\n4\n\n\n19.7\n6\n145.0\n175\n3.62\n2.770\n15.50\n0\n1\n5\n6\n\n\n15.0\n8\n301.0\n335\n3.54\n3.570\n14.60\n0\n1\n5\n8\n\n\n21.4\n4\n121.0\n109\n4.11\n2.780\n18.60\n1\n1\n4\n2\n\n\n\n\n\nReading data from pdf is much more involved, and I’d suggest exploring the pdftools package as a starting point.\nAn alternative strategy if you need to write a lot of Word/pdf documents would be Rmarkdown or Quarto. These enable you to embed R code in a proper document production tool, which is great for writing regular reports."
  },
  {
    "objectID": "r_training/r_from_scratch.html#how-to-read-and-analyze-free-text",
    "href": "r_training/r_from_scratch.html#how-to-read-and-analyze-free-text",
    "title": "R from scratch",
    "section": "How to read and analyze free text?",
    "text": "How to read and analyze free text?\nThere’s a really nice set of tools for text analysis in the tidytext package:\n\n# install.packages(\"tidytext\") # main tidytext package\nlibrary(tidytext)\n#install.packages(\"stopwords\") # to help remove common small words\nlibrary(stopwords)\n# install.packages(\"janeaustenr\") # for some sample text\nlibrary(janeaustenr)\n\nausten_books() |&gt;\n  unnest_tokens(input = text, output = word) |&gt;\n  anti_join(get_stopwords()) |&gt; # remove small common words\n  count(word, sort = T) |&gt;\n  slice_max(n, n = 5)\n\n# A tibble: 5 × 2\n  word      n\n  &lt;chr&gt; &lt;int&gt;\n1 mr     3015\n2 mrs    2446\n3 must   2071\n4 said   2041\n5 much   1935"
  },
  {
    "objectID": "r_training/shiny_from_scratch.html",
    "href": "r_training/shiny_from_scratch.html",
    "title": "Shiny from scratch",
    "section": "",
    "text": "Session materials\n\n\n\n\n\n\nsample Shiny script"
  },
  {
    "objectID": "r_training/shiny_from_scratch.html#welcome",
    "href": "r_training/shiny_from_scratch.html#welcome",
    "title": "Shiny from scratch",
    "section": "Welcome",
    "text": "Welcome\n\nthis is an 🌶🌶 intermediate-level practical session designed for those with prior R experience, but who are new to Shiny\nit’s definitely meant to be a taster session, rather than a comprehensive introduction\nwe’ll concentrate on the Shiny-specific material here, and assume that you’re generally familiar with ordinary R"
  },
  {
    "objectID": "r_training/shiny_from_scratch.html#session-outline",
    "href": "r_training/shiny_from_scratch.html#session-outline",
    "title": "Shiny from scratch",
    "section": "Session outline",
    "text": "Session outline\n\nWhat’s the point of Shiny?\nKey resources\n\"hello world!\"\nAdding R code\nCapturing user input\nThinking about reactivity"
  },
  {
    "objectID": "r_training/shiny_from_scratch.html#whats-the-point-of-shiny",
    "href": "r_training/shiny_from_scratch.html#whats-the-point-of-shiny",
    "title": "Shiny from scratch",
    "section": "What’s the point of Shiny?",
    "text": "What’s the point of Shiny?\n\na way of publishing interactive R code\nhere’s a minimal Shiny dashboard which we’ll build in this session"
  },
  {
    "objectID": "r_training/shiny_from_scratch.html#key-resources",
    "href": "r_training/shiny_from_scratch.html#key-resources",
    "title": "Shiny from scratch",
    "section": "Key resources",
    "text": "Key resources\n\nyou’ll need:\n\nR 4.0+ and Rstudio/posit.cloud/Posit workbench/VSCode\nthe shiny and reactlog packages\nthe Shiny cheatsheet\n\n\nMastering Shiny (very helpful, but optional)"
  },
  {
    "objectID": "r_training/shiny_from_scratch.html#boilerplate-shiny-code",
    "href": "r_training/shiny_from_scratch.html#boilerplate-shiny-code",
    "title": "Shiny from scratch",
    "section": "Boilerplate Shiny code",
    "text": "Boilerplate Shiny code\n\nstart a new R script in an empty project\nsave as app.R (conventional, but helpful)\nstart typing shiny, and select the shinyapp snippet to insert the boilerplate Shiny code"
  },
  {
    "objectID": "r_training/shiny_from_scratch.html#sections",
    "href": "r_training/shiny_from_scratch.html#sections",
    "title": "Shiny from scratch",
    "section": "3 sections",
    "text": "3 sections\n\n\nui, where you’ll build your user interface\n\nserver, where you’ll put the bulk of your R code\n\nshinyApp, which collects the ui and server, and runs your Shiny server"
  },
  {
    "objectID": "r_training/shiny_from_scratch.html#hello-world",
    "href": "r_training/shiny_from_scratch.html#hello-world",
    "title": "Shiny from scratch",
    "section": "\"hello world!\"",
    "text": "\"hello world!\"\n\nnow add \"hello world!\" in the ui\n\n\nCtrl + Shift + Enter to run your code - or use the run app button \n\nthat should start your Shiny app - and you should see “hello world!” in the viewer pane \n\nPress stop  - or hit Esc to stop your app. You’ll need to stop and restart to see changes."
  },
  {
    "objectID": "r_training/shiny_from_scratch.html#adding-r-code",
    "href": "r_training/shiny_from_scratch.html#adding-r-code",
    "title": "Shiny from scratch",
    "section": "Adding R code",
    "text": "Adding R code\n\nnow we’ll add some simple R code to our server. That’s going to do something simple with mtcars:\n\n\nmtcars |&gt;\n  dplyr::group_by(cyl) |&gt;\n  dplyr::summarise(mpg = round(mean(mpg), 2))\n\n# A tibble: 3 × 2\n    cyl   mpg\n  &lt;dbl&gt; &lt;dbl&gt;\n1     4  26.7\n2     6  19.7\n3     8  15.1"
  },
  {
    "objectID": "r_training/shiny_from_scratch.html#rendertable-output-and-tableoutput",
    "href": "r_training/shiny_from_scratch.html#rendertable-output-and-tableoutput",
    "title": "Shiny from scratch",
    "section": "\nrenderTable, output$, and tableOutput\n",
    "text": "renderTable, output$, and tableOutput\n\n\nif we run our Shiny dashboard now, we won’t see any output from this new R code\nwe’ll need to add three new elements to make the code work\n\n\nwrap our mtcars code in the renderTable function in server\n\nassign that renderTable to a variable called output$my_table\n\nfinally, replace your \"hello world!\" in the ui with tableOutput(\"my_table\")\n\n\nYour code should now read:\n\nlibrary(shiny)\n\nui &lt;- fluidPage(\n  tableOutput(\"my_table\")\n)\n\nserver &lt;- function(input, output, session) {\n  output$my_table &lt;- renderTable(mtcars |&gt;\n                dplyr::group_by(cyl) |&gt;\n                dplyr::summarise(mpg = round(mean(mpg), 2)))\n}\n\nshinyApp(ui, server)\n\nRun it (Ctrl + Shift + Enter) and you should see a table of mtcars data in the viewer pane:"
  },
  {
    "objectID": "r_training/shiny_from_scratch.html#whats-going-on-with-renderx-etc",
    "href": "r_training/shiny_from_scratch.html#whats-going-on-with-renderx-etc",
    "title": "Shiny from scratch",
    "section": "What’s going on with renderX etc?",
    "text": "What’s going on with renderX etc?\n\nthere are pairs of functions on the Shiny cheatsheet. Each output type has its own renderX function, which you use in the server to wrap other kinds of output. So renderPlot collects plot/ggplot output etc.\nonce your output has been rendered, you then save it into a list variable called output. Each bit of output needs its own variable name - like output$my_table\nfinally, and again from the Shiny cheatsheet, you extract your data inside the UI from the output$ variable by using an XOutput function that corresponds to your renderX"
  },
  {
    "objectID": "r_training/shiny_from_scratch.html#capturing-user-input",
    "href": "r_training/shiny_from_scratch.html#capturing-user-input",
    "title": "Shiny from scratch",
    "section": "Capturing user input",
    "text": "Capturing user input\n\nwe need to add three elements to capture user input:\n\n\nadd an input widget - like radioButtons() above your tableOutput in the UI. You’ll need to comma-splice that - all your UI contents gets joined with commas\nthen add an input ID to that input widget radioButtons(\"my_input\", \"Which gear to show?\", sort(unique(mtcars$gear)))\n\nfinally, you connect your user input into your code using input$my_input\n\n\n\nui &lt;- fluidPage(\n  radioButtons(\"my_input\", \"Which gear to show?\", sort(unique(mtcars$gear))),\n  tableOutput(\"my_table\")\n)\n\nserver &lt;- function(input, output, session) {\n  output$my_table &lt;- renderTable(mtcars |&gt;\n                dplyr::filter(gear == input$my_input) |&gt;\n                dplyr::group_by(cyl) |&gt;\n                dplyr::summarise(mpg = round(mean(mpg), 2)))\n}"
  },
  {
    "objectID": "r_training/shiny_from_scratch.html#thinking-about-reactivity",
    "href": "r_training/shiny_from_scratch.html#thinking-about-reactivity",
    "title": "Shiny from scratch",
    "section": "Thinking about reactivity",
    "text": "Thinking about reactivity\n\nall this extra work is needed to allow Shiny to run reactive code: code that responds to user input by producing different outputs\nthat’s a big difference from standard, declarative, R code\none helpful tool for understanding reactivity: reactlog"
  },
  {
    "objectID": "r_training/shiny_from_scratch.html#reactlog",
    "href": "r_training/shiny_from_scratch.html#reactlog",
    "title": "Shiny from scratch",
    "section": "Reactlog",
    "text": "Reactlog\n\nrun install.packages(\"reactlog\")\n\nthen add library(reactlog) to the start of your Shiny script to attach the package\nthen follow that with reactlog_enable() to start logging\nnow launch your dashboard, interact with it a couple of times, and then press Ctrl + F3\n\nthat should bring up a new webpage showing you the reactive graph of your Shiny app \n\nconveniently, Mastering Shiny uses the same visual style to explain the reactive graph as reactlog"
  },
  {
    "objectID": "r_training/stringdist.html",
    "href": "r_training/stringdist.html",
    "title": "stringdist",
    "section": "",
    "text": "No feedback found for this session"
  },
  {
    "objectID": "r_training/stringdist.html#introduction",
    "href": "r_training/stringdist.html#introduction",
    "title": "stringdist",
    "section": "Introduction",
    "text": "Introduction\nThis is an introduction to stringdist which is designed to allow fuzzy matching of text. Install and attach in the standard way:\n\n# install.packages(\"stringdist\") # likely needs compiling\nlibrary(stringdist) \nlibrary(ggplot2) # for something fun later\n\nWhile there are several families of functions in the package, we’ll concentrate on those that focus on the core idea: strings differ, and you can quantify those differences for pleasure and profit. A simple example:\n\nstringdist(\"thing\", \"think\")\n\n[1] 1\n\nstringdist(\"thing\", \"string\")\n\n[1] 2\n\nstringdist(\"thing\", \"oxpecker\")\n\n[1] 8\n\n\nOnce you’ve got an idea about how different you’re okay with your strings being, you can use e.g. a max distance as a cut-off to do work in your code. A simple example of implementing this can be found in the amatch function, which is designed to work like a fuzzy matching version of base-R’s match. We’ll use a and b as variable names to keep aligned with the stringdist documentation. Quick refresher on match:\n\na &lt;- \"the\" # take a value\nb &lt;- c(\"this\", \"is\", \"the\", \"thing\") # and a vector of possible values\nmatch(a, b) # match returns the index location of your a in your b\n\n[1] 3\n\n\nMatch lets you do useful work with strings - e.g. remove everything before your key word:\n\nb[match(a, b):length(b)]\n\n[1] \"the\"   \"thing\""
  },
  {
    "objectID": "r_training/stringdist.html#exemplar-amatch",
    "href": "r_training/stringdist.html#exemplar-amatch",
    "title": "stringdist",
    "section": "exemplar: amatch\n",
    "text": "exemplar: amatch\n\nAnd now for the amatch version:\n\na &lt;- \"thee\" # take a value\namatch(a, b, maxDist = 1) # maxDist = allowable number of typos\n\n[1] 3\n\namatch(a, b, maxDist = 10) # where several possible values exist, amatch returns the closest match\n\n[1] 3\n\n\nYou can use that in a base-R way to e.g. correct wonky input values:\n\nb[amatch(a, b, maxDist = 1)] \n\n[1] \"the\"\n\n\nOr you might prefer the ain helper:\n\nain(a, b, maxDist = 1)\n\n[1] TRUE\n\na %in% b # like a fuzzy version of %in%\n\n[1] FALSE\n\n\"the\" %in% b\n\n[1] TRUE\n\n\nOr in a slightly horrid but tidyish way if you wanted to tidy up several different values:\n\ndplyr::tibble(raw_data = c(\"thi\", \"ss\", \"thee\", \"thung\")) |&gt;\n  dplyr::rowwise() |&gt;\n  dplyr::mutate(is_match = b[amatch(raw_data, b, maxDist = 5)])\n\n# A tibble: 4 × 2\n# Rowwise: \n  raw_data is_match\n  &lt;chr&gt;    &lt;chr&gt;   \n1 thi      this    \n2 ss       is      \n3 thee     the     \n4 thung    thing"
  },
  {
    "objectID": "r_training/stringdist.html#other-functions",
    "href": "r_training/stringdist.html#other-functions",
    "title": "stringdist",
    "section": "other functions",
    "text": "other functions\n\nstringdist, stringsim, and stringdistmatrix\n\nstringdist has a nice toolkit of related functions. stringdist gives you the distance between strings:\n\nstringdist(\"thing\", \"think\") # gives you the raw distance.\n\n[1] 1\n\nstringdist(a, b) # vectorised\n\n[1] 2 4 1 3\n\n\nstringsim does the opposite, giving a similarity score between 0 and 1:\n\nstringsim(a, b)\n\n[1] 0.50 0.00 0.75 0.40\n\nstringsim(\"cat\", \"dog\")\n\n[1] 0\n\nstringsim(\"cat\", \"cat\")\n\n[1] 1\n\n\nstringdistmatrix does what you might imagine, returning a matrix of differences. This is largely useful if you want e.g. to pass these scores into something like a clustering algorithm that expects a matrix:\n\nstringdistmatrix(a, b) # same idea, different output: a matrix of differences\n\n     [,1] [,2] [,3] [,4]\n[1,]    2    4    1    3\n\nhclust(stringdistmatrix(b))\n\n\nCall:\nhclust(d = stringdistmatrix(b))\n\nCluster method   : complete \nDistance         : osa \nNumber of objects: 4 \n\nplot(hclust(stringdistmatrix(b, useNames = \"strings\")))\n\n\n\n\n\n\n\nIt’s possible-but-messy to take this matrix and tidy it into a tibble:\n\nstringdistmatrix(c(\"thee\", \"che\"), b, useNames = \"strings\") |&gt;\n  as.data.frame() |&gt;\n  tibble::as_tibble(rownames = \"a\") |&gt; # slightly roundabout conversion to tibble via df to preserve rownames\n  tidyr::pivot_longer(!a, names_to = \"b\", values_to = \"stringdist\") # useful \n\n# A tibble: 8 × 3\n  a     b     stringdist\n  &lt;chr&gt; &lt;chr&gt;      &lt;dbl&gt;\n1 thee  this           2\n2 thee  is             4\n3 thee  the            1\n4 thee  thing          3\n5 che   this           3\n6 che   is             3\n7 che   the            1\n8 che   thing          4\n\n\nBut probably better/more idiomatic to go:\n\ntidyr::expand_grid(a = c(\"thee\", \"che\"), b) |&gt;\n  dplyr::mutate(stringdist = stringdist(a, b))\n\n# A tibble: 8 × 3\n  a     b     stringdist\n  &lt;chr&gt; &lt;chr&gt;      &lt;dbl&gt;\n1 thee  this           2\n2 thee  is             4\n3 thee  the            1\n4 thee  thing          3\n5 che   this           3\n6 che   is             3\n7 che   the            1\n8 che   thing          4\n\n\n\nafind, grab, grabl, and extract\n\n\nafind(a, b)\n\n$location\n     [,1] [,2] [,3] [,4]\n[1,]    1    1    1    1\n\n$distance\n     [,1] [,2] [,3] [,4]\n[1,]    2    2    0    3\n\n$match\n     [,1]   [,2] [,3]  [,4]  \n[1,] \"thee\" \"th\" \"the\" \"thee\"\n\n\nafind returns a lot of stuff:\n\nafind(a, b)$location # where in substrings do the search terms start?\n\n     [,1] [,2] [,3] [,4]\n[1,]    1    1    1    1\n\nafind(a, b)$distance # how far from the search term is each substring?\n\n     [,1] [,2] [,3] [,4]\n[1,]    2    2    0    3\n\nafind(a, b)$match # what's the best matching part of the search term against each substring\n\n     [,1]   [,2] [,3]  [,4]  \n[1,] \"thee\" \"th\" \"the\" \"thee\"\n\n\nIf that’s a bit confusing, grab and grabl are basically replacements for grep(l). grab == grep and grabl == grepl:\n\nc &lt;- c(\"wig\", \"win\", \"banana\", \"ring\")\nc[grab(c,  \"wig\", maxDist = 1)]\n\n[1] \"wig\" \"win\"\n\nc[grab(c,  \"wig\", maxDist = 2)]\n\n[1] \"wig\"  \"win\"  \"ring\"\n\ngrabl(c,  \"wig\", maxDist = 2)\n\n[1]  TRUE  TRUE FALSE  TRUE\n\nc[grab(c,  \"wig\", maxDist = 3)]\n\n[1] \"wig\"    \"win\"    \"banana\" \"ring\"  \n\nextract(c, \"wii\", maxDist=1)\n\n     [,1] \n[1,] \"wig\"\n[2,] \"win\"\n[3,] NA   \n[4,] NA"
  },
  {
    "objectID": "r_training/stringdist.html#what-do-you-mean-closest",
    "href": "r_training/stringdist.html#what-do-you-mean-closest",
    "title": "stringdist",
    "section": "What do you mean closest?",
    "text": "What do you mean closest?\nThe really interesting bit: you can play with the method used to calculate distance which will give different results:\nhamming\nHamming distance. Number of character substitutions required to change a into b.\n\namatch(\"thign\", b, maxDist = 1, method = \"hamming\") # not found\n\n[1] NA\n\namatch(\"thign\", b, maxDist = 2, method = \"hamming\") # n subs g, g subs n = 2\n\n[1] 4\n\n\nlv\nLevenshtein distance. Number of del/ins/subs required to change a into b.\n\namatch(\"thinng\", b, maxDist = 2, method = \"hamming\")\n\n[1] NA\n\namatch(\"thinng\", b, maxDist = 2, method = \"lv\") # as we can now delete\n\n[1] 4\n\n\nosa\nOptimal string aligment. Number of del/ins/subs/swaps required to change a into b:\n\namatch(\"think\", b, maxDist = 1)\n\n[1] 4\n\namatch(\"thign\", b, maxDist = 1, method = \"osa\") # n swaps with g\n\n[1] 4\n\n\ndl\nFull Damerau-Levenshtein distance. As osa, but calculated slightly differently.\n\namatch(\"thign\", b, maxDist = 1, method = \"dl\") # can't find a difference with these simple ones from osa\n\n[1] 4\n\n\nlcs\nLongest common substring distance. Comparing longest identical parts of a and b:\n\namatch(\"thign\", b, maxDist = 2, method = \"lcs\") # I think roughly = length - common substring\n\n[1] 4\n\n\nsoundex\nDistance based on soundex encoding. Used in the phonetic function (see below), but finds homophones:\n\namatch(\"thign\", b, maxDist = 1, method = \"soundex\")\n\n[1] 1\n\nstringdist(\"too\", c(\"two\", \"to\", \"oto\"), method = \"soundex\")\n\n[1] 0 0 1\n\n\nThere are also several methods designed to look at q-grams = substring chunks of q characters long, and a group of methods based on the number of similar and different q-grams between a and b:\nqgram\nThis is the q-gram distance:\n\nstringdist(\"thign\", b, method = \"qgram\")\n\n[1] 3 5 4 0\n\n\ncosine\nThe cosine distance between q-gram profiles, which gives you (usefully) a scaled distance of between 0 (identical) and 1 (utterly different)\n\nstringdist(\"thing\", b, method = \"cosine\")\n\n[1] 0.3291796 0.6837722 0.4836022 0.0000000\n\nstringdist(\"thing\", \"fox\", method = \"cosine\")\n\n[1] 1\n\n\njaccard\nThe Jaccard distance between q-gram profiles\n\nstringdist(\"thing\", b, method = \"cosine\") \n\n[1] 0.3291796 0.6837722 0.4836022 0.0000000\n\nstringdist(\"thing\", b, method = \"jaccard\") \n\n[1] 0.5000000 0.8333333 0.6666667 0.0000000\n\n\njw\nThe Jaro distance (and Jaro-Winkler distance):\n\nstringdist(\"thing\", b, method = \"jw\", p = 0.2) # correction term\n\n[1] 0.08666667 1.00000000 0.18666667 0.00000000"
  },
  {
    "objectID": "r_training/stringdist.html#phonetic",
    "href": "r_training/stringdist.html#phonetic",
    "title": "stringdist",
    "section": "phonetic",
    "text": "phonetic\nThere’s also tooling to deal with the similarity of phonetic spellings. Excellent for e.g. Teams transcripts, if you’re trying to tidy those up:\n\nphonetic(\"ring\")\n\n[1] \"R520\"\n\nphonetic(\"wing\") # similar sounding strings get similar values\n\n[1] \"W520\"\n\nphonetic(\"string\")\n\n[1] \"S365\"\n\nphonetic(\"strung\")\n\n[1] \"S365\""
  },
  {
    "objectID": "r_training/stringdist.html#a-play-example-ggc",
    "href": "r_training/stringdist.html#a-play-example-ggc",
    "title": "stringdist",
    "section": "a play example: GGC",
    "text": "a play example: GGC\nThe KIND network has lots of members from the main NHS body in Glasgow, which is officially known as “NHS Greater Glasgow and Clyde”. That’s a highly variable and abbreviatable name though, leading to over 70 different permutations in common use. Here are some real-ish examples\n\nggc &lt;- readr::read_lines(here::here(\"r_training/data/ggc.txt\")) # real data\n\nsample(ggc, 10)\n\n [1] \"GG&C\"                          \"NHS GG&C\"                     \n [3] \"NHSGGC\"                        \"NHS Greater Glasgow & Clyde\"  \n [5] \"NHS GGC\"                       \"nhs greater glasgow and clyde\"\n [7] \"NHS GGC\"                       \"NHS GG&C\"                     \n [9] \"NHS GG&C\"                      \"NHS GG&C\"                     \n\n\nThere’s lots here to play with using stringdist. My two quick examples are to plot a couple of different sensible variants of the name (“NHS GGC”, “NHS Greater Glasgow and Clyde”, “NHSGGC”) methods, and see how many distant results we get:\n\ntidyr::expand_grid(a = c(\"NHS GGC\", \"NHS Greater Glasgow and Clyde\", \"NHSGGC\"), b = ggc) |&gt;\n  dplyr::mutate(stringdist = stringdist(a, b)) |&gt;\n  ggplot() +\n  geom_density(aes(x = stringdist, fill = a)) +\n  facet_wrap(~a, ncol = 1) +\n  theme(legend.position = \"none\")\n\n\n\n\n\n\n\nOr to try a family tree (more swishily, a cluster dendrogram) of those terms:\n\nsort(table(ggc), decreasing = T)[1:7] |&gt;\n  stringdistmatrix(useNames = \"names\") |&gt;\n  hclust() |&gt;\n  plot()"
  },
  {
    "objectID": "r_training/tidyselect.html",
    "href": "r_training/tidyselect.html",
    "title": "Tidyselect",
    "section": "",
    "text": "No feedback found for this session"
  },
  {
    "objectID": "r_training/tidyselect.html#introduction",
    "href": "r_training/tidyselect.html#introduction",
    "title": "Tidyselect",
    "section": "Introduction",
    "text": "Introduction\n\n\n\n\n\nLots of the power in dplyr comes from the many ways that you can select columns. In this section, we’ll look at some examples of tidyselect, which is a series of functions that allow you to specify columns by various patterns. Not only does this give you lots of ways of simplifying and streamlining your code, but it’s also a great way of making your code more portable - so that it works well inside functions, or across different data sets.\nIn the tidyevaluation training session, we look across this material in much more depth. There’s quite a lot to absorb, so I would definitely recommend using the manual pages (using ??tidyselect) as a reference for this section.\nPackage loading is just:\n\nlibrary(NHSRdatasets) # for sample data\nlibrary(dplyr)"
  },
  {
    "objectID": "r_training/tidyselect.html#contains",
    "href": "r_training/tidyselect.html#contains",
    "title": "Tidyselect",
    "section": "contains()",
    "text": "contains()\ncontains() is a good example of tidyselect functions that are based on pattern matching. There are several related functions that work in the same way, including:\n\nstarts_with()\nends_with()\nmatches()\nnum_range()\n\nHere, we’ll concentrate on contains() as an exemplar for this family, because the other functions in the family work in a very similar way. contains() allows you to pick columns based on their names. So to select() all the columns in stranded_data whose names contain the string “care”:\n\nstranded_data |&gt;\n  select(contains(\"care\"))\n\n# A tibble: 768 × 3\n   care.home.referral mental_health_care periods_of_previous_care\n                &lt;int&gt;              &lt;int&gt;                    &lt;int&gt;\n 1                  0                  0                        1\n 2                  1                  0                        1\n 3                  0                  1                        1\n 4                  1                  1                        1\n 5                  0                  1                        1\n 6                  1                  1                        1\n 7                  1                  0                        1\n 8                  0                  0                        1\n 9                  0                  0                        5\n10                  1                  1                        1\n# ℹ 758 more rows\n\n\nNote that by default this string matching is case insensitive, so “care” will match columns called “CARE”, “Care”, and “cArE”. You can also combine the contains() statement with other select() criteria:\n\nstranded_data |&gt;\n  select(age, contains(\"care\"))\n\n# A tibble: 768 × 4\n     age care.home.referral mental_health_care periods_of_previous_care\n   &lt;int&gt;              &lt;int&gt;              &lt;int&gt;                    &lt;int&gt;\n 1    50                  0                  0                        1\n 2    31                  1                  0                        1\n 3    32                  0                  1                        1\n 4    69                  1                  1                        1\n 5    33                  0                  1                        1\n 6    75                  1                  1                        1\n 7    26                  1                  0                        1\n 8    64                  0                  0                        1\n 9    53                  0                  0                        5\n10    63                  1                  1                        1\n# ℹ 758 more rows\n\n\nAnd you can match over a vector of strings:\n\nstranded_data |&gt;\n  select(contains(c(\"care\", \"age\")))\n\n# A tibble: 768 × 4\n   care.home.referral mental_health_care periods_of_previous_care   age\n                &lt;int&gt;              &lt;int&gt;                    &lt;int&gt; &lt;int&gt;\n 1                  0                  0                        1    50\n 2                  1                  0                        1    31\n 3                  0                  1                        1    32\n 4                  1                  1                        1    69\n 5                  0                  1                        1    33\n 6                  1                  1                        1    75\n 7                  1                  0                        1    26\n 8                  0                  0                        1    64\n 9                  0                  0                        5    53\n10                  1                  1                        1    63\n# ℹ 758 more rows\n\n\nThe order of strings in your vector will determine the order of columns returned:\n\nstranded_data |&gt;\n  select(contains(c(\"age\", \"care\")))\n\n# A tibble: 768 × 4\n     age care.home.referral mental_health_care periods_of_previous_care\n   &lt;int&gt;              &lt;int&gt;              &lt;int&gt;                    &lt;int&gt;\n 1    50                  0                  0                        1\n 2    31                  1                  0                        1\n 3    32                  0                  1                        1\n 4    69                  1                  1                        1\n 5    33                  0                  1                        1\n 6    75                  1                  1                        1\n 7    26                  1                  0                        1\n 8    64                  0                  0                        1\n 9    53                  0                  0                        5\n10    63                  1                  1                        1\n# ℹ 758 more rows\n\n\nAnd you can negate the contains() to give the complement:\n\nstranded_data |&gt;\n  select(-contains(c(\"age\", \"care\")))\n\n# A tibble: 768 × 5\n   stranded.label medicallysafe  hcop admit_date frailty_index       \n   &lt;chr&gt;                  &lt;int&gt; &lt;int&gt; &lt;chr&gt;      &lt;chr&gt;               \n 1 Not Stranded               0     0 29/12/2020 No index item       \n 2 Not Stranded               0     1 11/12/2020 No index item       \n 3 Not Stranded               1     0 19/01/2021 No index item       \n 4 Not Stranded               1     0 07/01/2021 Mobility problems   \n 5 Not Stranded               0     1 15/01/2021 No index item       \n 6 Stranded                   1     0 02/01/2021 Mobility problems   \n 7 Not Stranded               0     1 02/01/2021 No index item       \n 8 Not Stranded               1     1 29/12/2020 Fall patient history\n 9 Not Stranded               1     0 04/01/2021 No index item       \n10 Not Stranded               0     0 30/12/2020 Activity Limitation \n# ℹ 758 more rows\n\n\nstarts_with() and ends_with() work in exactly the same way - but will only match strings at the beginning and end of the column name respectively:\n\nstranded_data |&gt;\n  select(starts_with(\"care\"))\n\n# A tibble: 768 × 1\n   care.home.referral\n                &lt;int&gt;\n 1                  0\n 2                  1\n 3                  0\n 4                  1\n 5                  0\n 6                  1\n 7                  1\n 8                  0\n 9                  0\n10                  1\n# ℹ 758 more rows\n\nstranded_data |&gt;\n  select(ends_with(\"care\"))\n\n# A tibble: 768 × 2\n   mental_health_care periods_of_previous_care\n                &lt;int&gt;                    &lt;int&gt;\n 1                  0                        1\n 2                  0                        1\n 3                  1                        1\n 4                  1                        1\n 5                  1                        1\n 6                  1                        1\n 7                  0                        1\n 8                  0                        1\n 9                  0                        5\n10                  1                        1\n# ℹ 758 more rows\n\n\nmatches() allows use of a regular expression:\n\nstranded_data |&gt;\n  select(matches(\"me[dn]\"))\n\n# A tibble: 768 × 2\n   medicallysafe mental_health_care\n           &lt;int&gt;              &lt;int&gt;\n 1             0                  0\n 2             0                  0\n 3             1                  1\n 4             1                  1\n 5             0                  1\n 6             1                  1\n 7             0                  0\n 8             1                  0\n 9             1                  0\n10             0                  1\n# ℹ 758 more rows\n\n\nnum_range() matches columns with numeric ranges. For example, in the billboard dataset, there are a large number of columns named wk1, wk2… representing weeks. To select wk10 to wk15:\n\ntidyr::billboard |&gt; \n  dplyr::select(num_range(\"wk\", 10:15))\n\n# A tibble: 317 × 6\n    wk10  wk11  wk12  wk13  wk14  wk15\n   &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n 1    NA    NA    NA    NA    NA    NA\n 2    NA    NA    NA    NA    NA    NA\n 3    51    51    51    47    44    38\n 4    61    61    59    61    66    72\n 5    57    64    70    75    76    78\n 6     6     7    22    29    36    47\n 7    NA    NA    NA    NA    NA    NA\n 8    36    37    37    38    49    61\n 9    10     9     8     6     1     2\n10    59    66    68    61    67    59\n# ℹ 307 more rows"
  },
  {
    "objectID": "r_training/tidyselect.html#any_of",
    "href": "r_training/tidyselect.html#any_of",
    "title": "Tidyselect",
    "section": "any_of()",
    "text": "any_of()\nany_of() matches full column names from a vector of names. Let’s set up some names:\n\nmy_columns &lt;- names(stranded_data)[1:4]\nmy_columns\n\n[1] \"stranded.label\"     \"age\"                \"care.home.referral\"\n[4] \"medicallysafe\"     \n\n\nIf we supply any_of() with this vector of names, any_of() will match any column names that appear in the vector, and ignore those that do not:\n\nstranded_data |&gt;\n  select(any_of(my_columns))\n\n# A tibble: 768 × 4\n   stranded.label   age care.home.referral medicallysafe\n   &lt;chr&gt;          &lt;int&gt;              &lt;int&gt;         &lt;int&gt;\n 1 Not Stranded      50                  0             0\n 2 Not Stranded      31                  1             0\n 3 Not Stranded      32                  0             1\n 4 Not Stranded      69                  1             1\n 5 Not Stranded      33                  0             0\n 6 Stranded          75                  1             1\n 7 Not Stranded      26                  1             0\n 8 Not Stranded      64                  0             1\n 9 Not Stranded      53                  0             1\n10 Not Stranded      63                  1             0\n# ℹ 758 more rows\n\n\nCompared to contains(), any_of() will match the entire name, while contains() will match any part of the name.\nThere’s a great tip on the all_of() man page - any_of() is an especially clever way to drop columns from a tibble because calling it more than once does not cause an error:\n\nstranded_data |&gt;\n  select(-any_of(my_columns)) |&gt;\n  select(-any_of(my_columns))\n\n# A tibble: 768 × 5\n    hcop mental_health_care periods_of_previous_care admit_date frailty_index   \n   &lt;int&gt;              &lt;int&gt;                    &lt;int&gt; &lt;chr&gt;      &lt;chr&gt;           \n 1     0                  0                        1 29/12/2020 No index item   \n 2     1                  0                        1 11/12/2020 No index item   \n 3     0                  1                        1 19/01/2021 No index item   \n 4     0                  1                        1 07/01/2021 Mobility proble…\n 5     1                  1                        1 15/01/2021 No index item   \n 6     0                  1                        1 02/01/2021 Mobility proble…\n 7     1                  0                        1 02/01/2021 No index item   \n 8     1                  0                        1 29/12/2020 Fall patient hi…\n 9     0                  0                        5 04/01/2021 No index item   \n10     0                  1                        1 30/12/2020 Activity Limita…\n# ℹ 758 more rows\n\n\nTrying to do something similar using select() will cause an error:\n\ntry(stranded_data |&gt;\n  select(-age) |&gt;\n  select(-age))\n\nError in select(select(stranded_data, -age), -age) : \n  Can't select columns that don't exist.\n✖ Column `age` doesn't exist."
  },
  {
    "objectID": "r_training/tidyselect.html#if_any-and-if_all",
    "href": "r_training/tidyselect.html#if_any-and-if_all",
    "title": "Tidyselect",
    "section": "\nif_any() and if_all()\n",
    "text": "if_any() and if_all()\n\n\nstranded_data |&gt;\n  filter(if_any(contains(\"care\"), ~ .x == 1)) # that'll find rows with a 1 in any \"care\" column\n\n# A tibble: 723 × 9\n   stranded.label   age care.home.referral medicallysafe  hcop\n   &lt;chr&gt;          &lt;int&gt;              &lt;int&gt;         &lt;int&gt; &lt;int&gt;\n 1 Not Stranded      50                  0             0     0\n 2 Not Stranded      31                  1             0     1\n 3 Not Stranded      32                  0             1     0\n 4 Not Stranded      69                  1             1     0\n 5 Not Stranded      33                  0             0     1\n 6 Stranded          75                  1             1     0\n 7 Not Stranded      26                  1             0     1\n 8 Not Stranded      64                  0             1     1\n 9 Not Stranded      63                  1             0     0\n10 Not Stranded      30                  1             1     0\n# ℹ 713 more rows\n# ℹ 4 more variables: mental_health_care &lt;int&gt;, periods_of_previous_care &lt;int&gt;,\n#   admit_date &lt;chr&gt;, frailty_index &lt;chr&gt;\n\nstranded_data |&gt;\n  mutate(care_found = case_when(if_all(contains(\"care\"), ~ .x &gt;= 1) ~ \"Yup\",\n                                TRUE ~ \"Nope\")) |&gt;\n  select(contains(\"care\"), care_found)\n\n# A tibble: 768 × 4\n   care.home.referral mental_health_care periods_of_previous_care care_found\n                &lt;int&gt;              &lt;int&gt;                    &lt;int&gt; &lt;chr&gt;     \n 1                  0                  0                        1 Nope      \n 2                  1                  0                        1 Nope      \n 3                  0                  1                        1 Nope      \n 4                  1                  1                        1 Yup       \n 5                  0                  1                        1 Nope      \n 6                  1                  1                        1 Yup       \n 7                  1                  0                        1 Nope      \n 8                  0                  0                        1 Nope      \n 9                  0                  0                        5 Nope      \n10                  1                  1                        1 Yup       \n# ℹ 758 more rows"
  },
  {
    "objectID": "r_training/tidyselect.html#everything",
    "href": "r_training/tidyselect.html#everything",
    "title": "Tidyselect",
    "section": "everything()",
    "text": "everything()\neverything() selects all columns. This is less useful in combination with select() itself, but simplifies some other functions well - particularly with pivot_longer().\n\nstranded_data |&gt; \n  select(2:5) |&gt;\n  tidyr::pivot_longer(everything())\n\n# A tibble: 3,072 × 2\n   name               value\n   &lt;chr&gt;              &lt;int&gt;\n 1 age                   50\n 2 care.home.referral     0\n 3 medicallysafe          0\n 4 hcop                   0\n 5 age                   31\n 6 care.home.referral     1\n 7 medicallysafe          0\n 8 hcop                   1\n 9 age                   32\n10 care.home.referral     0\n# ℹ 3,062 more rows\n\n\nSee also last_col(), which is another example of a tidyselect helper for specific columns."
  },
  {
    "objectID": "r_training/why_bother_with_R.html",
    "href": "r_training/why_bother_with_R.html",
    "title": "Why bother with R?",
    "section": "",
    "text": "No feedback found for this session"
  },
  {
    "objectID": "r_training/why_bother_with_R.html#session-outline",
    "href": "r_training/why_bother_with_R.html#session-outline",
    "title": "Why bother with R?",
    "section": "Session outline",
    "text": "Session outline\n\nthis session is 🥬 - a non-technical introduction for pre-beginners\ntwo minute overview of R\none minute history of R\nfive use cases in H&SC\nR code and practice and a bit of R vs not-R\nnext steps and training"
  },
  {
    "objectID": "r_training/why_bother_with_R.html#a-brief-overview-of-r",
    "href": "r_training/why_bother_with_R.html#a-brief-overview-of-r",
    "title": "Why bother with R?",
    "section": "A brief overview of R",
    "text": "A brief overview of R\n\nR is a free software environment for statistical computing and graphics (r-project.org)\n\n\nfree and open-source\nmultiplatform\nlarge user base\nprominent in health, industry, biosciences\n\nWho owns R?\n\n\nR Foundation\n\nMaintains CRAN\n\nLinks with FSF\n\n\n\nArchitecture\n\nR is modular\n20 thousand + packages\nEnormous scope of applications\n\nDesign questions often hinge on finding the right package\ne.g. this presentation was created in R Quarto using Revealjs\n\nSo there’s a good reason that R can be confusing: it’s not one thing, but many\nA brief history of R\n\n\nit starts with the S programming language\n\nAimed: to “turn ideas into software, quickly and faithfully” (Chambers 1998)\n\n\n\nRobert Gentleman and Ross Ihaka (Ihaka 1998)\n\nInterest in extending the tools available in S\n\nEarly transition to free software model\n1997 “core group”"
  },
  {
    "objectID": "r_training/why_bother_with_R.html#use-cases",
    "href": "r_training/why_bother_with_R.html#use-cases",
    "title": "Why bother with R?",
    "section": "Use cases",
    "text": "Use cases\nStatistical testing\n\n\n\n\ncollege\nfinrela\n\n\n\ndegree\nbelow average\n\n\nno degree\nbelow average\n\n\ndegree\nbelow average\n\n\n\n\n\n\nlibrary(infer)\nchisq_test(gss, college ~ finrela) |&gt;\n  knitr::kable()\n\n\n\nstatistic\nchisq_df\np_value\n\n\n30.68252\n5\n1.08e-05\n\n\n\n\nchi-squared test of independence using (Couch et al. 2021)\nPRISMA 2020 flow diagrams\n\n\nPRISMA flow diagram\n\nPRISMA flow diagram using PRISMA2020 (Haddaway, Pritchard, and McGuinness 2021)\nMapping\n\n\nChoropleth map using geojsonio\n\nChoropleth map using geojsonio\nPosters\n\n\nConference poster using posterdown\n\nConference poster using posterdown (Thorne 2019), waffle (Rudis and Gandy 2017), and ggalluvial (Brunson and Read 2020)\nNatural language processing / wordclouds\n\n\nSentiment analysis with wordcloud\n\nSentiment analysis with wordcloud using tidytext (Silge and Robinson 2016), lexicon, sentimentr, and wordcloud"
  },
  {
    "objectID": "r_training/why_bother_with_R.html#uses",
    "href": "r_training/why_bother_with_R.html#uses",
    "title": "Why bother with R?",
    "section": "Uses",
    "text": "Uses\nWho is using it?\n\nPHS\nwidely across SG\nsporadically used across NHSS boards\nWhy are they using it?\n\nto replace troublesome systems\n\nSPSS and other propriatary systems (licencing costs)\nreplacing end-of-life systems (Access e.g.)\n\n\nto harmonise analysis across a team (common analysis platform)\nSG committment to open-source code under DSSS\n\nSimplifying analysis\n(looking at you, Excel…)\n\nR separates data from analysis\n“there’s a package for…”\nreproducible analysis\ncollaboration\nXmR charts in Excel and in R are a useful object lesson…\n\nXmR charts in Excel (front)\n\n\nXmR charts (front)\n\nXmR charts in Excel (back)\nXmR charts (R)\nXmR charts in R\n\nlibrary(NHSRplotthedots)\n\nreadr::read_csv(\"data/spc/spc2.csv\") |&gt;\n    mutate(date = lubridate::dmy(date)) |&gt;\n    ptd_spc(members, date, target=50, fix_after_n_points=20)"
  },
  {
    "objectID": "r_training/why_bother_with_R.html#r-and-not-r",
    "href": "r_training/why_bother_with_R.html#r-and-not-r",
    "title": "Why bother with R?",
    "section": "R and not-R",
    "text": "R and not-R\n\nExcel - pain curve…\nPower BI - dashboard, data, built-in to M365 licences\nTableau - specialist, cost\nPython\n(hundreds of proprietary data analysis platforms)"
  },
  {
    "objectID": "r_training/why_bother_with_R.html#pain-curves",
    "href": "r_training/why_bother_with_R.html#pain-curves",
    "title": "Why bother with R?",
    "section": "Pain curves",
    "text": "Pain curves"
  },
  {
    "objectID": "r_training/why_bother_with_R.html#r-code-in-practice",
    "href": "r_training/why_bother_with_R.html#r-code-in-practice",
    "title": "Why bother with R?",
    "section": "R code in practice",
    "text": "R code in practice\n\nreally interesting data on poisonous books (via Data is Plural)\n\n\n# load the downloaded data\nbooks &lt;- readr::read_csv(\"data/ArsenicalBooks_CSVtoshare_2024-05-04.xlsx - EmeraldGreenBooks.csv\") |&gt;\n  mutate(Date = as.numeric(Date)) \n\n\nwe’ve got data about 266 books\nthe oldest book in the set is from 1797, and the youngest from 1892\n\nWhere are the poisonous bits of books?\n\nbooks |&gt;\n  count(`Arsenical Material`, sort = T) |&gt;\n  slice(1:7) |&gt;\n  knitr::kable() \n\n\n\nArsenical Material\nn\n\n\n\nbookcloth\n130\n\n\npaper cover\n49\n\n\ndecorative green onlay\n19\n\n\ntextblock edges\n16\n\n\npaper covering\n5\n\n\npaper over boards\n5\n\n\npaper spine label\n5\n\n\n\n\n\nWhen were poisonous books a thing?\n\nbooks |&gt;\n  ggplot() +\n  geom_histogram(aes(x = Date), binwidth = 10) \n\n\n\n\n\n\n\nWhere were poisonous books a thing?\n\nbooks |&gt;\n  tidyr::separate(Imprint, into = c(\"City\", \"Publisher\"), sep = \": \") |&gt;\n  count(City) |&gt;\n  slice_max(n, n = 5) |&gt;\n  knitr::kable() \n\n\n\nCity\nn\n\n\n\nLondon\n69\n\n\nNew York\n29\n\n\nBoston\n18\n\n\nEdinburgh\n16\n\n\nPhiladelphia\n16"
  },
  {
    "objectID": "r_training/why_bother_with_R.html#next-steps",
    "href": "r_training/why_bother_with_R.html#next-steps",
    "title": "Why bother with R?",
    "section": "Next steps",
    "text": "Next steps\n\nself-paced\n\nSwirl\n\nR4DS (Wickham and Grolemund 2017)\n\nwrite/fail/stackoverflow cycle\nPHS Data Science Knowledge Base\n\n\nKIND Learning Network training\n\nintroductory R and Rmarkdown - code/info\n\nintermediate R - code/info"
  },
  {
    "objectID": "r_training/why_bother_with_R.html#r-beginners-club",
    "href": "r_training/why_bother_with_R.html#r-beginners-club",
    "title": "Why bother with R?",
    "section": "R beginners club",
    "text": "R beginners club\n\nsocial learning on Teams to get you started in R\nsee schedule and materials on our community pages\n\nall welcome and aimed at complete R beginners"
  },
  {
    "objectID": "schedule.html",
    "href": "schedule.html",
    "title": "Schedule",
    "section": "",
    "text": "Most KIND training happens in six-week core training blocks that repeat four times per year. Most of our training - especially the Excel and Power BI courses - will be contained in those blocks. The blocks broadly align with school terms, because that’s when (empirically) we get the best attendance at training.\nThis year, those core blocks will be:\n\nin the late summer/early autumn, between 1st Sept and 10th Oct 2025\nin the winter, between 3rd Nov and 12th Dec\n\n\nTheme weeks occupy a whole week with a single topic, with 10-20 events scheduled on a single topic. This year, we’ll have the following theme weeks:\n\nweek commencing 19th May 2025 - Power Query\nw/c 30th June 2025 - Debugging/Troubleshooting\nw/c 25th August 2025 - Open Source / copyleft\nw/c 27th October 2025 - No Stupid Questions"
  },
  {
    "objectID": "schedule.html#current-schedule",
    "href": "schedule.html#current-schedule",
    "title": "Schedule",
    "section": "",
    "text": "Most KIND training happens in six-week core training blocks that repeat four times per year. Most of our training - especially the Excel and Power BI courses - will be contained in those blocks. The blocks broadly align with school terms, because that’s when (empirically) we get the best attendance at training.\nThis year, those core blocks will be:\n\nin the late summer/early autumn, between 1st Sept and 10th Oct 2025\nin the winter, between 3rd Nov and 12th Dec\n\n\nTheme weeks occupy a whole week with a single topic, with 10-20 events scheduled on a single topic. This year, we’ll have the following theme weeks:\n\nweek commencing 19th May 2025 - Power Query\nw/c 30th June 2025 - Debugging/Troubleshooting\nw/c 25th August 2025 - Open Source / copyleft\nw/c 27th October 2025 - No Stupid Questions"
  },
  {
    "objectID": "schedule.html#available-training-sessions",
    "href": "schedule.html#available-training-sessions",
    "title": "Schedule",
    "section": "Available training sessions:",
    "text": "Available training sessions:"
  },
  {
    "objectID": "schedule.html#training-menu",
    "href": "schedule.html#training-menu",
    "title": "Schedule",
    "section": "Training menu",
    "text": "Training menu\nThese are all the stand-alone training sessions currently on offer. Please get in touch if you’d like to see something additional:"
  },
  {
    "objectID": "skills/a_data_centric_introduction_to_python_pg.html",
    "href": "skills/a_data_centric_introduction_to_python_pg.html",
    "title": "A Data-Centric Introduction to Python",
    "section": "",
    "text": "14 previous attendees have left feedback\n93% would recommend this session to a colleague\n100% said that this session was pitched correctly\n\n\n\n\n\n\n\n\n\n\n\nThree random comments from previous attendees\n\n\n\n\nuseful warts and all demonstration of python for python novices\nAs described on the tin, a slightly chaotic introduction to Python.\nWell-structured intro: setting up/environment, basic python ideas, and data-specific methods. Particularly useful to contextualise the Python with what we might do in R, given the audience of R aficionados.\nA note on this mixed R/Python Quarto file: the text and Python sections were written in a Jupyter notebook, then converted into a Quarto document by:\nquarto convert a_data_centric_introduction_to_python.ipynb\nR sections, and the tabsets were added, and the document was then knitted using R Quarto in Rstudio by attaching the reticulate (Ushey, Allaire, and Tang 2024) package:\nlibrary(reticulate)\nError in python_config_impl(python) : \n  Error running '/home/runner/.virtualenvs/r-reticulate/python': No such file.\nThe Python installation used to create the virtualenv has been moved or removed:\n  '/opt/hostedtoolcache/Python/3.13.3/x64/bin'"
  },
  {
    "objectID": "skills/a_data_centric_introduction_to_python_pg.html#previous-attendees-have-said",
    "href": "skills/a_data_centric_introduction_to_python_pg.html#previous-attendees-have-said",
    "title": "A Data-Centric Introduction to Python",
    "section": "",
    "text": "14 previous attendees have left feedback\n93% would recommend this session to a colleague\n100% said that this session was pitched correctly\n\n\n\n\n\n\n\n\n\n\n\nThree random comments from previous attendees\n\n\n\n\nuseful warts and all demonstration of python for python novices\nAs described on the tin, a slightly chaotic introduction to Python.\nWell-structured intro: setting up/environment, basic python ideas, and data-specific methods. Particularly useful to contextualise the Python with what we might do in R, given the audience of R aficionados."
  },
  {
    "objectID": "skills/a_data_centric_introduction_to_python_pg.html#python-introduction",
    "href": "skills/a_data_centric_introduction_to_python_pg.html#python-introduction",
    "title": "A Data-Centric Introduction to Python",
    "section": "Python introduction",
    "text": "Python introduction\n\n“Python is a high-level, general-purpose programming language.”\nmassive user-base\nhighly extensible and flexible (\\(10^5\\) modules)\n\nthe second-best language for everything\n\nmulti-paradigm (oop, structured, …)"
  },
  {
    "objectID": "skills/a_data_centric_introduction_to_python_pg.html#excel-python",
    "href": "skills/a_data_centric_introduction_to_python_pg.html#excel-python",
    "title": "A Data-Centric Introduction to Python",
    "section": "Excel Python",
    "text": "Excel Python\n\nPython is coming to Excel, apparently…\n\nroll-out slower than expected\n\n\ngives an alternative to VBA etc\ncode gets executed in the cloud, so no infrastructure faff…\n\nbut a potential information governance headache\n\n\non the offchance that you have it available, =PY() is the key function\n\nsee “hello world!”-type walkthrough"
  },
  {
    "objectID": "skills/a_data_centric_introduction_to_python_pg.html#python-for-r-people",
    "href": "skills/a_data_centric_introduction_to_python_pg.html#python-for-r-people",
    "title": "A Data-Centric Introduction to Python",
    "section": "Python for R people",
    "text": "Python for R people\nYou’re welcome to follow along using the free basic Python set-up at W3schools\n\n“hello world!”\nindents vs brackets\nRmarkdown vs Jupyter\npackages vs modules - for data from csv comparison\nbasic work with tabular data - for methods\nvector/tibble/list vs list/tuple/dict/set - for vectorisation vs list comps\npandas for tabular data\nplotting comparison"
  },
  {
    "objectID": "skills/a_data_centric_introduction_to_python_pg.html#hello-world",
    "href": "skills/a_data_centric_introduction_to_python_pg.html#hello-world",
    "title": "A Data-Centric Introduction to Python",
    "section": "“hello world!”",
    "text": "“hello world!”\nInitially, there’s very little to choose between R and Python, and everything is likely to feel very familiar..\n\n\nPython\nR\n\n\n\n\nprint(\"hello world!\")\n\nhello world!\n\n1 + 2\n\n3\n\nhw = \"hello \" + \"world\" + \"!\"\nhw\n\n'hello world!'\n\n\n\n\n\n\"hello world\"\n\n[1] \"hello world\"\n\n1 + 2\n\n[1] 3\n\nhw &lt;- paste(\"hello\", \"world\", \"!\")\nhw\n\n[1] \"hello world !\""
  },
  {
    "objectID": "skills/a_data_centric_introduction_to_python_pg.html#indents",
    "href": "skills/a_data_centric_introduction_to_python_pg.html#indents",
    "title": "A Data-Centric Introduction to Python",
    "section": "Indents",
    "text": "Indents\n\na first big difference: indents matter in Python\nthey’re non-optional with proper syntactic function\n\nbroadly correspond to curly brackets in R\n\n\n\n\n\nPython\nR\n\n\n\n\nword = \"care\"\n\nif word == \"care\":\n    print(\"I have found someone from care\")\nelse:\n    print(\"No, I haven't found anyone from care\")\n\nI have found someone from care\n\n\n\n\n\nword &lt;- \"care\"\n\nif (word == \"care\") {\n  print(\"I have found someone from care\")\n} else {\n  print(\"No, I haven't found anyone from care\")\n}\n\n[1] \"I have found someone from care\""
  },
  {
    "objectID": "skills/a_data_centric_introduction_to_python_pg.html#rmarkdownquarto-vs-jupyter",
    "href": "skills/a_data_centric_introduction_to_python_pg.html#rmarkdownquarto-vs-jupyter",
    "title": "A Data-Centric Introduction to Python",
    "section": "Rmarkdown/Quarto vs Jupyter",
    "text": "Rmarkdown/Quarto vs Jupyter\n\nJupyter provides interactive code- and markdown editing. Compare to the render/knit-based workflow of qmd/Rmd\nweb-based, so perhaps more like posit.cloud / workbench than Rstudio\ncomparatively harder to edit .ipynb files than .Rmd/.qmd in other tools"
  },
  {
    "objectID": "skills/a_data_centric_introduction_to_python_pg.html#packages-vs-modules",
    "href": "skills/a_data_centric_introduction_to_python_pg.html#packages-vs-modules",
    "title": "A Data-Centric Introduction to Python",
    "section": "Packages vs modules",
    "text": "Packages vs modules\nWe’ll load the pandas module in Python, and the readr package in R (Wickham, Hester, and Bryan 2024) to compare and contrast loading external functions. We’ll use those to read some sample data (the KIND book of the week dataset).\n\n\nPython\nR\n\n\n\n\nbotw_dat = \"https://raw.githubusercontent.com/NES-DEW/KIND-community-standards/main/data/KIND_book_of_the_week.csv\"\n\nimport pandas\nbotw = pandas.read_csv(botw_dat)\n\nBut we also have a lot of options for loading modules. We can alias, most usefully to give us short names for commonly-used functions:\n\nimport pandas as pd\nbotw = pd.read_csv(botw_dat)\n\nWe could even load an individual function from a module:\n\nfrom pandas import read_csv as read_csv\nbotw = read_csv(botw_dat)\n\n# one minor bit of cheating - we'll coerce the Year column to numeric\nbotw = botw.replace(\"1979 (1935)\", 1979)\nbotw = botw.replace(\"2015 / 2017\", 2015)\nbotw[\"Year\"] = pandas.to_numeric(botw[\"Year\"])\n\n\n\nThere are comparatively fewer options for package loading in R. You’d traditionally attach a whole package using library:\n\nlibrary(readr)\n\nbotw_dat &lt;- \"https://raw.githubusercontent.com/NES-DEW/KIND-community-standards/main/data/KIND_book_of_the_week.csv\"\n\nbotw &lt;- read_csv(botw_dat)\n\nYou can load individual functions by namespacing via :::\n\nbotw &lt;- readr::read_csv(botw_dat)\n\nIt is also possible, although non-standard, to alias individual functions:\n\nsteve &lt;- readr::read_csv\nbotw &lt;- steve(botw_dat)"
  },
  {
    "objectID": "skills/a_data_centric_introduction_to_python_pg.html#fun-with-tabular-data",
    "href": "skills/a_data_centric_introduction_to_python_pg.html#fun-with-tabular-data",
    "title": "A Data-Centric Introduction to Python",
    "section": "Fun with tabular data",
    "text": "Fun with tabular data\nDoing some basic playing with our tabular data shows that Python uses methods - like a local version of a functions that are specific to certain types of object. While methods can be used in R, in practice most R code relies on functions.\n\n\nPython\nR\n\n\n\nBoth shape and index are methods that we’ve imported from pandas. They’ll only work in pandas objects, which we’ll talk about more below.\n\nbotw.shape # shape is a method\n\n(40, 8)\n\nlen(botw.index) # as is index\n\n40\n\nbotw.shape[0] # Python is 0-indexed\n\n40\n\n\n\n\n\ndim(botw) # dim is a function\n\n[1] 40  8\n\nnrow(botw) # as is nrow\n\n[1] 40\n\ndim(botw)[1] # Python is 1-indexed\n\n[1] 40"
  },
  {
    "objectID": "skills/a_data_centric_introduction_to_python_pg.html#data-types",
    "href": "skills/a_data_centric_introduction_to_python_pg.html#data-types",
    "title": "A Data-Centric Introduction to Python",
    "section": "Data types",
    "text": "Data types\n\n\nPython\nR\n\n\n\n\nthere are four basic data types in Python\nlist\ntuple\ndict\nset\n\n\nnumbers_list = [1,2,3,4,5] # changeable\nnumbers_list\n\n[1, 2, 3, 4, 5]\n\nnumbers_tuple = (1,2,3,4,5) # unchangeable\nnumbers_tuple\n\n(1, 2, 3, 4, 5)\n\nnumbers_dict = {\"one\":1, \"two\":2, \"three\":3} # changeable (now), no duplicates\nnumbers_dict\n\n{'one': 1, 'two': 2, 'three': 3}\n\nnumbers_set = {1,2,3,4,5} # unchangeable, no duplicates\nnumbers_set\n\n{1, 2, 3, 4, 5}\n\n\n\n# Modify in place semantics\nnumbers_list.reverse()\n\n\n\n\nR has several basic data types, but in practice only three are commonly encountered. These are the vector, the data frame, and the list (confusing!):\n\n\nnumbers_vector &lt;- c(1,2,3,4,5)\nnumbers_vector\n\n[1] 1 2 3 4 5\n\nnumbers_dataframe &lt;- data.frame(nums = numbers_vector)\nnumbers_dataframe\n\n  nums\n1    1\n2    2\n3    3\n4    4\n5    5\n\nnumbers_list &lt;- list(numbers_vector, numbers_dataframe)\nnumbers_list\n\n[[1]]\n[1] 1 2 3 4 5\n\n[[2]]\n  nums\n1    1\n2    2\n3    3\n4    4\n5    5"
  },
  {
    "objectID": "skills/a_data_centric_introduction_to_python_pg.html#loops-list-comprehensions-and-vectorization",
    "href": "skills/a_data_centric_introduction_to_python_pg.html#loops-list-comprehensions-and-vectorization",
    "title": "A Data-Centric Introduction to Python",
    "section": "Loops, list comprehensions, and vectorization",
    "text": "Loops, list comprehensions, and vectorization\nThere are various methods for repeatedly running code. We’ll demonstrate a couple of simple methods here. Note that both Python and R have rich and powerful functional programming tools available (like map), but we’ll park those for now.\n\n\nPython\nR\n\n\n\nYou’ll need to use loops, or (much nicer) list comprehension in Python. There’s no exact counterpart of R’s vectorized functions:\n\ndouble_numbers_loop = []\n\nfor n in numbers_list:\n    double_numbers_loop.append(n * 2)\n\ndouble_numbers_loop\n\n[10, 8, 6, 4, 2]\n\n\nList comprehension\nLike a lovely lightweight loop syntax\n\ndouble_numbers_list =  [n*2 for n in numbers_list]\ndouble_numbers_list\n\n[10, 8, 6, 4, 2]\n\n# and, more fancy...\ndouble_even_numbers_list =  [n*2 for n in numbers_list if (n%2 == 0) ]\ndouble_even_numbers_list\n\n[8, 4]\n\n\n\n\n\nBy and large, R is at its best with vectorized functions:\n\ndouble_numbers_vector &lt;- numbers_vector * 2\ndouble_numbers_vector\n\n[1]  2  4  6  8 10\n\n\nLoops are possible too\n\ndouble_numbers_loop &lt;- vector(\"numeric\", length = length(numbers_vector))\n\nfor (i in numbers_vector) {\n  double_numbers_loop[i] &lt;- i * 2\n}\n\nR has copy-on-modify semantics, and so care needs to be taken to avoid writing poorly-performing loops. That means that loops are used comparatively rarely in R."
  },
  {
    "objectID": "skills/a_data_centric_introduction_to_python_pg.html#list-comprehension",
    "href": "skills/a_data_centric_introduction_to_python_pg.html#list-comprehension",
    "title": "A Data-Centric Introduction to Python",
    "section": "List comprehension",
    "text": "List comprehension\nLike a lovely lightweight loop syntax\n\ndouble_numbers_list =  [n*2 for n in numbers_list]\ndouble_numbers_list\n\n[10, 8, 6, 4, 2]\n\n# and, more fancy...\ndouble_even_numbers_list =  [n*2 for n in numbers_list if (n%2 == 0) ]\ndouble_even_numbers_list\n\n[8, 4]"
  },
  {
    "objectID": "skills/a_data_centric_introduction_to_python_pg.html#tabular-data-basics",
    "href": "skills/a_data_centric_introduction_to_python_pg.html#tabular-data-basics",
    "title": "A Data-Centric Introduction to Python",
    "section": "Tabular data basics",
    "text": "Tabular data basics\n\n\nPython\nR\n\n\n\n\nwe’ll do a quick overview of pandas, based on their excellent 10 minute overview\n\nour botw object is a DataFrame, which is based on a dict\n\nlike tibbles, DataFrames can contain columns of different types\n\n\n\n\nbotw.dtypes # find out what we're dealing with\n\nDate                object\nAuthor              object\nYear                 int64\nTitle               object\nISBN                object\nWorldcat            object\nKnowledgeNetwork    object\nDescription         object\ndtype: object\n\nbotw.head() # shows first few rows\n\n         Date  ...                                        Description\n0  06/03/2024  ...  The Code Book: The Secret History of Codes and...\n1  13/03/2024  ...  Here's a book of the week suggestion following...\n2  20/03/2024  ...                                                NaN\n3  27/03/2024  ...                                                NaN\n4  24/04/2024  ...  We're looking at regular expressions in the co...\n\n[5 rows x 8 columns]\n\nbotw.index # effectively counts rows\n\nRangeIndex(start=0, stop=40, step=1)\n\nbotw.columns # gives column names\n\nIndex(['Date', 'Author', 'Year', 'Title', 'ISBN', 'Worldcat',\n       'KnowledgeNetwork', 'Description'],\n      dtype='object')\n\nbotw.describe() # simple summary\n\n              Year\ncount    40.000000\nmean   2009.450000\nstd      13.254801\nmin    1954.000000\n25%    2005.500000\n50%    2012.000000\n75%    2018.000000\nmax    2023.000000\n\nbotw.sort_values(\"Year\") # sorting by column values\n\n          Date  ...                                        Description\n20  21/08/2024  ...  This week's book of the week was suggested by ...\n9   29/05/2024  ...  If last week's book was a paean to the use of ...\n2   20/03/2024  ...                                                NaN\n6   08/05/2024  ...  After the discussion last week about the troub...\n0   06/03/2024  ...  The Code Book: The Secret History of Codes and...\n15  10/07/2024  ...  There are a lot of statistics textbooks out th...\n13  26/06/2024  ...  We're still on a mini-exploration of manufactu...\n12  19/06/2024  ...  Last week's recommendation about agnotology sp...\n26  02/10/2024  ...  How do you communicate risks? For many of us w...\n10  05/06/2024  ...  It's now close to twenty years old, and deals ...\n28  06/11/2024  ...  This week's recommendation comes from Alupha C...\n39  21/02/2025  ...  We're running a hints-and-tips training sessio...\n21  28/08/2024  ...  This week's book of the week was suggested by ...\n7   15/05/2024  ...  If I was posh enough to have a Latin motto, it...\n32  04/12/2024  ...  Nicholas Fethers, a Senior Information Analyst...\n1   13/03/2024  ...  Here's a book of the week suggestion following...\n22  04/09/2024  ...  This week's book of the week was suggested by ...\n38  14/02/2025  ...  This is a remarkable book, which gathers toget...\n18  07/08/2024  ...  This is an excellent introduction to disease g...\n16  17/07/2024  ...  This book suggestion comes from a conversation...\n34  17/01/2025  ...  This week's book of the week is a personal rec...\n11  12/06/2024  ...  While the word [agnotology](https://simple.wik...\n19  14/08/2024  ...  This is a fun and thought-provoking set of ess...\n35  24/01/2025  ...  Ebrahim Ghaderi, a healthcare scientist at Pub...\n3   27/03/2024  ...                                                NaN\n17  31/07/2024  ...  If you've ever been stunned by an unexpectedly...\n36  31/01/2025  ...  Brian Orpin, a team manager from PHS writes wi...\n31  27/11/2024  ...  Colin Smith, an information analyst at NHS GGC...\n4   24/04/2024  ...  We're looking at regular expressions in the co...\n8   22/05/2024  ...  A love-letter to the power of domain knowledge...\n14  03/07/2024  ...  This week's BotW suggestion comes from Anna Sc...\n5   01/05/2024  ...  Anyone who works with data knows that our data...\n23  11/09/2024  ...  Rosalyn Pearson, a Senior Information Analyst ...\n24  18/09/2024  ...  A possibly-controversial choice this week, wit...\n29  13/11/2024  ...  This is a high-risk recommendation, because I'...\n30  20/11/2024  ...  This week's recommendation comes from Louise S...\n25  25/09/2024  ...  A recommendation this week from Vasudha Singh,...\n27  30/10/2024  ...  This week's recommendation comes from Kelsey P...\n33  10/01/2025  ...   Rita Nogueira,  a Senior Information Analyst ...\n37  07/02/2025  ...  We get asked for helpful R resources very regu...\n\n[40 rows x 8 columns]\n\nbotw[\"Date\"] # selecting a column and creating a series\n\n0     06/03/2024\n1     13/03/2024\n2     20/03/2024\n3     27/03/2024\n4     24/04/2024\n5     01/05/2024\n6     08/05/2024\n7     15/05/2024\n8     22/05/2024\n9     29/05/2024\n10    05/06/2024\n11    12/06/2024\n12    19/06/2024\n13    26/06/2024\n14    03/07/2024\n15    10/07/2024\n16    17/07/2024\n17    31/07/2024\n18    07/08/2024\n19    14/08/2024\n20    21/08/2024\n21    28/08/2024\n22    04/09/2024\n23    11/09/2024\n24    18/09/2024\n25    25/09/2024\n26    02/10/2024\n27    30/10/2024\n28    06/11/2024\n29    13/11/2024\n30    20/11/2024\n31    27/11/2024\n32    04/12/2024\n33    10/01/2025\n34    17/01/2025\n35    24/01/2025\n36    31/01/2025\n37    07/02/2025\n38    14/02/2025\n39    21/02/2025\nName: Date, dtype: object\n\nbotw[2:4] # subsetting by index using a slice and returning a DataFrame\n\n         Date          Author  ...  KnowledgeNetwork Description\n2  20/03/2024   David Oldroyd  ...               NaN         NaN\n3  27/03/2024  Katrine Marcal  ...               NaN         NaN\n\n[2 rows x 8 columns]\n\nbotw[[\"Date\"]] # subsetting entire columns\n\n          Date\n0   06/03/2024\n1   13/03/2024\n2   20/03/2024\n3   27/03/2024\n4   24/04/2024\n5   01/05/2024\n6   08/05/2024\n7   15/05/2024\n8   22/05/2024\n9   29/05/2024\n10  05/06/2024\n11  12/06/2024\n12  19/06/2024\n13  26/06/2024\n14  03/07/2024\n15  10/07/2024\n16  17/07/2024\n17  31/07/2024\n18  07/08/2024\n19  14/08/2024\n20  21/08/2024\n21  28/08/2024\n22  04/09/2024\n23  11/09/2024\n24  18/09/2024\n25  25/09/2024\n26  02/10/2024\n27  30/10/2024\n28  06/11/2024\n29  13/11/2024\n30  20/11/2024\n31  27/11/2024\n32  04/12/2024\n33  10/01/2025\n34  17/01/2025\n35  24/01/2025\n36  31/01/2025\n37  07/02/2025\n38  14/02/2025\n39  21/02/2025\n\nbotw.loc[4] # subsetting by index using a slice and returning a series\n\nDate                                                       24/04/2024\nAuthor                                                       Tom Lean\nYear                                                             2016\nTitle               Electronic Dreams: How 1980s Britain Learned t...\nISBN                                                   978-1472918338\nWorldcat                  https://search.worldcat.org/title/907966036\nKnowledgeNetwork                                                  NaN\nDescription         We're looking at regular expressions in the co...\nName: 4, dtype: object\n\nbotw.loc[4, [\"Author\", \"Year\"]] # subsetting by index and columns and returning a DataFrame\n\nAuthor    Tom Lean\nYear          2016\nName: 4, dtype: object\n\nbotw[botw[\"Year\"] &gt; 2010].sort_values(\"Year\") # subsetting by years, and sorting\n\n          Date  ...                                        Description\n1   13/03/2024  ...  Here's a book of the week suggestion following...\n18  07/08/2024  ...  This is an excellent introduction to disease g...\n22  04/09/2024  ...  This week's book of the week was suggested by ...\n38  14/02/2025  ...  This is a remarkable book, which gathers toget...\n16  17/07/2024  ...  This book suggestion comes from a conversation...\n11  12/06/2024  ...  While the word [agnotology](https://simple.wik...\n34  17/01/2025  ...  This week's book of the week is a personal rec...\n19  14/08/2024  ...  This is a fun and thought-provoking set of ess...\n35  24/01/2025  ...  Ebrahim Ghaderi, a healthcare scientist at Pub...\n17  31/07/2024  ...  If you've ever been stunned by an unexpectedly...\n4   24/04/2024  ...  We're looking at regular expressions in the co...\n36  31/01/2025  ...  Brian Orpin, a team manager from PHS writes wi...\n31  27/11/2024  ...  Colin Smith, an information analyst at NHS GGC...\n3   27/03/2024  ...                                                NaN\n14  03/07/2024  ...  This week's BotW suggestion comes from Anna Sc...\n8   22/05/2024  ...  A love-letter to the power of domain knowledge...\n5   01/05/2024  ...  Anyone who works with data knows that our data...\n23  11/09/2024  ...  Rosalyn Pearson, a Senior Information Analyst ...\n24  18/09/2024  ...  A possibly-controversial choice this week, wit...\n29  13/11/2024  ...  This is a high-risk recommendation, because I'...\n30  20/11/2024  ...  This week's recommendation comes from Louise S...\n25  25/09/2024  ...  A recommendation this week from Vasudha Singh,...\n27  30/10/2024  ...  This week's recommendation comes from Kelsey P...\n33  10/01/2025  ...   Rita Nogueira,  a Senior Information Analyst ...\n37  07/02/2025  ...  We get asked for helpful R resources very regu...\n\n[25 rows x 8 columns]\n\nbotw[botw[\"Author\"].isin([\"Katrine Marçal\", \"Caroline Criado Perez\"])] # finding matching values\n\n         Date  ...                                        Description\n5  01/05/2024  ...  Anyone who works with data knows that our data...\n\n[1 rows x 8 columns]\n\nbotw.dropna() # removes any missing values in the whole DataFrame\n\n          Date  ...                                        Description\n11  12/06/2024  ...  While the word [agnotology](https://simple.wik...\n14  03/07/2024  ...  This week's BotW suggestion comes from Anna Sc...\n15  10/07/2024  ...  There are a lot of statistics textbooks out th...\n17  31/07/2024  ...  If you've ever been stunned by an unexpectedly...\n20  21/08/2024  ...  This week's book of the week was suggested by ...\n22  04/09/2024  ...  This week's book of the week was suggested by ...\n23  11/09/2024  ...  Rosalyn Pearson, a Senior Information Analyst ...\n26  02/10/2024  ...  How do you communicate risks? For many of us w...\n30  20/11/2024  ...  This week's recommendation comes from Louise S...\n\n[9 rows x 8 columns]\n\nbotw[\"Title\"].str.lower() # returning the title column as a lower-case series\n\n0                                         the code book\n1                                    ghost in the wires\n2                                 the arch of knowledge\n3                        who cooked adam smith's dinner\n4     electronic dreams: how 1980s britain learned t...\n5     invisible women: exposing data bias in a world...\n6                        the mismeasure of man (2nd ed)\n7        being wrong: adventures in the margin of error\n8     bad blood: secrets and lies in a silicon valle...\n9          genesis and development of a scientific fact\n10    in the beginning was the worm: finding the sec...\n11                                   merchants of doubt\n12    harvey's heart: the discovery of blood circula...\n13    dark remedy: the impact of thalidomide and its...\n14                                how emotions are made\n15                       medical statistics at a glance\n16                               the half-life of facts\n17                          weapons of math destruction\n18                disease maps: epidemics on the ground\n19    the utopia of rules: on technology, stupidity,...\n20                           how to lie with statistics\n21     \"clean code: a handbook of agile software cra...\n22                              thinking, fast and slow\n23                      the 7 deadly sins of psychology\n24    what tech calls thinking: an inquiry into the ...\n25    how do you know if you are making a difference...\n26    reckoning with risk: learning to live with unc...\n27    hybrid humans: dispatches from the frontiers o...\n28    asking the right questions: a guide to critica...\n29                                the alignment problem\n30    the devil you know - encounters in forensic ps...\n31    the end of alchemy: money, banking and the fut...\n32                              the checklist manifesto\n33                                      technofeudalism\n34                                   the geek manifesto\n35    'sapiens: a brief history of humankind' and 'h...\n36                           never split the difference\n37                     r for data science (2nd edition)\n38                      field notes on science & nature\n39                                   how to write a lot\nName: Title, dtype: object\n\nbotw[\"Date\"] = pandas.to_datetime(botw[\"Date\"],format='%d/%m/%Y') # fixing publication dates\nbotw.groupby(pd.DatetimeIndex(botw['Date']).month)[[\"Year\"]].mean(\"Year\") # average year of publication by month of botw\n\n             Year\nDate             \n1     2016.500000\n2     2013.666667\n3     2003.000000\n4     2016.000000\n5     2004.400000\n6     2004.500000\n7     2011.500000\n8     1997.000000\n9     2018.000000\n10    2012.000000\n11    2015.750000\n12    2010.000000\n\n\n\n\n\nlibrary(dplyr) # we'll need dplyr for this work\nstr(botw) # shows data types etc\n\nspc_tbl_ [40 × 8] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n $ Date            : chr [1:40] \"06/03/2024\" \"13/03/2024\" \"20/03/2024\" \"27/03/2024\" ...\n $ Author          : chr [1:40] \"Simon Singh\" \"Kevin Mitnick\" \"David Oldroyd\" \"Katrine Marcal\" ...\n $ Year            : chr [1:40] \"1999\" \"2011\" \"1986\" \"2016\" ...\n $ Title           : chr [1:40] \"The Code Book\" \"Ghost in the Wires\" \"The Arch of Knowledge\" \"Who Cooked Adam Smith's Dinner\" ...\n $ ISBN            : chr [1:40] \"978-1857028898\" \"978-0316037723\" \"978-0416013313\" \"978-1846275661\" ...\n $ Worldcat        : chr [1:40] \"https://search.worldcat.org/title/59579840\" \"https://search.worldcat.org/title/773175688\" \"https://search.worldcat.org/title/12663957\" \"https://search.worldcat.org/title/933444501\" ...\n $ KnowledgeNetwork: chr [1:40] NA NA NA NA ...\n $ Description     : chr [1:40] \"The Code Book: The Secret History of Codes and Code-Breaking a book by . (bookshop.org) (to buy online but supp\"| __truncated__ \"Here's a book of the week suggestion following on from the codes theme from last time. It's the autobiography o\"| __truncated__ NA NA ...\n - attr(*, \"spec\")=\n  .. cols(\n  ..   Date = col_character(),\n  ..   Author = col_character(),\n  ..   Year = col_character(),\n  ..   Title = col_character(),\n  ..   ISBN = col_character(),\n  ..   Worldcat = col_character(),\n  ..   KnowledgeNetwork = col_character(),\n  ..   Description = col_character()\n  .. )\n - attr(*, \"problems\")=&lt;externalptr&gt; \n\nhead(botw) # shows first few rows\n\n# A tibble: 6 × 8\n  Date       Author      Year  Title ISBN  Worldcat KnowledgeNetwork Description\n  &lt;chr&gt;      &lt;chr&gt;       &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt;    &lt;chr&gt;            &lt;chr&gt;      \n1 06/03/2024 Simon Singh 1999  The … 978-… https:/… &lt;NA&gt;             The Code B…\n2 13/03/2024 Kevin Mitn… 2011  Ghos… 978-… https:/… &lt;NA&gt;             Here's a b…\n3 20/03/2024 David Oldr… 1986  The … 978-… https:/… &lt;NA&gt;             &lt;NA&gt;       \n4 27/03/2024 Katrine Ma… 2016  Who … 978-… https:/… &lt;NA&gt;             &lt;NA&gt;       \n5 24/04/2024 Tom Lean    2016  Elec… 978-… https:/… &lt;NA&gt;             We're look…\n6 01/05/2024 Caroline C… 2019  Invi… 978-… https:/… &lt;NA&gt;             Anyone who…\n\nnrow(botw) # counts rows\n\n[1] 40\n\nnames(botw) # column names\n\n[1] \"Date\"             \"Author\"           \"Year\"             \"Title\"           \n[5] \"ISBN\"             \"Worldcat\"         \"KnowledgeNetwork\" \"Description\"     \n\nsummary(botw)\n\n     Date              Author              Year              Title          \n Length:40          Length:40          Length:40          Length:40         \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n     ISBN             Worldcat         KnowledgeNetwork   Description       \n Length:40          Length:40          Length:40          Length:40         \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n\nbotw |&gt;\n  arrange(Year) # native pipe operator in R. Piped code in Python requires modules\n\n# A tibble: 40 × 8\n   Date       Author     Year  Title ISBN  Worldcat KnowledgeNetwork Description\n   &lt;chr&gt;      &lt;chr&gt;      &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt;    &lt;chr&gt;            &lt;chr&gt;      \n 1 21/08/2024 Darrell H… 1954  How … 978-… https:/… https://nhs.pri… \"This week…\n 2 29/05/2024 Ludwig Fl… 1979… Gene… 978-… https:/… &lt;NA&gt;             \"If last w…\n 3 20/03/2024 David Old… 1986  The … 978-… https:/… &lt;NA&gt;              &lt;NA&gt;      \n 4 08/05/2024 Stephen J… 1996  The … 978-… https:/… &lt;NA&gt;             \"After the…\n 5 06/03/2024 Simon Sin… 1999  The … 978-… https:/… &lt;NA&gt;             \"The Code …\n 6 10/07/2024 Aviva Pet… 2000  Medi… 978-… https:/… https://nhs.pri… \"There are…\n 7 19/06/2024 Andrew Gr… 2001  Harv… 978-… https:/… &lt;NA&gt;             \"Last week…\n 8 26/06/2024 Trent D. … 2001  Dark… 978-… https:/… &lt;NA&gt;             \"We're sti…\n 9 02/10/2024 Gerd Gige… 2002  Reck… 978-… https:/… https://nhs.pri… \"How do yo…\n10 05/06/2024 Andrew Br… 2004  In t… 978-… https:/… &lt;NA&gt;             \"It's now …\n# ℹ 30 more rows\n\nbotw$Date # selecting a column as a vector\n\n [1] \"06/03/2024\" \"13/03/2024\" \"20/03/2024\" \"27/03/2024\" \"24/04/2024\"\n [6] \"01/05/2024\" \"08/05/2024\" \"15/05/2024\" \"22/05/2024\" \"29/05/2024\"\n[11] \"05/06/2024\" \"12/06/2024\" \"19/06/2024\" \"26/06/2024\" \"03/07/2024\"\n[16] \"10/07/2024\" \"17/07/2024\" \"31/07/2024\" \"07/08/2024\" \"14/08/2024\"\n[21] \"21/08/2024\" \"28/08/2024\" \"04/09/2024\" \"11/09/2024\" \"18/09/2024\"\n[26] \"25/09/2024\" \"02/10/2024\" \"30/10/2024\" \"06/11/2024\" \"13/11/2024\"\n[31] \"20/11/2024\" \"27/11/2024\" \"04/12/2024\" \"10/01/2025\" \"17/01/2025\"\n[36] \"24/01/2025\" \"31/01/2025\" \"07/02/2025\" \"14/02/2025\" \"21/02/2025\"\n\nbotw |&gt;\n  slice(3:4) # subsetting by index using slice and returning a tibble Note different indexing behaviour\n\n# A tibble: 2 × 8\n  Date       Author      Year  Title ISBN  Worldcat KnowledgeNetwork Description\n  &lt;chr&gt;      &lt;chr&gt;       &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt;    &lt;chr&gt;            &lt;chr&gt;      \n1 20/03/2024 David Oldr… 1986  The … 978-… https:/… &lt;NA&gt;             &lt;NA&gt;       \n2 27/03/2024 Katrine Ma… 2016  Who … 978-… https:/… &lt;NA&gt;             &lt;NA&gt;       \n\nbotw |&gt;\n  select(Date) # subsetting entire columns\n\n# A tibble: 40 × 1\n   Date      \n   &lt;chr&gt;     \n 1 06/03/2024\n 2 13/03/2024\n 3 20/03/2024\n 4 27/03/2024\n 5 24/04/2024\n 6 01/05/2024\n 7 08/05/2024\n 8 15/05/2024\n 9 22/05/2024\n10 29/05/2024\n# ℹ 30 more rows\n\nas.character(botw[5,]) # subsetting by index and coercing to a vector. This is pretty non-idiomatic in R\n\nn[2] \"Tom Leann[3] \"2016\"                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                \n[4] \"Electronic Dreams: How 1980s Britain Learned to Love the Computernn[6] \"https://search.worldcat.org/titlenn[8] \"We're looking at regular expressions in the community meetup today. Regex, as the wikipedia page suggests, have been around for ages - positively archaeological in computing terms. So for the book of the week this week, I wanted to show off one of the most interesting bits of social history I've read: Tom Lean's Electronic Dreams. Lots of the history of computing is either primarily about the technical details, or is a broadly nostalgic look at obsolete tech. This book doesn't do either of those, instead spending its time giving a concise account of how personal computing worked as a social phenomenon. For example, how did people start getting paid to write computer games? What happened when the BBC got involved in personal computing? What happened to the various promises of digital revolutions as a replacement for manufacturing industries.\"\n\nbotw[5,] |&gt;\n  select(Author, Year) # subsetting by index and columns and returning a tibble\n\n# A tibble: 1 × 2\n  Author   Year \n  &lt;chr&gt;    &lt;chr&gt;\n1 Tom Lean 2016 \n\nbotw |&gt;\n  filter(Year &gt; 2010) |&gt;\n  arrange(Year) # subsetting by filtering years, then sorting using dplyr\n\n# A tibble: 25 × 8\n   Date       Author     Year  Title ISBN  Worldcat KnowledgeNetwork Description\n   &lt;chr&gt;      &lt;chr&gt;      &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt;    &lt;chr&gt;            &lt;chr&gt;      \n 1 13/03/2024 Kevin Mit… 2011  Ghos… 978-… https:/… &lt;NA&gt;             Here's a b…\n 2 07/08/2024 Tom Koch   2011  Dise… 978-… https:/… &lt;NA&gt;             This is an…\n 3 04/09/2024 Daniel Ka… 2011  Thin… 978-… https:/… https://nhs.pri… This week'…\n 4 14/02/2025 Michael C… 2011  Fiel… 978-… https:/… &lt;NA&gt;             This is a …\n 5 12/06/2024 Naomi Ore… 2012  Merc… 978-… https:/… https://nhs.pri… While the …\n 6 17/07/2024 Samuel Ar… 2012  The … 978-… https:/… &lt;NA&gt;             This book …\n 7 17/01/2025 Mark Hend… 2012  The … 978-… https:/… &lt;NA&gt;             This week'…\n 8 14/08/2024 David Gra… 2015  The … 978-… https:/… &lt;NA&gt;             This is a …\n 9 24/01/2025 Yuval Noa… 2015… 'Sap… 978-… https:/… &lt;NA&gt;             Ebrahim Gh…\n10 27/03/2024 Katrine M… 2016  Who … 978-… https:/… &lt;NA&gt;             &lt;NA&gt;       \n# ℹ 15 more rows\n\nbotw[which(botw$Author %in% c(\"Katrine Marçal\", \"Caroline Criado Perez\")),] # finding matching values using base R\n\n# A tibble: 1 × 8\n  Date       Author      Year  Title ISBN  Worldcat KnowledgeNetwork Description\n  &lt;chr&gt;      &lt;chr&gt;       &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt;    &lt;chr&gt;            &lt;chr&gt;      \n1 01/05/2024 Caroline C… 2019  Invi… 978-… https:/… &lt;NA&gt;             Anyone who…\n\nbotw |&gt;\n  tidyr::drop_na() # removes any missing values in the whole tibble\n\n# A tibble: 9 × 8\n  Date       Author      Year  Title ISBN  Worldcat KnowledgeNetwork Description\n  &lt;chr&gt;      &lt;chr&gt;       &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt;    &lt;chr&gt;            &lt;chr&gt;      \n1 12/06/2024 Naomi Ores… 2012  Merc… 978-… https:/… https://nhs.pri… While the …\n2 03/07/2024 Lisa Feldm… 2018  How … 978-… https:/… https://nhs.pri… This week'…\n3 10/07/2024 Aviva Petr… 2000  Medi… 978-… https:/… https://nhs.pri… There are …\n4 31/07/2024 Cathy O'Ne… 2016  Weap… 978-… https:/… https://nhs.pri… If you've …\n5 21/08/2024 Darrell Hu… 1954  How … 978-… https:/… https://nhs.pri… This week'…\n6 04/09/2024 Daniel Kah… 2011  Thin… 978-… https:/… https://nhs.pri… This week'…\n7 11/09/2024 Chris Cham… 2019  The … 978-… https:/… https://nhs.pri… Rosalyn Pe…\n8 02/10/2024 Gerd Giger… 2002  Reck… 978-… https:/… https://nhs.pri… How do you…\n9 20/11/2024 Gwen Adshe… 2021  The … 978-… https:/… https://nhs.pri… This week'…\n\nbotw$Title |&gt;\n  tolower() # returning the title column as a lower-case vector\n\n [1] \"the code book\"                                                                                        \n [2] \"ghost in the wires\"                                                                                   \n [3] \"the arch of knowledge\"                                                                                \n [4] \"who cooked adam smith's dinner\"                                                                       \n [5] \"electronic dreams: how 1980s britain learned to love the computer\"                                    \n [6] \"invisible women: exposing data bias in a world designed for men\"                                      \n [7] \"the mismeasure of man (2nd ed)\"                                                                       \n [8] \"being wrong: adventures in the margin of error\"                                                       \n [9] \"bad blood: secrets and lies in a silicon valley startup\"                                              \n[10] \"genesis and development of a scientific fact\"                                                         \n[11] \"in the beginning was the worm: finding the secrets of life in a tiny hermaphrodite\"                   \n[12] \"merchants of doubt\"                                                                                   \n[13] \"harvey's heart: the discovery of blood circulation\"                                                   \n[14] \"dark remedy: the impact of thalidomide and its revival as a vital medicine\"                           \n[15] \"how emotions are made\"                                                                                \n[16] \"medical statistics at a glance\"                                                                       \n[17] \"the half-life of facts\"                                                                               \n[18] \"weapons of math destruction\"                                                                          \n[19] \"disease maps: epidemics on the ground\"                                                                \n[20] \"the utopia of rules: on technology, stupidity, and the secret joys of bureaucracy\"                    \n[21] \"how to lie with statistics\"                                                                           \n[22] \"\\\"clean code: a handbook of agile software craftsmanship\\\"\"                                           \n[23] \"thinking, fast and slow\"                                                                              \n[24] \"the 7 deadly sins of psychology\"                                                                      \n[25] \"what tech calls thinking: an inquiry into the intellectual bedrock of silicon valley\"                 \n[26] \"how do you know if you are making a difference? a practical handbook for public service organisations\"\n[27] \"reckoning with risk: learning to live with uncertainty\"                                               \n[28] \"hybrid humans: dispatches from the frontiers of man and machine\"                                      \n[29] \"asking the right questions: a guide to critical thinking\"                                             \n[30] \"the alignment problem\"                                                                                \n[31] \"the devil you know - encounters in forensic psychiatry\"                                               \n[32] \"the end of alchemy: money, banking and the future of the global economy\"                              \n[33] \"the checklist manifesto\"                                                                              \n[34] \"technofeudalism\"                                                                                      \n[35] \"the geek manifesto\"                                                                                   \n[36] \"'sapiens: a brief history of humankind' and 'homo deus: a brief history of tomorrow'\"                 \n[37] \"never split the difference\"                                                                           \n[38] \"r for data science (2nd edition)\"                                                                     \n[39] \"field notes on science & nature\"                                                                      \n[40] \"how to write a lot\"                                                                                   \n\nbotw |&gt;\n  mutate(Date = lubridate::dmy(Date)) |&gt; # fixing publication dates\n  group_by(month = lubridate::floor_date(Date, unit = \"month\")) |&gt;\n  summarise(mean_year = mean(as.numeric(Year), na.rm = T)) # average year of publication by month of botw\n\n# A tibble: 12 × 2\n   month      mean_year\n   &lt;date&gt;         &lt;dbl&gt;\n 1 2024-03-01     2003 \n 2 2024-04-01     2016 \n 3 2024-05-01     2011.\n 4 2024-06-01     2004.\n 5 2024-07-01     2012.\n 6 2024-08-01     1997 \n 7 2024-09-01     2018 \n 8 2024-10-01     2012 \n 9 2024-11-01     2016.\n10 2024-12-01     2010 \n11 2025-01-01     2017 \n12 2025-02-01     2014."
  },
  {
    "objectID": "skills/a_data_centric_introduction_to_python_pg.html#plots",
    "href": "skills/a_data_centric_introduction_to_python_pg.html#plots",
    "title": "A Data-Centric Introduction to Python",
    "section": "Plots",
    "text": "Plots\n\n\nPython\nR\n\n\n\nUsing matplotlib\n\nimport matplotlib.pyplot as plt\n\nplt.hist(botw[\"Year\"], bins = [1970, 1980, 1990, 2000, 2010, 2020])\n\nplt.title(\"The KIND network BotW is biased towards newer books\")\n\n\n\n\n\n\n\n\n\n\nlibrary(ggplot2)\n\nbotw |&gt;\n  mutate(Year = readr::parse_number(Year)) |&gt;\n  ggplot() +\n  geom_histogram(aes(x = Year), fill=\"#1F77B4\", binwidth = 10, center = 1985) +\n  ggtitle(\"The KIND network BotW is biased towards newer books\") +\n  theme_minimal()"
  },
  {
    "objectID": "skills/css_javascript_non-web-devs.html",
    "href": "skills/css_javascript_non-web-devs.html",
    "title": "CSS and Javascript for non-web developers",
    "section": "",
    "text": "No feedback found for this session"
  },
  {
    "objectID": "skills/css_javascript_non-web-devs.html#overview",
    "href": "skills/css_javascript_non-web-devs.html#overview",
    "title": "CSS and Javascript for non-web developers",
    "section": "Overview",
    "text": "Overview\n\nCSS and Javascript are central topics for web developers\nAs web tech dominates analytic tech, they’re increasingly of interest to analysts and other knowledge workers\n\ne.g. basically everything is built on browsers (esp. Chromium)\n\n\nspecific examples here are mainly R-ish\n\ntheme-ing Shiny, Rmarkdown, and similar\nbuilding custom Power BI visuals\n\n\nthe take-aways are generic\n\nit’s useful to separate content and style and scripting"
  },
  {
    "objectID": "skills/css_javascript_non-web-devs.html#usual-words-of-warning",
    "href": "skills/css_javascript_non-web-devs.html#usual-words-of-warning",
    "title": "CSS and Javascript for non-web developers",
    "section": "Usual words of warning",
    "text": "Usual words of warning\n\nNo claims about expertise here\n\nthis is a beginner’s session by a beginner \n\ndefinitely no stupid questions in this context\n\n\nit’s also an overview, rather than anything more in-depth\n\nI wouldn’t expect to be that confident around CSS after just this session\n… but it’s a start"
  },
  {
    "objectID": "skills/css_javascript_non-web-devs.html#a-view-from-web-1.0",
    "href": "skills/css_javascript_non-web-devs.html#a-view-from-web-1.0",
    "title": "CSS and Javascript for non-web developers",
    "section": "A view from web 1.0",
    "text": "A view from web 1.0\nJoin me in the year 1998"
  },
  {
    "objectID": "skills/css_javascript_non-web-devs.html#web-1.0-to-whatever-weve-got-now",
    "href": "skills/css_javascript_non-web-devs.html#web-1.0-to-whatever-weve-got-now",
    "title": "CSS and Javascript for non-web developers",
    "section": "Web 1.0 to whatever we’ve got now",
    "text": "Web 1.0 to whatever we’ve got now\n\n\nsource\n\n\n\n\nsource"
  },
  {
    "objectID": "skills/css_javascript_non-web-devs.html#a-view-from-web-1.0-1",
    "href": "skills/css_javascript_non-web-devs.html#a-view-from-web-1.0-1",
    "title": "CSS and Javascript for non-web developers",
    "section": "A view from web 1.0",
    "text": "A view from web 1.0\n\nwritten in HTML\nmixture of content and style and scripting\n\n\n&lt;font face=\"Helvetica, Arial\" size=\"2\"&gt;\n  &lt;font color=\"#000000\"&gt;\n  \"NASA is deeply committed to spreading the unique knowledge that flows from its aeronautics and space research....\"\n  &lt;/font&gt;\n&lt;/font&gt;"
  },
  {
    "objectID": "skills/css_javascript_non-web-devs.html#the-stars-look-very-different-etc-etc",
    "href": "skills/css_javascript_non-web-devs.html#the-stars-look-very-different-etc-etc",
    "title": "CSS and Javascript for non-web developers",
    "section": "The stars look very different, etc, etc",
    "text": "The stars look very different, etc, etc\n\nthe 2023 version is still written in HTML\nmuch longer (10x)\nbut no style information\nand plenty of linked javascript\n\n\n\n&lt;div class=\"margin-bottom-2\"&gt;\n  &lt;h3 class=\"heading-16 line-height-md\"&gt;NASA Kennedy Ready for Artemis II Moon Mission Ground Systems Testing&lt;/h3&gt;\n&lt;/div&gt;"
  },
  {
    "objectID": "skills/css_javascript_non-web-devs.html#wheres-the-style-coming-from",
    "href": "skills/css_javascript_non-web-devs.html#wheres-the-style-coming-from",
    "title": "CSS and Javascript for non-web developers",
    "section": "Where’s the style coming from",
    "text": "Where’s the style coming from\n\nthis atrocity\nlinked from the HTML page\ngives styling info for all the elements included on the page"
  },
  {
    "objectID": "skills/css_javascript_non-web-devs.html#minifying",
    "href": "skills/css_javascript_non-web-devs.html#minifying",
    "title": "CSS and Javascript for non-web developers",
    "section": "Minifying",
    "text": "Minifying\n\nCSS (and JavaScript) are downloaded by the browser\nthe larger the code, the slower the site\nthis is a huge problem\n\n\nminifying is common - reducing the size of the code improves performance"
  },
  {
    "objectID": "skills/css_javascript_non-web-devs.html#unminifying",
    "href": "skills/css_javascript_non-web-devs.html#unminifying",
    "title": "CSS and Javascript for non-web developers",
    "section": "Unminifying",
    "text": "Unminifying\n\n.bg-carbon-black {\n  background-color: #000;\n}\n\n.bg-spacesuit-white {\n  background-color: #fff;\n}\n\n.bg-nasa-red {\n  background-color: #f64137;\n}\n\n\n\n\nselector (what does this style apply to?)\n\ndeclaration (which properties and which values?)\nlook at nasa_css_demin.css"
  },
  {
    "objectID": "skills/css_javascript_non-web-devs.html#so-why-so-complicated",
    "href": "skills/css_javascript_non-web-devs.html#so-why-so-complicated",
    "title": "CSS and Javascript for non-web developers",
    "section": "So why so complicated?",
    "text": "So why so complicated?\n\nthere are lots of things that can be styled with CSS\n\nthat makes things potentially complicated\nbut it also means that styling can be both precise and very radical\n\n\nfrom bare text to something really nice\n\ngrowing ambitions from c.2000-ish / and a bit later\n\nmad impressive CSS"
  },
  {
    "objectID": "skills/css_javascript_non-web-devs.html#lets-have-a-play-with-something-simpler",
    "href": "skills/css_javascript_non-web-devs.html#lets-have-a-play-with-something-simpler",
    "title": "CSS and Javascript for non-web developers",
    "section": "Let’s have a play with something simpler",
    "text": "Let’s have a play with something simpler\n\nW3 Schools"
  },
  {
    "objectID": "skills/css_javascript_non-web-devs.html#elements",
    "href": "skills/css_javascript_non-web-devs.html#elements",
    "title": "CSS and Javascript for non-web developers",
    "section": "Elements?",
    "text": "Elements?\n\n\n&lt;h3 class=\"heading-16 line-height-md\"&gt;\n\n\nname = h3\n\n\nclass = heading-16 line-height-md"
  },
  {
    "objectID": "skills/css_javascript_non-web-devs.html#style",
    "href": "skills/css_javascript_non-web-devs.html#style",
    "title": "CSS and Javascript for non-web developers",
    "section": "Style?",
    "text": "Style?\n\nh3 {\n  color: hotpink;\n  text-align: right;\n}\n\n.key-word{\n    color: red;\n    text-shadow: 2px 2px #558abb;\n    }\n    \n.glossary{\n    background-color: white;\n    color: blue;\n    font-size: 150%;\n    }"
  },
  {
    "objectID": "skills/css_javascript_non-web-devs.html#lack-of-style",
    "href": "skills/css_javascript_non-web-devs.html#lack-of-style",
    "title": "CSS and Javascript for non-web developers",
    "section": "Lack of style",
    "text": "Lack of style\n\n.horrid {\n    animation: blinker 0.1s linear infinite;\n}\n\n@keyframes blinker {\n  50% {\n    opacity: 0;\n  }\n}"
  },
  {
    "objectID": "skills/css_javascript_non-web-devs.html#why-does-this-help",
    "href": "skills/css_javascript_non-web-devs.html#why-does-this-help",
    "title": "CSS and Javascript for non-web developers",
    "section": "Why does this help?",
    "text": "Why does this help?\n\nthe dream of the semantic web\n\nCSS = cascading style sheets\n\ngranular control over styling\n\n\nstrategy for managing complexity\n\nbreak out all the styling information into one place\nget it away from the content"
  },
  {
    "objectID": "skills/css_javascript_non-web-devs.html#an-application-inline-styling",
    "href": "skills/css_javascript_non-web-devs.html#an-application-inline-styling",
    "title": "CSS and Javascript for non-web developers",
    "section": "An application: inline styling",
    "text": "An application: inline styling\n\nI’ll style this text with some css\nI’ll  style this text with some css\n\n\n\nI'll &lt;span style = \"color: red\"&gt; style this text with some css&lt;/span&gt;"
  },
  {
    "objectID": "skills/css_javascript_non-web-devs.html#an-application-linked-css",
    "href": "skills/css_javascript_non-web-devs.html#an-application-linked-css",
    "title": "CSS and Javascript for non-web developers",
    "section": "An application: linked CSS",
    "text": "An application: linked CSS\n\nwe could link a CSS file via the yaml header of this page\n\n\nformat:\n    revealjs:\n        theme: [default, custom.scss]\n\n\nwe could style a single element with inline CSS\n\n\n.reveal .slide-logo {\n        height: 85px !important;\n        width: 300px!important;\n        max-width: unset !important;\n        max-height: unset !important;\n      }\n\n\nand we can add to that single styling\n\n\n.reveal h2 {\n  color: red;\n}"
  },
  {
    "objectID": "skills/css_javascript_non-web-devs.html#five-minutes-of-javascript",
    "href": "skills/css_javascript_non-web-devs.html#five-minutes-of-javascript",
    "title": "CSS and Javascript for non-web developers",
    "section": "Five minutes of Javascript",
    "text": "Five minutes of Javascript\n\nscripting language\nexcellent integration with HTML and CSS\nreally powerful integration with Rmarkdown via htmltools"
  },
  {
    "objectID": "skills/css_javascript_non-web-devs.html#js-in-shiny",
    "href": "skills/css_javascript_non-web-devs.html#js-in-shiny",
    "title": "CSS and Javascript for non-web developers",
    "section": "JS in Shiny",
    "text": "JS in Shiny\n\nlibrary(shiny)\nui &lt;- fluidPage(\n  tags$script(HTML(\"document.write('Hello World');\")),\n  tags$br(), \n  tags$script(src = \"my_script.js\"),\n  tags$br(), \n  includeScript(path = \"my_script2.js\")\n)\nserver &lt;- function(input, output, session) {\n}\nshinyApp(ui, server)"
  },
  {
    "objectID": "skills/css_javascript_non-web-devs.html#custom-bi-visualisations",
    "href": "skills/css_javascript_non-web-devs.html#custom-bi-visualisations",
    "title": "CSS and Javascript for non-web developers",
    "section": "Custom BI visualisations",
    "text": "Custom BI visualisations\n\nnice walkthrough"
  },
  {
    "objectID": "skills/css_javascript_non-web-devs.html#final",
    "href": "skills/css_javascript_non-web-devs.html#final",
    "title": "CSS and Javascript for non-web developers",
    "section": "Final",
    "text": "Final\n\n\ncontent and style and scripting"
  },
  {
    "objectID": "skills/ebm_02.html",
    "href": "skills/ebm_02.html",
    "title": "An introduction to EBM (session 2)",
    "section": "",
    "text": "this session is about the randomized control trial (RCT)\nthe results of RCTs are particularly important in EBM\nwe’ll do a bit of historical work here to show how the RCT developed\nand we’ll identify how key features of RCTs guard against some common errors in medical evidence\nwe’ll also look at some ways that RCTs might conceal errors - they’re certainly not perfect!"
  },
  {
    "objectID": "skills/ebm_02.html#session-outline",
    "href": "skills/ebm_02.html#session-outline",
    "title": "An introduction to EBM (session 2)",
    "section": "",
    "text": "this session is about the randomized control trial (RCT)\nthe results of RCTs are particularly important in EBM\nwe’ll do a bit of historical work here to show how the RCT developed\nand we’ll identify how key features of RCTs guard against some common errors in medical evidence\nwe’ll also look at some ways that RCTs might conceal errors - they’re certainly not perfect!"
  },
  {
    "objectID": "skills/ebm_02.html#exercises",
    "href": "skills/ebm_02.html#exercises",
    "title": "An introduction to EBM (session 2)",
    "section": "Exercises",
    "text": "Exercises\n\nE1: control in the streptomycin trial\nE2: would you take the treatment?\nE3: the rules of an RCT\nE4: cheat your way through a drug trial"
  },
  {
    "objectID": "skills/ebm_02.html#another-big-sentence",
    "href": "skills/ebm_02.html#another-big-sentence",
    "title": "An introduction to EBM (session 2)",
    "section": "Another big sentence",
    "text": "Another big sentence\n\nBecause the randomised trial…is so much more likely to inform us and so much less likely to mislead us, it has become the “gold standard” for judging whether a treatment does more good than harm.” (Sackett et al. 1996)"
  },
  {
    "objectID": "skills/ebm_02.html#lind",
    "href": "skills/ebm_02.html#lind",
    "title": "An introduction to EBM (session 2)",
    "section": "Lind",
    "text": "Lind\n\n\n\nJames Lind’s study design"
  },
  {
    "objectID": "skills/ebm_02.html#clinical-trials",
    "href": "skills/ebm_02.html#clinical-trials",
    "title": "An introduction to EBM (session 2)",
    "section": "Clinical trials",
    "text": "Clinical trials\n\nclinical trial = test of a healthcare intervention\nclinical trials are nothing new:\n\nJames Lind’s anti-scorbotic treatments (Hughes 1975)\nFibiger’s serum diptheria treatment (Hrobjartsson, Gotzsche, and Gluud 1998)\nand lots of similar examples of clinical trials (Clarke 1996)\n\nperhaps surprisingly, clinical trials have been controversial…"
  },
  {
    "objectID": "skills/ebm_02.html#testing-and-doing-harm",
    "href": "skills/ebm_02.html#testing-and-doing-harm",
    "title": "An introduction to EBM (session 2)",
    "section": "Testing and doing harm",
    "text": "Testing and doing harm\n\nit’s hard to show benefits without causing harm\n\nshowing inferiority = causing harm\n\nwe usually seek to avoid harms wherever possible\n\ndifferent ethical frameworks for research and treatment\n\nwe’re in an uncomfortable space of justifying individual harm by group benefits\n\nand there are too many examples where human rights abuses and scientific research have overlapped"
  },
  {
    "objectID": "skills/ebm_02.html#its-also-remarkably-hard-to-find-out-whether-treatments-work",
    "href": "skills/ebm_02.html#its-also-remarkably-hard-to-find-out-whether-treatments-work",
    "title": "An introduction to EBM (session 2)",
    "section": "It’s also remarkably hard to find out whether treatments work",
    "text": "It’s also remarkably hard to find out whether treatments work\n\n\n\nIt’s hard to find out whether trials work"
  },
  {
    "objectID": "skills/ebm_02.html#its-also-remarkably-hard-to-find-out-whether-treatments-work-1",
    "href": "skills/ebm_02.html#its-also-remarkably-hard-to-find-out-whether-treatments-work-1",
    "title": "An introduction to EBM (session 2)",
    "section": "It’s also remarkably hard to find out whether treatments work",
    "text": "It’s also remarkably hard to find out whether treatments work\n\nas well as the ethical issue, we also have an epistemological issue\n\npeople and diseases vary\ntreatments often make small differences to outcomes\nmultifactorial models of outcomes\nmeasurements are imperfect\nvested interests are powerful\n…"
  },
  {
    "objectID": "skills/ebm_02.html#ethics-epistemology-give-rise-to-strong-demands-on-clinical-trials",
    "href": "skills/ebm_02.html#ethics-epistemology-give-rise-to-strong-demands-on-clinical-trials",
    "title": "An introduction to EBM (session 2)",
    "section": "Ethics + epistemology give rise to strong demands on clinical trials",
    "text": "Ethics + epistemology give rise to strong demands on clinical trials\n\nethical concerns (and others) suggest that we should be careful when designing clinical research\notherwise the harm done to trial participants is just harm\n\nwe need to find things out properly to obtain benefits\nthis is why we want to minimise biases"
  },
  {
    "objectID": "skills/ebm_02.html#mrc-1948-as-an-example",
    "href": "skills/ebm_02.html#mrc-1948-as-an-example",
    "title": "An introduction to EBM (session 2)",
    "section": "MRC 1948 as an example",
    "text": "MRC 1948 as an example\n\n“Streptomycin Treatment of Pulmonary Tuberculosis: A Medical Research Council Investigation” (1948)\ndeals with treatment for a serious illness (TB) - there’s some useful context about what the general landscape of TB was like 75 years ago in Bastian (2006)\nvery careful design, and reporting of that design\ninteresting data viz - and some context for the trial itself in Crofton (2006)"
  },
  {
    "objectID": "skills/ebm_02.html#e1-control-in-the-streptomycin-trial",
    "href": "skills/ebm_02.html#e1-control-in-the-streptomycin-trial",
    "title": "An introduction to EBM (session 2)",
    "section": "E1: control in the streptomycin trial",
    "text": "E1: control in the streptomycin trial\n\n\n\n\n\n\nTask\n\n\n\n\nlook at the first two pages of the 1948 streptomycin trial\nplease identify some control strategies used by the trial authors"
  },
  {
    "objectID": "skills/ebm_02.html#control-strategies",
    "href": "skills/ebm_02.html#control-strategies",
    "title": "An introduction to EBM (session 2)",
    "section": "Control strategies",
    "text": "Control strategies\n\nstandardising the trial population\ncontrolling which treatment was used\nrandom allocation to S- or C-group\nmasking\nstandardised assessment\nfollowing-up patients comprehensively\nstatistical analysis"
  },
  {
    "objectID": "skills/ebm_02.html#e2-would-you-take-the-treatment",
    "href": "skills/ebm_02.html#e2-would-you-take-the-treatment",
    "title": "An introduction to EBM (session 2)",
    "section": "E2: would you take the treatment?",
    "text": "E2: would you take the treatment?\n\n\n\nTreatment outcomes"
  },
  {
    "objectID": "skills/ebm_02.html#e2-would-you-take-the-treatment-now",
    "href": "skills/ebm_02.html#e2-would-you-take-the-treatment-now",
    "title": "An introduction to EBM (session 2)",
    "section": "E2: would you take the treatment now?",
    "text": "E2: would you take the treatment now?\n\n\n\nTreatment outcomes"
  },
  {
    "objectID": "skills/ebm_02.html#e2-would-you-take-the-treatment-now-1",
    "href": "skills/ebm_02.html#e2-would-you-take-the-treatment-now-1",
    "title": "An introduction to EBM (session 2)",
    "section": "E2: would you take the treatment now?",
    "text": "E2: would you take the treatment now?\n\n\n\nTreatment outcomes"
  },
  {
    "objectID": "skills/ebm_02.html#the-heart-of-rcts",
    "href": "skills/ebm_02.html#the-heart-of-rcts",
    "title": "An introduction to EBM (session 2)",
    "section": "The heart of RCTs",
    "text": "The heart of RCTs\n\n\n\nRCT method"
  },
  {
    "objectID": "skills/ebm_02.html#e3-the-rules-of-an-rct",
    "href": "skills/ebm_02.html#e3-the-rules-of-an-rct",
    "title": "An introduction to EBM (session 2)",
    "section": "E3: the rules of an RCT",
    "text": "E3: the rules of an RCT\n\nhopefully the last two examples give you a sense of some of the ‘rules’ of an RCT\n\nsome rules about conduct\nsome rules about reporting\n\n\n\n\n\n\n\n\nTask\n\n\n\n\nopen the JamBoard\nlet’s build a set of rules for RCTs"
  },
  {
    "objectID": "skills/ebm_02.html#a-note-on-randomising",
    "href": "skills/ebm_02.html#a-note-on-randomising",
    "title": "An introduction to EBM (session 2)",
    "section": "A note on randomising",
    "text": "A note on randomising\n\nwhy do we randomise patients to groups?\nwhat might happen if we did not randomise?\nhow could we randomise patients to groups?"
  },
  {
    "objectID": "skills/ebm_02.html#e4-cheat-your-way-through-a-drug-trial",
    "href": "skills/ebm_02.html#e4-cheat-your-way-through-a-drug-trial",
    "title": "An introduction to EBM (session 2)",
    "section": "E4: cheat your way through a drug trial",
    "text": "E4: cheat your way through a drug trial\n\nimagine that you wanted to promote a new, but ineffective, drug (call it spurosium) - (Lundh et al. 2017)\nhow could you bend these RCT rules?\n\nhow could we guard against these rules being bent?\nhow could you detect someone trying to bend the rules?\n\n\n\n\n\n\n\n\nTask\n\n\n\n\nadd your thoughts to the the JamBoard"
  },
  {
    "objectID": "skills/ebm_02.html#a-final-thought",
    "href": "skills/ebm_02.html#a-final-thought",
    "title": "An introduction to EBM (session 2)",
    "section": "A final thought",
    "text": "A final thought\n\nRCTs are a really important source of E in EBM - but not the only one (Jefferson and Jørgensen 2018)\nwe’ll encounter many kinds of evidence\n\nsystematic reviews, meta-analyses, and other guidelines are increasingly important\nthere are many instances where we’re unable to perform RCTs\nthere are also many flawed RCTs out there\n\nthat means that we’ll need a proper method for finding and using evidence\n\nit’s more complicated than “find a relevant RCT and act on it”\n\nthat’s for next week…\n\nyou might like to have a look at the core text for next time"
  },
  {
    "objectID": "skills/ebm_02.html#pick-a-paper",
    "href": "skills/ebm_02.html#pick-a-paper",
    "title": "An introduction to EBM (session 2)",
    "section": "Pick a paper",
    "text": "Pick a paper\nWith thanks to the Knowledge Network team at NES, especially Derek Boyle and Alan Gillies, for identifying the following group of short and straightforward RCTS:\n\n\n\n\nAbraham et al. (2019)\nAli et al. (2022)\nChen-Hussey et al. (2013)\nChlibek et al. (2013)\nGallien et al. (2014)\n\n\n\n\n\nGarbutt et al. (2021)\nMaddison et al. (2018)\nTadrous et al. (2020)\nTapiainen et al. (2014)\nTonelli et al. (2015)"
  },
  {
    "objectID": "skills/ebm_04.html",
    "href": "skills/ebm_04.html",
    "title": "An introduction to EBM (session 4)",
    "section": "",
    "text": "this session is about core EBM statistics:\n\nGreenhalgh’s three numbers (Greenhalgh 2019, 54):\n\nsample size\nduration of follow-up\ncompleteness of follow-up\n\n\nconfidence intervals\np-values\neffect sizes"
  },
  {
    "objectID": "skills/ebm_04.html#session-outline",
    "href": "skills/ebm_04.html#session-outline",
    "title": "An introduction to EBM (session 4)",
    "section": "",
    "text": "this session is about core EBM statistics:\n\nGreenhalgh’s three numbers (Greenhalgh 2019, 54):\n\nsample size\nduration of follow-up\ncompleteness of follow-up\n\n\nconfidence intervals\np-values\neffect sizes"
  },
  {
    "objectID": "skills/ebm_04.html#exercises",
    "href": "skills/ebm_04.html#exercises",
    "title": "An introduction to EBM (session 4)",
    "section": "Exercises",
    "text": "Exercises\n\nE1: what’s this all for?\nE2: ways to cheat\nE3: putting it all together"
  },
  {
    "objectID": "skills/ebm_04.html#this-is-non-technical-and-non-comprehensive",
    "href": "skills/ebm_04.html#this-is-non-technical-and-non-comprehensive",
    "title": "An introduction to EBM (session 4)",
    "section": "This is non-technical, and non-comprehensive",
    "text": "This is non-technical, and non-comprehensive\n\nmedical statistics is big and complicated\n\nhundreds of statistical tests\nmany are formidably complicated\n\nreally nice advice in chapter 5 of Greenhalgh’s book\n\n\nso we’re just looking at a few core areas\n\n\nstatistics are widely abused in the health literature\nthis gives rise to worries about statistics in general terms\n\ne.g. suggestions that the use of statistics might be driving a mistaken approach to clinical research in very general terms (Heneghan, Goldacre, and Mahtani 2017)"
  },
  {
    "objectID": "skills/ebm_04.html#e1-whats-this-all-for",
    "href": "skills/ebm_04.html#e1-whats-this-all-for",
    "title": "An introduction to EBM (session 4)",
    "section": "E1: what’s this all for?",
    "text": "E1: what’s this all for?\n\n\n\n\n\n\nTask\n\n\n\n\nPlease review the abstract of Smith (2003) available at bmj.com. What point is the author trying to make?\nPlease now review the abstract of Yeh et al. (2018) available at bmj.com. What point are the authors trying to make?"
  },
  {
    "objectID": "skills/ebm_04.html#finding-out-if-treatments-work-is-hard",
    "href": "skills/ebm_04.html#finding-out-if-treatments-work-is-hard",
    "title": "An introduction to EBM (session 4)",
    "section": "Finding out if treatments work is hard",
    "text": "Finding out if treatments work is hard\n\nmost examples are not like the parachute case (Xu and Prasad 2022)\n\nmost treatment effects are subtle\nstatistics are a vital way of being more sure about the results we get\n\n\n\n\n\n\n\nNote\n\n\n\n\nthe Number Needed to Treat is the number of patients that need to be treated to prevent an undesirable outcome\n\n\n\n\nNNTs are often startlingly high"
  },
  {
    "objectID": "skills/ebm_04.html#introduction-1",
    "href": "skills/ebm_04.html#introduction-1",
    "title": "An introduction to EBM (session 4)",
    "section": "Introduction",
    "text": "Introduction\n\nas treatment effects are subtle, we often need to use large groups of participants\n\nas we’ll see, there are concerns about margins of error that explain this - later!\n\n\ntrials have grown:\n\nMRC streptomycin study, 1948, 109 participants (“Streptomycin Treatment of Pulmonary Tuberculosis: A Medical Research Council Investigation” 1948)\n\nWOSCOPS, 1995, 6595 participants (Shepherd 1995)\n\nTRITON, 2009, 3534 participants (Montalescot et al. 2009)\n\nRE-LY, 2010, 18113 participants (Wallentin et al. 2010)\n\n\n\nsee also worries about the logic of large trials in medicine (Penston 2005) and elsewhere (Lortie-Forgues and Inglis 2019) - “often uninformative”"
  },
  {
    "objectID": "skills/ebm_04.html#the-problem-of-growing-sample-sizes",
    "href": "skills/ebm_04.html#the-problem-of-growing-sample-sizes",
    "title": "An introduction to EBM (session 4)",
    "section": "The problem of growing sample sizes",
    "text": "The problem of growing sample sizes\n\nrecruitment is hard\nlarger n = harder recruitment\n\nmay end up relying on heterogeneous population\n\ne.g. Montalescot et al. (2009)\n\n3534 participants\n707 sites\n30 countries"
  },
  {
    "objectID": "skills/ebm_04.html#confidence-intervals",
    "href": "skills/ebm_04.html#confidence-intervals",
    "title": "An introduction to EBM (session 4)",
    "section": "Confidence intervals",
    "text": "Confidence intervals\n\nor, why make things so large?\nintuition: the larger our sample, the more precise our estimates"
  },
  {
    "objectID": "skills/ebm_04.html#confidence-intervals-1",
    "href": "skills/ebm_04.html#confidence-intervals-1",
    "title": "An introduction to EBM (session 4)",
    "section": "Confidence intervals",
    "text": "Confidence intervals\n\nimagine we’re evaluating an intervention in a small population\n10% of the treatment arm get some outcome, compared to 12% in the control arm\nrelative risk in this trial population = 83%\n\nQ: what will the relative risk be in the whole population?"
  },
  {
    "objectID": "skills/ebm_04.html#the-idea-of-sampling-error",
    "href": "skills/ebm_04.html#the-idea-of-sampling-error",
    "title": "An introduction to EBM (session 4)",
    "section": "The idea of sampling error",
    "text": "The idea of sampling error\n\nour measure of risk in our small population sample might not accurately reflect the true population risk\n\nAKA standard error\n\n\nwe can’t say exactly how accurate our sample estimate is\n\nunless we know the true population risk\n\n\nbut we can give an interval estimate for our measurement, effectively describing likely lower and upper values within which the estimate might lie"
  },
  {
    "objectID": "skills/ebm_04.html#confidence-intervals-2",
    "href": "skills/ebm_04.html#confidence-intervals-2",
    "title": "An introduction to EBM (session 4)",
    "section": "Confidence intervals",
    "text": "Confidence intervals\n\nfor our example with 83% relative risk, our confidence interval might be between 75% and 91%\n\nwe could say “the chances are that our ‘real’ population risk would be between 75% and 91%”\n\n\nwe conventionally use 95% confidence for these kinds of EBM estimates of confidence\n\neffectively, saying that there’s a 95% chance the ‘true’ population risk is contained within this interval\nyou might see these expressed as 95% CIs in print\n\n\n\nSedgwick (2014b) is a good next-step reading on CIs"
  },
  {
    "objectID": "skills/ebm_04.html#e2-ways-to-cheat",
    "href": "skills/ebm_04.html#e2-ways-to-cheat",
    "title": "An introduction to EBM (session 4)",
    "section": "E2: ways to cheat",
    "text": "E2: ways to cheat\n\n\n\n\n\n\nTask\n\n\n\n\nTake Greenhalgh’s list of ways to cheat\n\nAre there any areas where your paper from the previous session might be faulty in this way?"
  },
  {
    "objectID": "skills/ebm_04.html#introduction-2",
    "href": "skills/ebm_04.html#introduction-2",
    "title": "An introduction to EBM (session 4)",
    "section": "Introduction",
    "text": "Introduction\n\nimagine that you’re looking at a 95% CI that is reported as follows:\n\n“the relative risk of death in the intervention group compared to the control group was 92% (95% CI 72-112%)”\n\nwhat does this result mean to you?\nis there a real reduction of death in the intervention group?\n\n\n\n\nthat wide confidence interval means the population risk might well be 100% - the control group might not prevent death at all\nwhat does this mean for us?"
  },
  {
    "objectID": "skills/ebm_04.html#two-kinds-of-statistical-work",
    "href": "skills/ebm_04.html#two-kinds-of-statistical-work",
    "title": "An introduction to EBM (session 4)",
    "section": "two kinds of statistical work",
    "text": "two kinds of statistical work\n\ndescriptive statistics = what do these numbers look like\ninferential statistics = what do these numbers tell us"
  },
  {
    "objectID": "skills/ebm_04.html#hypothesis-testing",
    "href": "skills/ebm_04.html#hypothesis-testing",
    "title": "An introduction to EBM (session 4)",
    "section": "hypothesis testing",
    "text": "hypothesis testing\n\ntechnically, RCT reports are hypothesis tests\n\nhypothesis = educated guess about outcomes\nhypothesis testing is definitely part of inferential statistics\nhypothesis vs null hypothesis\n\nwhat we think will happen if the treatment works\nwhat we think will happen if the treatment does not work"
  },
  {
    "objectID": "skills/ebm_04.html#does-the-data-support-the-hypothesis",
    "href": "skills/ebm_04.html#does-the-data-support-the-hypothesis",
    "title": "An introduction to EBM (session 4)",
    "section": "does the data support the hypothesis?",
    "text": "does the data support the hypothesis?\n\ndoes the evidence (our sample data) support the hypothesis, or the null hypothesis?\nwe could use a two-tailed statistical test to compare the support for each\nthese tests give us a P-value, which is:\n\n\n…the probability of obtaining the observed difference between treatment groups…if there was no difference between treatment groups (Sedgwick 2014a)"
  },
  {
    "objectID": "skills/ebm_04.html#p-values-tell-us-about-support",
    "href": "skills/ebm_04.html#p-values-tell-us-about-support",
    "title": "An introduction to EBM (session 4)",
    "section": "P-values tell us about support",
    "text": "P-values tell us about support\n\nassume the null hypothesis is true\n\nthat our treatment does nothing\n\n\nthe P-value tells us how often we’d expect to get results like our real results just by chance\nP-values are probabilities, so reported as a number between 0 and 1\n\ncritical level of significance = the arbitrary level below which P-values are assumed to be convincing\n\nusually P = 0.05 - below that, the results are said to be statistically significant\n\n\nP-values tell us whether our data supports our hypothesis (when P &lt; 0.05) or whether it supports the null hypothesis (when P is &gt; 0.05)"
  },
  {
    "objectID": "skills/ebm_04.html#introduction-3",
    "href": "skills/ebm_04.html#introduction-3",
    "title": "An introduction to EBM (session 4)",
    "section": "Introduction",
    "text": "Introduction\n\nan important third statistical tool deals with effect sizes\nso far, we’ve just looked at individual trial results\nfrom now on, though, we’re going to look at pooled results\nwe’ll need a way of comparing outcomes between trials"
  },
  {
    "objectID": "skills/ebm_04.html#cohens-d",
    "href": "skills/ebm_04.html#cohens-d",
    "title": "An introduction to EBM (session 4)",
    "section": "Cohen’s d",
    "text": "Cohen’s d\n\ninformally, calculated by taking the difference between (control and treatment) groups, and dividing by the standard deviation\n\nbecause we’re being non-technical in this session, we can think of the SD as a measure of variation or spread\nusually positive (absolute value reported)\n\n\nthat means that d expresses the effect size in terms of the natural variation within the study population\n\ntry playing with the demonstration on rpsychologist.com\n\n\n\nanything over 1 is massive (a whole standard deviation difference), anything under 0.2 is tiny\nthe third reference to Sedgwick (2015) - really recommend that sequence of articles for the technical questions about EBM"
  },
  {
    "objectID": "skills/ebm_04.html#e3-putting-it-all-together",
    "href": "skills/ebm_04.html#e3-putting-it-all-together",
    "title": "An introduction to EBM (session 4)",
    "section": "E3: putting it all together",
    "text": "E3: putting it all together\n\n\n\n\n\n\nTask\n\n\n\n\nhere’s a timely reference: (The RECOVERY Collaborative Group 2020)?\nwhat do you think here about the:\n\nsample size\nthe duration and completeness of follow-up\nthe use of confidence intervals\nthe use of p-values\nany discussion of effect sizes"
  },
  {
    "objectID": "skills/effective_writing_tips_tricks.html",
    "href": "skills/effective_writing_tips_tricks.html",
    "title": "Effective writing tips and tricks",
    "section": "",
    "text": "No feedback found for this session"
  },
  {
    "objectID": "skills/effective_writing_tips_tricks.html#about-this-session",
    "href": "skills/effective_writing_tips_tricks.html#about-this-session",
    "title": "Effective writing tips and tricks",
    "section": "About this session",
    "text": "About this session\n\nthis session is about writing for analytical purposes\nthis is an intermediate-level session, so it’s aimed at people with prior professional experience of analytical writing\nit’s largely hints-and-tips, rather than deeply philosophical\nit’s based on Paul J. Silva’s excellent 2007 book How To Write A Lot, with appropriate translations to non-academic writing\nit’s also one of the rare training sessions with a single right answer: schedule your writing"
  },
  {
    "objectID": "skills/effective_writing_tips_tricks.html#writing-is-hard",
    "href": "skills/effective_writing_tips_tricks.html#writing-is-hard",
    "title": "Effective writing tips and tricks",
    "section": "Writing is hard",
    "text": "Writing is hard\n\nwriting is hard\nbut we also make writing much harder than it needs to be\nthat makes writing unpleasant\nwhich produces poor results\nand there’s a doom-loop: those self-inflicted worries make subsequent writing harder"
  },
  {
    "objectID": "skills/effective_writing_tips_tricks.html#writing-is-a-teachable-skill",
    "href": "skills/effective_writing_tips_tricks.html#writing-is-a-teachable-skill",
    "title": "Effective writing tips and tricks",
    "section": "Writing is a teachable skill",
    "text": "Writing is a teachable skill\n\nunderstand what writing is\nwhat you need to write\nwhen to write\nschedule, plan, and monitor\nkeep the style simple"
  },
  {
    "objectID": "skills/effective_writing_tips_tricks.html#what-writing-is",
    "href": "skills/effective_writing_tips_tricks.html#what-writing-is",
    "title": "Effective writing tips and tricks",
    "section": "What writing is",
    "text": "What writing is\n\nanything that gets the project done counts as writing\nanything that doesn’t, doesn’t\nthat includes planning, scheduling, thinking, etc. Anything that ultimately leads to getting words on the page"
  },
  {
    "objectID": "skills/effective_writing_tips_tricks.html#what-you-need-to-write",
    "href": "skills/effective_writing_tips_tricks.html#what-you-need-to-write",
    "title": "Effective writing tips and tricks",
    "section": "What you need to write",
    "text": "What you need to write\n\nloads of utter bilge written about this, but basically two necessary components only:\n\ntime (we’ll discuss below)\nspace\n\n\nyou probably can’t fit a writing project into your current schedule without some readjustments"
  },
  {
    "objectID": "skills/effective_writing_tips_tricks.html#i-dont-feel-like-writing",
    "href": "skills/effective_writing_tips_tricks.html#i-dont-feel-like-writing",
    "title": "Effective writing tips and tricks",
    "section": "I don’t feel like writing",
    "text": "I don’t feel like writing\nSilva 2007: 25: you write three times as much if you schedule your writing time, and force yourself to write"
  },
  {
    "objectID": "skills/effective_writing_tips_tricks.html#schedule-plan-and-monitor",
    "href": "skills/effective_writing_tips_tricks.html#schedule-plan-and-monitor",
    "title": "Effective writing tips and tricks",
    "section": "Schedule, plan, and monitor",
    "text": "Schedule, plan, and monitor\n\nmassive blocks of time are a trap (binge writing)\nwhat you need is a schedule: “the terrible power of habit”\nadd a regular writing slot to your schedule:\n\ndo it it Teams\nstick to it\ndon’t give it up for anything\nmonitor your compliance"
  },
  {
    "objectID": "skills/effective_writing_tips_tricks.html#what-to-do-with-your-schedule",
    "href": "skills/effective_writing_tips_tricks.html#what-to-do-with-your-schedule",
    "title": "Effective writing tips and tricks",
    "section": "What to do with your schedule?",
    "text": "What to do with your schedule?\n\nfigure out your project aim(s): each a single sentence that describes what the project needs to do\nbreak those aims down into a plan\nuse the plan to give yourself concrete daily goals\nmonitor those goals and reward yourself for meeting them\nrewards can be anything except days off writing"
  },
  {
    "objectID": "skills/effective_writing_tips_tricks.html#concrete-daily-goals",
    "href": "skills/effective_writing_tips_tricks.html#concrete-daily-goals",
    "title": "Effective writing tips and tricks",
    "section": "Concrete daily goals",
    "text": "Concrete daily goals\n\nwrite 50 words in section xxxx\nplan section headings for xxxx\nreview data and plan maps for xxxx\nwrite text around maps for xxxx\nproof-read section xxxx"
  },
  {
    "objectID": "skills/effective_writing_tips_tricks.html#more-on-planning",
    "href": "skills/effective_writing_tips_tricks.html#more-on-planning",
    "title": "Effective writing tips and tricks",
    "section": "More on planning",
    "text": "More on planning\n\nwe can usually find/steal a formula to work from by reading work with similar aims\nsteal their structure and populate it to suit your project aim\nget feedback on your plan"
  },
  {
    "objectID": "skills/effective_writing_tips_tricks.html#recursive-planning",
    "href": "skills/effective_writing_tips_tricks.html#recursive-planning",
    "title": "Effective writing tips and tricks",
    "section": "Recursive planning",
    "text": "Recursive planning\n\ntake your project aim\nyou now need 3-5 points that:\n\nsupport/explain/make up your main aim\neach point should be a simple sentence\n\n\nthen repeat: 3-5 points for each point, and so on\n\nyou should almost certainly stop one layer of detail before you think you’ve said enough"
  },
  {
    "objectID": "skills/effective_writing_tips_tricks.html#write-to-the-plan",
    "href": "skills/effective_writing_tips_tricks.html#write-to-the-plan",
    "title": "Effective writing tips and tricks",
    "section": "Write to the plan",
    "text": "Write to the plan\n\nwrite a horrible first draft\n\nfill-in-the-blanks of your plan\ndon’t sweat anything other than the main aim: does this work stick to the topic, and cover all the ground you need to\n\n\nschedule time to re-work this draft into a second-draft\n\nmake it simple: prefer cutting rather than adding\nput in into English\n\n\nget feedback on that approximate second draft"
  },
  {
    "objectID": "skills/effective_writing_tips_tricks.html#push-the-message",
    "href": "skills/effective_writing_tips_tricks.html#push-the-message",
    "title": "Effective writing tips and tricks",
    "section": "Push the message",
    "text": "Push the message\n\nyou’re definitely an expert\nbut your reader doesn’t need to be an expert\n\nand\n\nyou’ve worked for hours on this\nbut your reader skimmed\n\nand\n\nyou know how each piece of the work will eventually fit into the work as a whole\nbut your reader doesn’t\n\nand\n\nyou think your graphs and tables speak for themselves\nbut your reader doesn’t know the context, and doesn’t understand what you’re trying to show them"
  },
  {
    "objectID": "skills/effective_writing_tips_tricks.html#style-tips",
    "href": "skills/effective_writing_tips_tricks.html#style-tips",
    "title": "Effective writing tips and tricks",
    "section": "Style tips",
    "text": "Style tips\n\nmind the technical jargon\n\nminimise, standardise, and define\n\n\nremove\n\nthe non-technical jargon\nparasitic intensifiers (quite, totally, very, basically, completely, …)\n\n\nparallel sentences are excellent for analytics\n\n“In the first group, something happened. In the second group, nothing happened.”\n“We did a thing. Those with cars responded. Those without cars did not.”"
  },
  {
    "objectID": "skills/effective_writing_tips_tricks.html#collaborative-complaining-and-support",
    "href": "skills/effective_writing_tips_tricks.html#collaborative-complaining-and-support",
    "title": "Effective writing tips and tricks",
    "section": "Collaborative complaining and support",
    "text": "Collaborative complaining and support\n\nuse the KIND network\nget a work collaborator"
  },
  {
    "objectID": "skills/presenting.html",
    "href": "skills/presenting.html",
    "title": "Presenting",
    "section": "",
    "text": "5 previous attendees have left feedback\n100% would recommend this session to a colleague\n100% said that this session was pitched correctly\n\n\n\n\n\n\n\n\n\n\n\nThree random comments from previous attendees\n\n\n\n\nChallenging 1:1 presentation practice, but really helpful when receiving feedback\nClear advice to put into practice during the session (but maybe give advance warning about presenting in pairs, as I imagined it would be to the whole group and that was a terrifying thought!)\nUseful exercise was incorporated into the session but would have been helpful if someone fed back to the larger group. Overall I thought it was a good session with some helpful hints/tips."
  },
  {
    "objectID": "skills/presenting.html#previous-attendees-have-said",
    "href": "skills/presenting.html#previous-attendees-have-said",
    "title": "Presenting",
    "section": "",
    "text": "5 previous attendees have left feedback\n100% would recommend this session to a colleague\n100% said that this session was pitched correctly\n\n\n\n\n\n\n\n\n\n\n\nThree random comments from previous attendees\n\n\n\n\nChallenging 1:1 presentation practice, but really helpful when receiving feedback\nClear advice to put into practice during the session (but maybe give advance warning about presenting in pairs, as I imagined it would be to the whole group and that was a terrifying thought!)\nUseful exercise was incorporated into the session but would have been helpful if someone fed back to the larger group. Overall I thought it was a good session with some helpful hints/tips."
  },
  {
    "objectID": "skills/presenting.html#who-is-this-session-for",
    "href": "skills/presenting.html#who-is-this-session-for",
    "title": "Presenting",
    "section": "Who is this session for?",
    "text": "Who is this session for?\n\n\n\n\n\n\nPlease note\n\n\n\n\n\n\nyou will need to do a little bit of presenting during the session\n\n\n\n\n\nit’s a beginner’s session, so it’s aimed at people:\n\nwho don’t do much presenting, or who have never presented before\nor who have had negative experiences of presenting\nor would like to improve their presentation skills, but don’t know where to start\n\n\nit’s practical, so we’ll do a mixture of strategy and practice during the session"
  },
  {
    "objectID": "skills/presenting.html#session-outline",
    "href": "skills/presenting.html#session-outline",
    "title": "Presenting",
    "section": "Session outline",
    "text": "Session outline\n\nwhy think about presentation skills?\na minimal set of advice\nan opportunity to practice\nadditional advice, questions, and chatter"
  },
  {
    "objectID": "skills/presenting.html#a-note-about-trust",
    "href": "skills/presenting.html#a-note-about-trust",
    "title": "Presenting",
    "section": "A note about trust",
    "text": "A note about trust\n\nmost of us find presenting hard\nin this session, please be gentle:\n\ndon’t mock or undermine\ndon’t play devil’s advocate\ngive people time\n\n\nexpressly, don’t record any of this session in any way"
  },
  {
    "objectID": "skills/presenting.html#why-think-about-presentation-skills",
    "href": "skills/presenting.html#why-think-about-presentation-skills",
    "title": "Presenting",
    "section": "Why think about presentation skills?",
    "text": "Why think about presentation skills?\n\npossibly the ultimate in transferable skills\nmost people are terrible at presenting\n\npresenting differs from listening in non-obvious ways\n\n\nbut you can improve easily and cheaply"
  },
  {
    "objectID": "skills/presenting.html#a-minimal-set-of-advice",
    "href": "skills/presenting.html#a-minimal-set-of-advice",
    "title": "Presenting",
    "section": "A minimal set of advice",
    "text": "A minimal set of advice\n\nBe simple\nBe keen\nBe human"
  },
  {
    "objectID": "skills/presenting.html#be-simple",
    "href": "skills/presenting.html#be-simple",
    "title": "Presenting",
    "section": "Be simple",
    "text": "Be simple\n\nif in doubt, take it out\n\nWhy be simple?\n\nthe asymmetry of presentation:\n\nyou’ll know much more than your audience\nso you’ll worry about details, not basics\nbut your audience will need the basics, not the details\n\n\nsimple = clear\nHow to be simple?\n\napply a hierarchy\nrecursive planning\nuse your constraints\nThe hierarchy\n\nyou’ll need a single sentence that sums up your presentation\n\neverything else comes from this\n\n\nideally you’ll have it in mind before you start\n\nbut it often changes\n\n\nthis is non-negotiable, and much harder than it looks\nTask: make a sentence\n\nyou’re going to present something you did this week at work\ncan you sum it up in one sentence?\n\nthat’s your win of the week sentence too\n\n\nseveral example prompts\n\n“What’s most important?”\n“What’s most interesting?”\n“what needs fixing?”\n…\n\n\nRecursive planning\n\nyou now need 3-5 points that:\n\nsupport/explain/make up your main point\neach point should be a simple sentence\n\n\nthen repeat: 3-5 points for each point, and so on\n\nyou should almost certainly stop one layer of detail before you think you’ve said enough\n\n\nTask: support your sentence\n\n“I managed to fix my booking system”\n\n“booking clinic slots was done manually”\n“that was slow and error-prone”\n“I used PowerAutomate + very strong language to automate it”\n“I had to learn to use Apply to Each to get that to work”\n“I am now thinking about automating my other clinic bookings”\n\n\nConstraints\n\ntake your plan, and chop it down to size by considering:\n\nhow long do you have to speak, exactly?\n\none point every two minutes is pretty good going\n\n\nhow long do you have to prepare?\n\nsee below…\n\n\nwho are your audience?\n\nthe less closely they’re related to your work, the less material you’re going to cover\n\n\nhow big is the audience?\n\nbigger = messier = less detail\n\n\n\n\nTech\n\nit’s hard to give general advice, but think carefully about your specific tech\ntech often malfunctions during presentations, so you might have a backup (e.g. what to do if you can’t show your slides?)\nyou’ll also be more likely to make mistakes with the tech when speaking"
  },
  {
    "objectID": "skills/presenting.html#be-keen",
    "href": "skills/presenting.html#be-keen",
    "title": "Presenting",
    "section": "Be keen",
    "text": "Be keen\n\nenthusiasm for your work, for your audience, and for what you’re presenting about is the easiest way to come off as knowledgeable and interesting\nplenty of preparation helps\nbut for most of us this is scary\nfake it with socially-approved cheating!\n\nexcited vs scared\nsmile, eye contact, and a bit of hand gesturing\nbuild yourself a few lines to say at the start. Introductions work well. Don’t be afraid of being blunt!\ngive yourself a sentence in and out of each slide/section\nbuild yourself some go-tos if you get stuck or the tech explodes\n\n\n\nPractice time!\n\nwe’ll work in pairs\nyou’ve got a sentence, and 3-5 supporting bits\nwe’re going to get you to present for two minutes only, no visual aids - just chat\nwe’ll pause here to let everyone put their sentences in order\nthen into pairs:\n\none minute to find your feet\ntwo minutes presenting\none minute of gentle, constructive, and positive feedback\nthen swap\n\n\nPrep time\n\nif you’re new at this, or it’s important, I would budget a huge amount of time to prepare\n\none hour preparation per minute of speaking (seriously)\n\n\nthis time isn’t for doing the work you’re presenting\n\nit’s just for planning the presentation\n\n\nbeware procrastination by optimization (especially making slides before you’ve decided what you’re going to say)\nSlides\n\nrecursive plan + pictures = slides\nfewer than 20 words per slide\nusual advice is 2 minutes per slide\nput your details at the start and end"
  },
  {
    "objectID": "skills/presenting.html#be-human",
    "href": "skills/presenting.html#be-human",
    "title": "Presenting",
    "section": "Be human",
    "text": "Be human\n\ndon’t try and cover everything\nabsolutely leave time for Q+A (and ideally a bit of random chat) at the end\ndon’t apologise, but do admit when things go wrong\n\nthere’s asymmetry here too: your clunker will look like a mini-hitch to the audience\n\n\n\nMake it easy for yourself"
  },
  {
    "objectID": "skills_main.html",
    "href": "skills_main.html",
    "title": "Skills training",
    "section": "",
    "text": "Session\nDate\nArea\nLevel"
  },
  {
    "objectID": "skills_main.html#skills-training-schedule",
    "href": "skills_main.html#skills-training-schedule",
    "title": "Skills training",
    "section": "",
    "text": "Session\nDate\nArea\nLevel"
  },
  {
    "objectID": "skills_main.html#skills-session-materials",
    "href": "skills_main.html#skills-session-materials",
    "title": "Skills training",
    "section": "Skills session materials",
    "text": "Skills session materials"
  },
  {
    "objectID": "tableau/KIND_TfB_s02.html",
    "href": "tableau/KIND_TfB_s02.html",
    "title": "Tableau for Beginners (session 2)",
    "section": "",
    "text": "Warning\n\n\n\n\n\nThis is currently a draft version of the materials for this training session, and so may contain minor errors and inaccuracies.\nNo feedback found for this session"
  },
  {
    "objectID": "tableau/KIND_TfB_s02.html#session-outline",
    "href": "tableau/KIND_TfB_s02.html#session-outline",
    "title": "Tableau for Beginners (session 2)",
    "section": "Session outline",
    "text": "Session outline\nVisualisation overload!\n\nwe’re going to build several visualisations\nwe’ll use some tidied data for this - today is all about using data to do interesting things\nnext time, we’ll get into the data wrangling needed to sort that data out"
  },
  {
    "objectID": "tableau/KIND_TfB_s02.html#session-files",
    "href": "tableau/KIND_TfB_s02.html#session-files",
    "title": "Tableau for Beginners (session 2)",
    "section": "Session files",
    "text": "Session files\n\ntwo Excel workbooks\n\ns02_service_data.xlsx - a service use dataset\ns02_gp_data.xlsx - a GP practice size dataset\n\n\nlink to completed dashboard"
  },
  {
    "objectID": "tableau/KIND_TfB_s02.html#todays-visualisations",
    "href": "tableau/KIND_TfB_s02.html#todays-visualisations",
    "title": "Tableau for Beginners (session 2)",
    "section": "Today’s visualisations",
    "text": "Today’s visualisations\n\nline graphs\nfiltering tools\nnumeric summaries of data\nmaps\ncolumn charts"
  },
  {
    "objectID": "tableau/KIND_TfB_s02.html#the-goal-for-this-week",
    "href": "tableau/KIND_TfB_s02.html#the-goal-for-this-week",
    "title": "Tableau for Beginners (session 2)",
    "section": "The goal for this week",
    "text": "The goal for this week"
  },
  {
    "objectID": "tableau/KIND_TfB_s02.html#data-loading",
    "href": "tableau/KIND_TfB_s02.html#data-loading",
    "title": "Tableau for Beginners (session 2)",
    "section": "Data loading",
    "text": "Data loading\n\nthis is a repeat of last week\n\n\n\n\n\n\n\nTask\n\n\n\n\ngo to https://public.tableau.com/app/\nselect Web Authoring from the Create menu  \n\nfrom the Data menu, select New Data Source \n\ndrag and drop (or use the upload button) to add the s02_service_data.xlsx file\ndrag the weekend_sh sheet into the data model"
  },
  {
    "objectID": "tableau/KIND_TfB_s02.html#service-use-data-weekend_sh",
    "href": "tableau/KIND_TfB_s02.html#service-use-data-weekend_sh",
    "title": "Tableau for Beginners (session 2)",
    "section": "Service use data (weekend_sh)",
    "text": "Service use data (weekend_sh)\n\n\n\n\n\n\nTask\n\n\n\n\nadd a worksheet  \n\ngo to that worksheet, and make a time-series graph from our data by dragging the Date and the Measure values fields to the shelf, and ensuring that data is set to Exact date: \n\nyou might also switch off the values to avoid clutter"
  },
  {
    "objectID": "tableau/KIND_TfB_s02.html#measure-value",
    "href": "tableau/KIND_TfB_s02.html#measure-value",
    "title": "Tableau for Beginners (session 2)",
    "section": "Measure Value",
    "text": "Measure Value\n\n\nMeasure Values are a default calculated field derived from your data. You can think of it as containing all your numeric values\n\nyou’ll see that you can edit what appears in your graph - and do please remove the CNT(weekend_sh), which is just counting values  \n\n\n\nthere’s also a Measure Names field which collects together all your measure names (like Excel column names)\n\nwhen we add Measure Values to our graph, the Measure Names appear in the Filters area"
  },
  {
    "objectID": "tableau/KIND_TfB_s02.html#add-a-filter",
    "href": "tableau/KIND_TfB_s02.html#add-a-filter",
    "title": "Tableau for Beginners (session 2)",
    "section": "Add a filter",
    "text": "Add a filter\n\n\n\n\n\n\nTask\n\n\n\n\ndrag the Date table into the Filters area. You’ll be asked to choose a way of filtering that data: select Range of Dates  \n\nthat will produce a filter preview:  \n\nadd it to your graph by selecting Show filter  \n\nnow repeat for the Weekend table"
  },
  {
    "objectID": "tableau/KIND_TfB_s02.html#a-digression-icons-dimensions-and-measures",
    "href": "tableau/KIND_TfB_s02.html#a-digression-icons-dimensions-and-measures",
    "title": "Tableau for Beginners (session 2)",
    "section": "A digression: icons, dimensions and measures",
    "text": "A digression: icons, dimensions and measures\n\nyou might have noticed that your fields have coloured icons:  \n\neach type of icon represents a data type (like text, numeric, etc)\nthe colours group those types into continuous/discrete: blue = discrete data, green = continuous data\n\n\n\nBut there’s also a Tableau-specific pair of terms in play here: Dimensions and Measures\n\nDimensions are (usually) qualitative categories used to control the level of detail shown - like our Measure Names\n\nMeasures are quantitative values, which make up the values shown on our visualisations - like our Site B"
  },
  {
    "objectID": "tableau/KIND_TfB_s02.html#numeric-summaries",
    "href": "tableau/KIND_TfB_s02.html#numeric-summaries",
    "title": "Tableau for Beginners (session 2)",
    "section": "Numeric summaries",
    "text": "Numeric summaries\n\n\n\n\n\n\nTask\n\n\n\n\nstart a new worksheet  \n\nour dimension for the summary will be Weekend - drag that to the Columns shelf\nour measure for the summary will be our several site columns - so (as before) add the Measure Names to the Rows shelf, and then the Measure Values to the Text mark  \n\ndo minor surgery:\n\nremove the count of weekend days  \n\nproduce an average  \n\nformat the numbers appropriately  \n\nimprove the worksheet title"
  },
  {
    "objectID": "tableau/KIND_TfB_s02.html#putting-everything-together",
    "href": "tableau/KIND_TfB_s02.html#putting-everything-together",
    "title": "Tableau for Beginners (session 2)",
    "section": "Putting everything together",
    "text": "Putting everything together\n\nwe’ll use a dashboard to assemble the plot, and the summary table\n\n\n\n\n\n\n\nTask\n\n\n\n\ncreate a new dashboard from the row at the bottom of the screen\ndouble-click your Sheet 1 to add the graph  \n\nyou can then drag your Sheet 2 into the blank space under the filters to add your summary table  \n\nyou might also take the chance to rename your graph (and the dashboard as a whole) to something less drab:  \n\nfinally, hit publish and check your dashboard online in your profile"
  },
  {
    "objectID": "tableau/KIND_TfB_s02.html#gp-practice-size",
    "href": "tableau/KIND_TfB_s02.html#gp-practice-size",
    "title": "Tableau for Beginners (session 2)",
    "section": "GP practice size",
    "text": "GP practice size\n\nthis dashboard shows Scotland’s GP practices\nit’s based on the GP Practice Contact Details and List Sizes dataset published by Public Health Scotland\n\n\n\n\n\n\n\nTask\n\n\n\n\nselect New Data Source from the menu  \n\nfrom the s02_gp_data.xlsx file, add gp_size_sh to your data and start a new worksheet\ndrag the Latitude and Longitude fields to the column/row shelf. Avoid the Latitude (generated) and Longitude (generated) fields - they won’t work properly\nnow drag the size List Size measure to the Size part of Marks \nYou might want to twiddle the Mark Size option to make sure your practices appear at the right scale  \n\n\n\ndrag the HB Name dimension to the Colour part of Marks\n\nfinally, drag the Name field to the Detail part of Marks\n\n\n\n\n\n\n\n\n\n\nAbout postcodes\n\n\n\n\n\nNote that Tableau Public doesn’t play nicely with UK postcodes. It will recognise them, but they won’t plot properly on a map. British postcodes, properly speaking, don’t describe a location at all. Instead, they’re just code numbers for different buildings. Here, we estimate the position of each postcode by taking an average of the location of each building to which it refers. That’s known as a centroid, and this data contains latitude and longitude data for each postcode centroid, which is produced using the PostcodesioR R package."
  },
  {
    "objectID": "tableau/KIND_TfB_s02.html#why-not-add-both-datasets-at-once",
    "href": "tableau/KIND_TfB_s02.html#why-not-add-both-datasets-at-once",
    "title": "Tableau for Beginners (session 2)",
    "section": "Why not add both datasets at once?",
    "text": "Why not add both datasets at once?\n\nif you add several datasets in one go, Tableau will automatically try to create relationships between them, and (in Tableau Public at least) it doesn’t seem possible to avoid this happening\nin this case, we definitely don’t want this to happen. Our made-up service data, and our real GP data, don’t share anything in common\nso adding a new data source once we’ve already done some work on the data is a hack-y way of giving you two independent data sources without pain"
  },
  {
    "objectID": "tableau/KIND_TfB_s02.html#adding-a-column-graph-of-practice-sizes",
    "href": "tableau/KIND_TfB_s02.html#adding-a-column-graph-of-practice-sizes",
    "title": "Tableau for Beginners (session 2)",
    "section": "Adding a column graph of practice sizes",
    "text": "Adding a column graph of practice sizes\n\n\n\n\n\n\nTask\n\n\n\n\nas usual, make a new sheet\nadd:\n\nthe Name field to the Columns shelf\n\nList Size to Rows\n\n\nHB Name to Colour  \n\n\n\nthen adjust the Sort option in Name to arrange your practices in descending order of size  \n\nyou might also like to filter the Name field to just show the largest 50 practices \n\nFinally, add both this worksheet and your map to a new dashboard page"
  },
  {
    "objectID": "tableau/KIND_TfB_s02.html#homework-tasks",
    "href": "tableau/KIND_TfB_s02.html#homework-tasks",
    "title": "Tableau for Beginners (session 2)",
    "section": "Homework tasks",
    "text": "Homework tasks\n\nIs there any relationship between practice size and SIMD2020 deprivation scores in the GP data? How could you show that relationship in a visual?\nIs there any month-to-month or seasonal change in the weekend service use data? How could you show that relationship in a visual?"
  },
  {
    "objectID": "tableau/KIND_TfB_s04.html",
    "href": "tableau/KIND_TfB_s04.html",
    "title": "Tableau for Beginners (session 4)",
    "section": "",
    "text": "Warning\n\n\n\n\n\nThis is currently a draft version of the materials for this training session, and so may contain minor errors and inaccuracies.\nNo feedback found for this session"
  },
  {
    "objectID": "tableau/KIND_TfB_s04.html#session-outline",
    "href": "tableau/KIND_TfB_s04.html#session-outline",
    "title": "Tableau for Beginners (session 4)",
    "section": "Session outline",
    "text": "Session outline\n\nIn this session, we’re going to build out the GP practice size dashboard from last time\nwe’re going to use some new features of Tableau to help us with that\n\nCalculated Fields\nTable calculations\nLevel of Detail (LOD) expressions"
  },
  {
    "objectID": "tableau/KIND_TfB_s04.html#session-files",
    "href": "tableau/KIND_TfB_s04.html#session-files",
    "title": "Tableau for Beginners (session 4)",
    "section": "Session files",
    "text": "Session files\n\nfour .csv files\n\n\n1 - practices.csv from PHS’s opendata portal\n\n\n2 - boards.csv rom PHS’s opendata portal\n\n\n3b - demographics_p.csv pivoted data from PHS’s opendata portal\n\n\n4 - postcodes.csv from the Scottish Postcode Directory - although note that the supplied file is a small subset of this larger directory"
  },
  {
    "objectID": "tableau/KIND_TfB_s04.html#getting-started",
    "href": "tableau/KIND_TfB_s04.html#getting-started",
    "title": "Tableau for Beginners (session 4)",
    "section": "Getting started",
    "text": "Getting started\n\n\n\n\n\n\nTask\n\n\n\n\n\nfind your dashboard from last time\n\nor create a new dashboard based on the following four data sources for this week \n\n\n\ncreate a new, empty, worksheet"
  },
  {
    "objectID": "tableau/KIND_TfB_s04.html#calculated-fields",
    "href": "tableau/KIND_TfB_s04.html#calculated-fields",
    "title": "Tableau for Beginners (session 4)",
    "section": "Calculated Fields",
    "text": "Calculated Fields\n\n\nCalculated Fields are the basic tool used to summarize data in Tableau\nlet’s start with a simple example: how big is the largest GP practice?\nwe’ll answer that by writing a simple formula: MAX([Practice List Size])\n\n\nMAX is a function that finds the largest value in some data\n\n[Practice List Size] refers to one of our columns of data"
  },
  {
    "objectID": "tableau/KIND_TfB_s04.html#max",
    "href": "tableau/KIND_TfB_s04.html#max",
    "title": "Tableau for Beginners (session 4)",
    "section": "MAX()",
    "text": "MAX()\n\n\n\n\n\n\nTask\n\n\n\n\nright-click your Practice List Size field, and select Create &gt; Calculated Field... \n\nname your Calculated Field largest_practice\n\nthen use the following (case sensitive) formula to calculate the largest practice: MAX([Practice List Size])"
  },
  {
    "objectID": "tableau/KIND_TfB_s04.html#finding-your-calculated-fields",
    "href": "tableau/KIND_TfB_s04.html#finding-your-calculated-fields",
    "title": "Tableau for Beginners (session 4)",
    "section": "Finding your calculated fields",
    "text": "Finding your calculated fields\n\nnote that your new largest_practice field will show up at the very bottom of your sets of data: \n\nnote too the equals sign in the icon, indicating a calculated field"
  },
  {
    "objectID": "tableau/KIND_TfB_s04.html#min",
    "href": "tableau/KIND_TfB_s04.html#min",
    "title": "Tableau for Beginners (session 4)",
    "section": "MIN()",
    "text": "MIN()\n\n\n\n\n\n\nTask\n\n\n\n\nnow repeat to find the smallest practice using MIN()"
  },
  {
    "objectID": "tableau/KIND_TfB_s04.html#count",
    "href": "tableau/KIND_TfB_s04.html#count",
    "title": "Tableau for Beginners (session 4)",
    "section": "COUNT()",
    "text": "COUNT()\n\n\n\n\n\n\nTask\n\n\n\n\nnow repeat to find the number of practices using COUNT()"
  },
  {
    "objectID": "tableau/KIND_TfB_s04.html#avg",
    "href": "tableau/KIND_TfB_s04.html#avg",
    "title": "Tableau for Beginners (session 4)",
    "section": "AVG()",
    "text": "AVG()\n\n\n\n\n\n\nTask\n\n\n\n\nfinally, find the average practice size using AVG()"
  },
  {
    "objectID": "tableau/KIND_TfB_s04.html#adding-calculated-fields-to-worksheets",
    "href": "tableau/KIND_TfB_s04.html#adding-calculated-fields-to-worksheets",
    "title": "Tableau for Beginners (session 4)",
    "section": "Adding calculated fields to worksheets",
    "text": "Adding calculated fields to worksheets\n\n\n\n\n\n\nTask\n\n\n\n\nDrag any one of your new calculated fields to Text Marks, then add HB Name to the column shelf: \nthen (in a slightly quirky way) you should be able to add each calculation by double-clicking the name of the calculated field:"
  },
  {
    "objectID": "tableau/KIND_TfB_s04.html#finding-functions",
    "href": "tableau/KIND_TfB_s04.html#finding-functions",
    "title": "Tableau for Beginners (session 4)",
    "section": "Finding functions",
    "text": "Finding functions\n\nfrom the right-click menu, you can edit calculations \n\nnote that the right-hand edge of the calculation interface contains a mini help section for the available functions"
  },
  {
    "objectID": "tableau/KIND_TfB_s04.html#combining-functions",
    "href": "tableau/KIND_TfB_s04.html#combining-functions",
    "title": "Tableau for Beginners (session 4)",
    "section": "Combining functions",
    "text": "Combining functions\n\nwe can use several functions in a formula to do interesting analytic work\nwe’ll look at three helpers for combining functions:\n\nbrackets\n+\nSTR()"
  },
  {
    "objectID": "tableau/KIND_TfB_s04.html#brackets",
    "href": "tableau/KIND_TfB_s04.html#brackets",
    "title": "Tableau for Beginners (session 4)",
    "section": "Brackets",
    "text": "Brackets\n\nyou can combine several functions together with brackets\nthe functions will run from the inside-out:\n\n\nROUND(AVG([dat])) will:\n\naverage [dat], then\nround that result\n\n\n\n\n\n\n\n\n\n\n\nTask\n\n\n\n\ntry making a rounded average of practice list size to the nearest 100\nROUND(AVG([Practice List Size]), -2)"
  },
  {
    "objectID": "tableau/KIND_TfB_s04.html#section",
    "href": "tableau/KIND_TfB_s04.html#section",
    "title": "Tableau for Beginners (session 4)",
    "section": "+",
    "text": "+\n\n\n+ joins text values together\n\n\n\n\n\n\n\nTask\n\n\n\n\ncreate a new sheet with HB Name on the Rows shelf\nthen create a new calculation with the formula \"The first practice name is \" + MIN([GP Practice Name])\n\nadd that calcuation to Text Marks\n\nyou may need to play with the Fit menu to see your results:"
  },
  {
    "objectID": "tableau/KIND_TfB_s04.html#str",
    "href": "tableau/KIND_TfB_s04.html#str",
    "title": "Tableau for Beginners (session 4)",
    "section": "STR()",
    "text": "STR()\n\nif you try to use + to add text to numeric calculations, you’ll run into a problem\n\nSTR() converts numbers to text\n\n\n\n\n\n\n\nTask\n\n\n\n\ntry \"The smallest practice has \" + STR(MIN([Practice List Size])) + \" patients\""
  },
  {
    "objectID": "tableau/KIND_TfB_s04.html#if-and-friends",
    "href": "tableau/KIND_TfB_s04.html#if-and-friends",
    "title": "Tableau for Beginners (session 4)",
    "section": "\nIF and friends",
    "text": "IF and friends\n\nIF something THEN action1 ELSE action2 END\nELSEIF something else THEN action2\nIFF(something, action1, action2)"
  },
  {
    "objectID": "tableau/KIND_TfB_s04.html#table-calculations",
    "href": "tableau/KIND_TfB_s04.html#table-calculations",
    "title": "Tableau for Beginners (session 4)",
    "section": "Table calculations",
    "text": "Table calculations\n\nTable calculations are calculations on visualizations, rather than the underlying data\nWe’ll run through a quick table calculation now"
  },
  {
    "objectID": "tableau/KIND_TfB_s04.html#quick-table-calculations",
    "href": "tableau/KIND_TfB_s04.html#quick-table-calculations",
    "title": "Tableau for Beginners (session 4)",
    "section": "Quick table calculations",
    "text": "Quick table calculations\n\n\n\n\n\n\nTask\n\n\n\n\nbuild a new sheet with largest and smallest practices by board \n\nright-click your largest_practice calculation, and select Quick Table Calculation &gt; Rank \n\nthat converts largest_practice to display as a rank between 1 and 14\n\n\n\n\nclear the table calculations from the right-click menu:"
  },
  {
    "objectID": "tableau/KIND_TfB_s04.html#level-of-detail-calculations",
    "href": "tableau/KIND_TfB_s04.html#level-of-detail-calculations",
    "title": "Tableau for Beginners (session 4)",
    "section": "Level of detail calculations",
    "text": "Level of detail calculations\n\nLoD calculations allow you to control the level of detail that your calculations work at\nthis is just a taster as this gets into advanced (and messy) territory pretty fast\n\n\n\n\n\n\n\nTask\n\n\n\n\ncreate a table showing the average of each demographic group per NHS board:\n\nnow add a LoD calculation that will show the average for each attribute bracket for Scotland overall using {FIXED [Attribute] : AVG([Value])}: \n\n\n\n\nThat gives us a slightly messy way of benchmarking our average for our bracket within a board to the bracket nationally: \nWe could also try the more ambitious:\nAVG([Value]) / ATTR({FIXED [Attribute] : AVG([Value])})\n(you need the ATTR function to trick Tableau into mixing and matching these different values)"
  }
]