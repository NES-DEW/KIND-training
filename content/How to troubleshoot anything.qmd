---
output: html_document
editor_options: 
  chunk_output_type: console
---

## Introduction

+ there are lots of ways that data tools can go wrong
+ this session is about building your troubleshooting skills: helping you identify and fix problems
+ most troubleshooting skills are **generic**: if you're able to use them for one tool, you can apply them to another tool
+ technical/specific knowledge is important too
+ troubleshooting skills are distinct from learning how to do new things
  + but you'll often encounter them together

## "I've got a problem"

+ most problems fit into a few families:
    + glitches
    + doesn't work at all
    + starts to work, but stops / goes wrong
    + seems to works, but gives the wrong result
    
## Discovering when a problem has happened

+ can be surprisingly hard: not all errors are obvious
+ testing is highly recommended/essential: do you know what you're expecting to see?
+ testing can be as simple as having a few rows of sample data that you use to build your formulas that you hand-check
+ especially important for projects with long life-spans etc

## "What happened?"

+ the most important lesson here: troubleshooting is nearly all about learning how to describe what's gone wrong
+ by definition, most problems are common problems
+ help is almost always out there 
+ that doesn't mean that help is always easy to find
+ it also doesn't mean that finding help is always needed...

## The glitch

+ glitch = minor, temporary, self-resolving error
+ glitches are common

## Irrational fixes

+ before doing anything clever, it's always worth trying...
    + to do the task again
    + do something else, then try again
    + restart the software and try again
    + restart your computer and try again

::: {.notes}
these irrational fixes nearly exhaust what you can do with glitches or when x doesn't work at all
:::

## "Was there an error message?"

+ error messages are good news!
+ but they can require specialist skills to interpret - they're generally written in an excessively technical way of most of us
+ even if they look scary **skim the error message for any words you might recognise**. With a bit of sifting, error messages often contain solutions
+ copy the message, and do a quick search online

## "When did it happen?"

+ try to reproduce the error in a different spreadsheet/project/file
+ keep things simple: isolate the broken bit with as little other stuff as possible
+ this helps you understand the error
    + it also gives you a reprex - a minimal **rep**roducible **ex**ample that you can send to people (on the KIND network etc)


## Searching for help

* start with the error message itself
* failing that, include as much specific information in your search as you can
* `site: stackoverflow.com`
* depending on your local rules, you might also put that into genAI and ask for explanation

## Asking for help

+ don't share anything naughty
+ say that you've done the basics (retrying, restarting, etc)
+ tell us what happened vs what you expected to happen
+ be specific and concise: screenshots and error messages really help your helpers
+ reproducible examples will make you a lot of friends, and get you a lot of help


